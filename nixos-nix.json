{
    "version": "https://jsonfeed.org/version/1",
    "title": "NixOS Packages PRs for nix",
    "home_page_url": "${BASE_URL}/nixos-nix.json",
    "feed_url": "${BASE_URL}/nixos-nix.json",
    "description": "NixOS Packages PRs for nix on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/341954?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h6 dir=\"auto\">Description of changes</h6>\n<p dir=\"auto\">This allows NixOS modules to take <code class=\"notranslate\">inputs</code> as an extra argument. This may be useful for feeding version information into other config.</p>\n<p dir=\"auto\">For example, I use this to inform a module which exposes a prometheus metric on the date of the nixpkgs version used to build the system (slightly abridged):</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{ pkgs, config, inputs, ... }: {\n  services.nginx.enable = true;\n  services.nginx.virtualHosts.&quot;prometheus&quot;.root = pkgs.writeTextDir &quot;/metrics&quot; ''\n    # HELP nixpkgs_date The timestamp of the last modification on the nixpkgs flake input used to build the system.\n    # TYPE nixpkgs_date gauge\n    nixpkgs_date ${toString inputs.nixpkgs.sourceInfo.lastModified}\n  '';\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">{ pkgs, config, inputs, ... }: {\n  services.nginx.enable = true;\n  services.nginx.virtualHosts.\"prometheus\".root = pkgs.writeTextDir \"/metrics\" ''\n    # HELP nixpkgs_date The timestamp of the last modification on the nixpkgs flake input used to build the system.\n    # TYPE nixpkgs_date gauge\n    nixpkgs_date ${toString inputs.nixpkgs.sourceInfo.lastModified}\n  '';\n}\n</code></pre></div>\n<p dir=\"auto\">This is mostly a convenience feature. Downstream flakes were already able to set specialArgs.inputs themselves, but this makes obtaining correct nixpkgs version information even in a flake which uses multiple different nixpkgs versions a little more elegant.</p>\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> For non-Linux: Is <code class=\"notranslate\">sandbox = true</code> set in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2305-release-notes\">23.05 Release Notes (or backporting 22.11 Release notes)</a>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n",
            "url": "https://github.com/NixOS/nixpkgs/pull/224471",
            "title": "flake.nix: provide nixpkgs used to build nixos to modules",
            "date_modified": "2023-04-27T08:14:46.000Z",
            "date_published": "2023-04-03T12:27:31.000Z",
            "author": {
                "name": "lheckemann",
                "url": "https://github.com/lheckemann"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2212681?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Notable upgrades:</p>\n<ul dir=\"auto\">\n<li>Go <code class=\"notranslate\">1.18.6</code> to <code class=\"notranslate\">1.18.9</code></li>\n<li>NodeJS <code class=\"notranslate\">16.17.1</code> to <code class=\"notranslate\">16.18.1</code></li>\n<li>Clojure <code class=\"notranslate\">1.11.1.1165</code> to <code class=\"notranslate\">1.11.1.1200</code></li>\n<li>Bundler <code class=\"notranslate\">2.3.22</code> to <code class=\"notranslate\">2.3.26</code></li>\n<li>Git <code class=\"notranslate\">2.37.3</code> to <code class=\"notranslate\">2.38.3</code></li>\n<li>Curl <code class=\"notranslate\">7.85.0</code> to <code class=\"notranslate\">7.86.0</code></li>\n<li>OpenSSL <code class=\"notranslate\">3.0.5</code> to <code class=\"notranslate\">3.0.7</code></li>\n</ul>",
            "url": "https://github.com/status-im/status-mobile/pull/14944",
            "title": "[WIP] nix: upgrade nixpkgs to latest nixos-22.11",
            "date_modified": "2023-04-17T09:03:00.000Z",
            "date_published": "2023-01-31T17:23:07.000Z",
            "author": {
                "name": "jakubgs",
                "url": "https://github.com/jakubgs"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/26458780?u=9f3dadba15320c7418fd534044c8ec4f33bfa5d2&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h6 dir=\"auto\">Description of changes</h6>\n<p dir=\"auto\">Inspired by a long twitter discussion <a href=\"https://twitter.com/winnypi/status/1650316607237808128\" rel=\"nofollow\">https://twitter.com/winnypi/status/1650316607237808128</a></p>\n\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> For non-Linux: Is <code class=\"notranslate\">sandbox = true</code> set in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2305-release-notes\">23.05 Release Notes (or backporting 22.11 Release notes)</a>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n",
            "url": "https://github.com/NixOS/nixpkgs/pull/227910",
            "title": "nixos/nix-daemon: set nixpkgs=${pkgs.path} when in pure eval mode",
            "date_modified": "2023-04-26T16:02:44.000Z",
            "date_published": "2023-04-24T02:08:34.000Z",
            "author": {
                "name": "MatthewCroughan",
                "url": "https://github.com/MatthewCroughan"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/34083928?u=c672292f80ef76ab91078df4464ff3398724be68&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h6 dir=\"auto\">Description of changes</h6>\n<p dir=\"auto\">On a given NixOS system, if a user discovers the <code class=\"notranslate\">nix.registry</code> option, they may wish to set the nixpkgs of their system as a pin for convenience, and rightfully so.</p>\n<p dir=\"auto\">However, pinning the global nixpkgs to a <code class=\"notranslate\">/nix/store</code> path can wreak havoc with the lockfile of any other flake with an indirect reference to nixpkgs, borking it for anyone who tries to call it remotely.</p>\n<p dir=\"auto\">This is simply bad UX. It should be hard to do the wrong thing, but this is nearly inevitable.</p>\n<p dir=\"auto\">Instead of expecting the user to discover this on their own, we should offer them the convenience of a pinning of their system's nixpkgs as <code class=\"notranslate\">nixos</code> and encourage them to use it as their \"goto\" nixpkgs, analogous to <code class=\"notranslate\">&lt;nixpkgs&gt;</code> in \"pre-flake\" material, but more precise.</p>\n<p dir=\"auto\">Since we can expect this reference to exist we can always point to it in documentation and reference material.</p>\n<p dir=\"auto\">Anecdotally, I don't think we want a users first impression of a flakes based NixOS system to be that <code class=\"notranslate\">nix shell nixpkgs#*</code> always seems to redownload the world, and if they are keen enough to quickly discover the root cause and attempt to address it with <code class=\"notranslate\">nix.registry.nixpkgs.flake</code> they will run into an even trickier, opaque breakage.</p>\n<p dir=\"auto\">This is also consistent with the previous channels semantic, where on nixos the system channel was labeled <code class=\"notranslate\">nixos</code>, and on other systems it was <code class=\"notranslate\">nixpkgs</code>.</p>\n\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Always pin a <code class=\"notranslate\">nixos</code> flake reference in the NixOS system registry, pointing to the nixpkgs used to evaluate the system.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Documentation</li>\n</ul>\n",
            "url": "https://github.com/NixOS/nixpkgs/pull/197424",
            "title": "flake.nix: NixOS `nixpkgs` registry pin as `nixos`",
            "date_modified": "2022-12-07T18:11:20.000Z",
            "date_published": "2022-10-23T19:52:50.000Z",
            "author": {
                "name": "nrdxp",
                "url": "https://github.com/nrdxp"
            }
        }
    ]
}