{
    "version": "https://jsonfeed.org/version/1",
    "title": "NixOS Package PRs for qc, spectacle, keepassxc, pipewire, bind-9.18.14, bcache-tools packages",
    "home_page_url": "https://pbek.github.io/github-search-rss/nixos-packages-42.json",
    "feed_url": "https://pbek.github.io/github-search-rss/nixos-packages-42.json",
    "description": "NixOS Package PRs for qc, spectacle, keepassxc, pipewire, bind-9.18.14, bcache-tools packages on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/37933096?u=b11a857efbc669246eb43904472627625dcdbbdb&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Automatic update generated by <a href=\"https://github.com/ryantm/nixpkgs-update\">nixpkgs-update</a> tools. This update was made based on information from <a href=\"https://repology.org/project/pipewire/versions\" rel=\"nofollow\">https://repology.org/project/pipewire/versions</a>.</p>\n<p dir=\"auto\">meta.description for pipewire is: Server and user space API to deal with multimedia pipelines</p>\n<p dir=\"auto\">meta.homepage for pipewire is: <a href=\"https://pipewire.org/\" rel=\"nofollow\">https://pipewire.org/</a></p>\n<p dir=\"auto\">meta.changelog for pipewire is: <a href=\"https://gitlab.freedesktop.org/pipewire/pipewire/-/releases/1.0.1\" rel=\"nofollow\">https://gitlab.freedesktop.org/pipewire/pipewire/-/releases/1.0.1</a></p>\n<h6 dir=\"auto\">Updates performed</h6>\n<ul dir=\"auto\">\n<li>Version update</li>\n</ul>\n<h6 dir=\"auto\">To inspect upstream changes</h6>\n<h6 dir=\"auto\">Impact</h6>\n<p dir=\"auto\"><b>Checks done</b></p>\n<hr>\n<ul dir=\"auto\">\n<li>built on NixOS</li>\n<li>Warning: a test defined in <code class=\"notranslate\">passthru.tests</code> did not pass</li>\n<li>found 1.0.1 with grep in /nix/store/avq8fyg0j6idmv7gvnrkf98vwkajzxki-pipewire-1.0.1</li>\n<li>found 1.0.1 in filename of file in /nix/store/avq8fyg0j6idmv7gvnrkf98vwkajzxki-pipewire-1.0.1</li>\n</ul>\n<hr>\n<details>\n<summary>\n<b>Rebuild report</b> (if merged into master) (click to expand)\n</summary>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"3248 total rebuild path(s)\n\n3248 package rebuild(s)\n\nFirst fifty rebuilds by attrpath\nCHOWTapeModel\nChowKick\nCuboCore.corepdf\nCuboCore.coretoppings\nEmptyEpsilon\nMIDIVisualizer\nMMA\nPageEdit\nSDL2\nSDL2_Pango\nSDL2_gfx\nSDL2_image\nSDL2_image_2_0_5\nSDL2_mixer\nSDL2_mixer_2_0\nSDL2_net\nSDL2_sound\nSDL2_ttf\nSDL_audiolib\nSDL_compat\nSDL_gpu\nSylk\n_1oom\n_20kly\n_7kaa\n_86Box\n_90secondportraits\naaxtomp3\nabbaye-des-morts\nabracadabra\nactivitywatch\nadapta-gtk-theme\nadl\nadriconf\naegisub\naitrack\najour\nakkoma\nalass\nalephone\nalfaview\nalfis\nallegro\nallegro4\nallegro5\nalmanah\nalsa-scarlett-gui\nalsa-utils\naltair\nalure\"><pre class=\"notranslate\"><code class=\"notranslate\">3248 total rebuild path(s)\n\n3248 package rebuild(s)\n\nFirst fifty rebuilds by attrpath\nCHOWTapeModel\nChowKick\nCuboCore.corepdf\nCuboCore.coretoppings\nEmptyEpsilon\nMIDIVisualizer\nMMA\nPageEdit\nSDL2\nSDL2_Pango\nSDL2_gfx\nSDL2_image\nSDL2_image_2_0_5\nSDL2_mixer\nSDL2_mixer_2_0\nSDL2_net\nSDL2_sound\nSDL2_ttf\nSDL_audiolib\nSDL_compat\nSDL_gpu\nSylk\n_1oom\n_20kly\n_7kaa\n_86Box\n_90secondportraits\naaxtomp3\nabbaye-des-morts\nabracadabra\nactivitywatch\nadapta-gtk-theme\nadl\nadriconf\naegisub\naitrack\najour\nakkoma\nalass\nalephone\nalfaview\nalfis\nallegro\nallegro4\nallegro5\nalmanah\nalsa-scarlett-gui\nalsa-utils\naltair\nalure\n</code></pre></div>\n</details>\n<details>\n<summary>\n<b>Instructions to test this update</b> (click to expand)\n</summary>\n<hr>\n<p dir=\"auto\">Either <strong>download from Cachix</strong>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"nix-store -r /nix/store/avq8fyg0j6idmv7gvnrkf98vwkajzxki-pipewire-1.0.1 \\\n  --option binary-caches 'https://cache.nixos.org/ https://nix-community.cachix.org/' \\\n  --option trusted-public-keys '\n  nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=\n  cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=\n  '\"><pre class=\"notranslate\"><code class=\"notranslate\">nix-store -r /nix/store/avq8fyg0j6idmv7gvnrkf98vwkajzxki-pipewire-1.0.1 \\\n  --option binary-caches 'https://cache.nixos.org/ https://nix-community.cachix.org/' \\\n  --option trusted-public-keys '\n  nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=\n  cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=\n  '\n</code></pre></div>\n<p dir=\"auto\">(The Cachix cache is only trusted for this store-path realization.)<br>\nFor the Cachix download to work, your user must be in the <code class=\"notranslate\">trusted-users</code> list or you can use <code class=\"notranslate\">sudo</code> since root is effectively trusted.</p>\n<p dir=\"auto\">Or, <strong>build yourself</strong>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"nix-build -A pipewire https://github.com/r-ryantm/nixpkgs/archive/182459799640e0ac73d2d98eceb779c585ad3192.tar.gz\"><pre class=\"notranslate\"><code class=\"notranslate\">nix-build -A pipewire https://github.com/r-ryantm/nixpkgs/archive/182459799640e0ac73d2d98eceb779c585ad3192.tar.gz\n</code></pre></div>\n<p dir=\"auto\">Or:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"nix build github:r-ryantm/nixpkgs/182459799640e0ac73d2d98eceb779c585ad3192#pipewire\"><pre class=\"notranslate\"><code class=\"notranslate\">nix build github:r-ryantm/nixpkgs/182459799640e0ac73d2d98eceb779c585ad3192#pipewire\n</code></pre></div>\n<p dir=\"auto\">After you've downloaded or built it, look at the files and if there are any, run the binaries:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"ls -la /nix/store/avq8fyg0j6idmv7gvnrkf98vwkajzxki-pipewire-1.0.1\nls -la /nix/store/avq8fyg0j6idmv7gvnrkf98vwkajzxki-pipewire-1.0.1/bin\"><pre class=\"notranslate\"><code class=\"notranslate\">ls -la /nix/store/avq8fyg0j6idmv7gvnrkf98vwkajzxki-pipewire-1.0.1\nls -la /nix/store/avq8fyg0j6idmv7gvnrkf98vwkajzxki-pipewire-1.0.1/bin\n</code></pre></div>\n<hr>\n</details>\n<br>\n<h3 dir=\"auto\">Pre-merge build results</h3>\n<p dir=\"auto\">NixPkgs review skipped</p>\n<hr>\n<h6 dir=\"auto\">Maintainer pings</h6>\n<p dir=\"auto\">cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Kranzes/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Kranzes\">@Kranzes</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/K900/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/K900\">@K900</a> for <a href=\"https://github.com/ryantm/nixpkgs-update/blob/master/doc/nixpkgs-maintainer-faq.md#r-ryantm-opened-a-pr-for-my-package-what-do-i-do\">testing</a>.</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/280413",
            "title": "pipewire: 1.0.0 -> 1.0.1",
            "date_modified": "2024-01-12T04:57:50.000Z",
            "date_published": "2024-01-12T04:39:57.000Z",
            "author": {
                "name": "r-ryantm",
                "url": "https://github.com/r-ryantm"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/848000?u=2cd7ee50ceea54c0d9d8b761c7e8ce465d561f42&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Description of changes</h2>\n<p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #273205.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2034082738\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/273205\" data-hovercard-type=\"issue\" data-hovercard-url=\"/NixOS/nixpkgs/issues/273205/hovercard\" href=\"https://github.com/NixOS/nixpkgs/issues/273205\">#273205</a></p>\n\n<h2 dir=\"auto\">Things done</h2>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li>For non-Linux: Is sandboxing enabled in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = relaxed</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = true</code></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2405.section.md\">24.05 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2305.section.md\">23.05</a> and <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11</a> Release notes)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n\n<hr>\n<p dir=\"auto\">Add a 👍 <a href=\"https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\" rel=\"nofollow\">reaction</a> to <a href=\"https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc\">pull requests you find important</a>.</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/273575",
            "title": "obs-studio: fix build with alsa/pulseaudio/pipewire support disabled",
            "date_modified": "2024-01-11T23:04:47.000Z",
            "date_published": "2023-12-11T15:32:56.000Z",
            "author": {
                "name": "eclairevoyant",
                "url": "https://github.com/eclairevoyant"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/8373222?u=c9768d5d2e315445777624bce59624168b91b3ec&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h6 dir=\"auto\">Description of changes</h6>\n<p dir=\"auto\">Since <a href=\"https://github.com/FluidSynth/fluidsynth/releases/tag/v2.3.0\">version 2.3.0</a>, <code class=\"notranslate\">fluidsynth</code> includes a <code class=\"notranslate\">pipewire</code> audio driver. In fact, it's configured to build with <code class=\"notranslate\">pipewire</code> driver support by default, but it needs to be able to find <code class=\"notranslate\">libpipewire</code> during configuration of course. This PR just includes <code class=\"notranslate\">libpipewire</code> so nix now builds <code class=\"notranslate\">fluidsynth</code> with the <code class=\"notranslate\">pipewire</code> driver.</p>\n<p dir=\"auto\">(Note: I had hoped that including <code class=\"notranslate\">pipewire.lib</code> in <code class=\"notranslate\">buildInputs</code> would have worked, but only <code class=\"notranslate\">pipewire</code> worked, not <code class=\"notranslate\">pipewire.lib</code>.)</p>\n<p dir=\"auto\">I wasn't able to run <code class=\"notranslate\">nixpkgs-review</code>, since evulation took up so much memory it blew up my 32GB workstation.</p>\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> For non-Linux: Is <code class=\"notranslate\">sandbox = true</code> set in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2305-release-notes\">23.05 Release Notes (or backporting 22.11 Release notes)</a>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>",
            "url": "https://github.com/NixOS/nixpkgs/pull/225076",
            "title": "fluidsynth: include libpipewire for pipewire audio driver",
            "date_modified": "2023-12-01T11:19:17.000Z",
            "date_published": "2023-04-07T00:03:38.000Z",
            "author": {
                "name": "romatthe",
                "url": "https://github.com/romatthe"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/51162078?u=f0e80eda57bdc88c5cf1007c77e5e0b3d0096b29&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h6 dir=\"auto\">Description of changes</h6>\n<p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #243147.\">close</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1801764449\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/243147\" data-hovercard-type=\"issue\" data-hovercard-url=\"/NixOS/nixpkgs/issues/243147/hovercard\" href=\"https://github.com/NixOS/nixpkgs/issues/243147\">#243147</a></p>\n\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> For non-Linux: Is <code class=\"notranslate\">sandbox = true</code> set in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2305.section.md\">23.05 Release notes</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n",
            "url": "https://github.com/NixOS/nixpkgs/pull/244538",
            "title": "pipewire-screenaudio: init at 0.3.2",
            "date_modified": "2023-11-04T19:35:16.000Z",
            "date_published": "2023-07-20T18:06:28.000Z",
            "author": {
                "name": "IceDBorn",
                "url": "https://github.com/IceDBorn"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/42246742?u=d2087543b3df8d095e7dbe30a09d9a665a02faf9&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Description of changes</h2>\n<p dir=\"auto\">In order to successfully connect bluetooth audio devices, pipewire must be running already which it might not when socketActivation is enabled.<br>\n-&gt; disabling socketActivation is a better default as it provides the more stable user experience</p>\n\n<h2 dir=\"auto\">Things done</h2>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> For non-Linux: Is <code class=\"notranslate\">sandbox = true</code> set in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2305.section.md\">23.05 Release notes</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n",
            "url": "https://github.com/NixOS/nixpkgs/pull/256110",
            "title": "nixos/pipewire: disable socket activation by default",
            "date_modified": "2023-10-06T12:04:18.000Z",
            "date_published": "2023-09-19T13:07:31.000Z",
            "author": {
                "name": "DavHau",
                "url": "https://github.com/DavHau"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2472678?u=2d34d9574486602814f270be24dde4356a2ade17&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">The NixOS pipewire module places its alsa compatiblity configuration in<br>\n/etc/alsa/conf.d/ instead of /etc/asound.conf. This commit enables<br>\napplications running in a fhs environment to use alsa on systems<br>\nrunning pipewire.</p>\n<p dir=\"auto\">This is heavily copied from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"941236029\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/129846\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/129846/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/129846\">#129846</a></p>\n\n<h6 dir=\"auto\">Motivation for this change</h6>\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> For non-Linux: Is <code class=\"notranslate\">sandbox = true</code> set in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2111-release-notes\">21.11 Release Notes (or backporting 21.05 Release notes)</a>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Release notes changes) Ran <code class=\"notranslate\">nixos/doc/manual/md-to-db.sh</code> to update generated release notes</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>",
            "url": "https://github.com/NixOS/nixpkgs/pull/146925",
            "title": "build-fhs-user-env: add compatibility for pipewire alsa emulation",
            "date_modified": "2024-01-09T06:27:35.000Z",
            "date_published": "2021-11-21T20:45:45.000Z",
            "author": {
                "name": "ldesgoui",
                "url": "https://github.com/ldesgoui"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/848000?u=2cd7ee50ceea54c0d9d8b761c7e8ce465d561f42&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Description of changes</h2>\n<p dir=\"auto\">Replace ALSA in the comments of the <code class=\"notranslate\">nixos-generate-config</code> generated config with a minimal PipeWire config, for several reasons:</p>\n<ul dir=\"auto\">\n<li>PipeWire is a useful default for many users, irrespective of display server</li>\n<li>The use of ALSA on most environments is limited in comparison to PulseAudio or PipeWire</li>\n<li>Users erroneously think that <code class=\"notranslate\">options.sound.enable</code> is related to \"enabling sound\", so they enable it even when using PulseAudio or PipeWire</li>\n</ul>\n<h2 dir=\"auto\">Things done</h2>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li>For non-Linux: Is sandboxing enabled in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = relaxed</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = true</code></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2405.section.md\">24.05 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2305.section.md\">23.05</a> and <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11</a> Release notes)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n\n<h3 dir=\"auto\">Priorities</h3>\n<p dir=\"auto\">Add a 👍 <a href=\"https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\" rel=\"nofollow\">reaction</a> to <a href=\"https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc\">pull requests you find important</a>.</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/271668",
            "title": "nixos/installer-tools: mention PulseAudio+PipeWire instead of ALSA+PulseAudio in generated config",
            "date_modified": "2023-12-23T12:28:54.000Z",
            "date_published": "2023-12-02T13:45:28.000Z",
            "author": {
                "name": "eclairevoyant",
                "url": "https://github.com/eclairevoyant"
            }
        }
    ]
}