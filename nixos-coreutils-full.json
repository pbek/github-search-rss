{
    "version": "https://jsonfeed.org/version/1",
    "title": "NixOS Package PRs for coreutils-full",
    "home_page_url": "https://pbek.github.io/github-search-rss/nixos-coreutils-full.json",
    "feed_url": "https://pbek.github.io/github-search-rss/nixos-coreutils-full.json",
    "description": "NixOS Package PRs for coreutils-full on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/7054317?u=f0856a0a72a3cde1dafa55d94ab4ff310f11b100&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This allows for users to build nix docker images tuned for their substituters, ca and custom packages.</p>\n<p dir=\"auto\">For example, I would use it this way:</p>\n<div class=\"highlight highlight-source-nix notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{ nixpkgs }:\n\nlet\n  nixRepo = ./nix;\n  # nixRepo = builtins.fetchTarball { ... };\n  proxyChannelURL = &quot;https://github.proxy/channel-nixos-21.11.tar.gz&quot;;\n  substituterURL = &quot;https://nixos-cache.proxy&quot;;\n  myCa = ./ca.crt;\nin \n(import (nixRepo + &quot;/docker.nix&quot;) {\n  pkgs = nixpkgs;\n  channelURL = proxyChannelURL;\n  extraPkgs = [ nixpkgs.nixops ];\n  extraEnv = [\n    &quot;SSL_CERT_FILE=${myCa}&quot;\n    &quot;GIT_SSL_CAINFO=${myCa}&quot;\n    &quot;NIX_SSL_CERT_FILE=${myCa}&quot;\n  ];\n  substituters = [ substituterURL ];\n  trustedSubstituters = [ substituterURL ];\n})\"><pre class=\"notranslate\">{ <span class=\"pl-smi\">nixpkgs</span> }:\n\n<span class=\"pl-k\">let</span>\n  <span class=\"pl-e\">nixRepo</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\">./nix</span>;\n  <span class=\"pl-c\"># nixRepo = builtins.fetchTarball { ... };</span>\n  <span class=\"pl-e\">proxyChannelURL</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://github.proxy/channel-nixos-21.11.tar.gz<span class=\"pl-pds\">\"</span></span>;\n  <span class=\"pl-e\">substituterURL</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://nixos-cache.proxy<span class=\"pl-pds\">\"</span></span>;\n  <span class=\"pl-e\">myCa</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\">./ca.crt</span>;\n<span class=\"pl-k\">in</span> \n(<span class=\"pl-c1\">import</span> (<span class=\"pl-v\">nixRepo</span> <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/docker.nix<span class=\"pl-pds\">\"</span></span>) {\n  <span class=\"pl-e\">pkgs</span> <span class=\"pl-k\">=</span> <span class=\"pl-v\">nixpkgs</span>;\n  <span class=\"pl-e\">channelURL</span> <span class=\"pl-k\">=</span> <span class=\"pl-v\">proxyChannelURL</span>;\n  <span class=\"pl-e\">extraPkgs</span> <span class=\"pl-k\">=</span> [ <span class=\"pl-v\">nixpkgs</span><span class=\"pl-k\">.</span><span class=\"pl-v\">nixops</span> ];\n  <span class=\"pl-e\">extraEnv</span> <span class=\"pl-k\">=</span> [\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>SSL_CERT_FILE=<span class=\"pl-pse\">${</span><span class=\"pl-v\">myCa</span><span class=\"pl-pse\">}</span><span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>GIT_SSL_CAINFO=<span class=\"pl-pse\">${</span><span class=\"pl-v\">myCa</span><span class=\"pl-pse\">}</span><span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>NIX_SSL_CERT_FILE=<span class=\"pl-pse\">${</span><span class=\"pl-v\">myCa</span><span class=\"pl-pse\">}</span><span class=\"pl-pds\">\"</span></span>\n  ];\n  <span class=\"pl-e\">substituters</span> <span class=\"pl-k\">=</span> [ <span class=\"pl-v\">substituterURL</span> ];\n  <span class=\"pl-e\">trustedSubstituters</span> <span class=\"pl-k\">=</span> [ <span class=\"pl-v\">substituterURL</span> ];\n})</pre></div>",
            "url": "https://github.com/NixOS/nix/pull/6434",
            "title": "docker: more params: extraPkgs, (trusted)Substituters and extraEnv",
            "date_modified": "2023-05-21T18:49:20.000Z",
            "date_published": "2022-04-21T13:46:15.000Z",
            "author": {
                "name": "jlamur",
                "url": "https://github.com/jlamur"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/20525370?u=3eca42cd1f8dd49002816cd842937abef0d1b030&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h1 dir=\"auto\">Motivation</h1>\n<p dir=\"auto\">Adds simple Python bindings for Nix evaluation, initialized from <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Mic92/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Mic92\">@Mic92</a>'s archived <a href=\"https://github.com/Mic92/pythonix\">Pythonix</a> (including the license), but then updated to work with the latest Nix version. This relates to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1438407433\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nix/issues/7271\" data-hovercard-type=\"issue\" data-hovercard-url=\"/NixOS/nix/issues/7271/hovercard\" href=\"https://github.com/NixOS/nix/issues/7271\">#7271</a></p>\n<p dir=\"auto\">Just like the existing Perl bindings under <code class=\"notranslate\">pkgs.nix.perl-bindings</code>, these Python bindings are available as a separate derivation under <code class=\"notranslate\">pkgs.nix.python-bindings</code>. This is a Python package that can be used as <code class=\"notranslate\">python.withPackages (p: [ pkgs.nix.python-bindings ]</code></p>\n<p dir=\"auto\">The API currently is just a single function:</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">nix.eval(str, vars: dict)</code><br>\nEvaluates the Nix expression <code class=\"notranslate\">str</code> with variables <code class=\"notranslate\">vars</code> in scope. <code class=\"notranslate\">vars</code> is transparently converted from Python values to Nix values. The result of this function is transparently converted from a Nix value to a Python value.</li>\n</ul>\n<p dir=\"auto\">An example:</p>\n<details>\n<summary>flake.nix</summary>\n<div class=\"highlight highlight-source-nix notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{\n  inputs.nix.url = &quot;github:tweag/nix/python-bindings&quot;;\n  inputs.nixpkgs.follows = &quot;nix/nixpkgs&quot;;\n  inputs.flake-utils.url = &quot;github:numtide/flake-utils&quot;;\n\n  outputs = { nix, nixpkgs, flake-utils, ... }: flake-utils.lib.eachDefaultSystem (system: {\n    defaultPackage = nixpkgs.legacyPackages.${system}.pkgs.python3.withPackages (p: [\n      nix.packages.${system}.nix.python-bindings\n    ]);\n  });\n}\"><pre class=\"notranslate\">{\n  <span class=\"pl-e\">inputs</span>.<span class=\"pl-e\">nix</span>.<span class=\"pl-e\">url</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>github:tweag/nix/python-bindings<span class=\"pl-pds\">\"</span></span>;\n  <span class=\"pl-e\">inputs</span>.<span class=\"pl-e\">nixpkgs</span>.<span class=\"pl-e\">follows</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nix/nixpkgs<span class=\"pl-pds\">\"</span></span>;\n  <span class=\"pl-e\">inputs</span>.<span class=\"pl-e\">flake-utils</span>.<span class=\"pl-e\">url</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>github:numtide/flake-utils<span class=\"pl-pds\">\"</span></span>;\n\n  <span class=\"pl-e\">outputs</span> <span class=\"pl-k\">=</span> { <span class=\"pl-smi\">nix</span><span class=\"pl-k\">,</span> <span class=\"pl-smi\">nixpkgs</span><span class=\"pl-k\">,</span> <span class=\"pl-smi\">flake-utils</span><span class=\"pl-k\">,</span> <span class=\"pl-k\">... </span>}: <span class=\"pl-v\">flake-utils</span><span class=\"pl-k\">.</span><span class=\"pl-v\">lib</span><span class=\"pl-k\">.</span><span class=\"pl-v\">eachDefaultSystem</span> (<span class=\"pl-smi\">system</span>: {\n    <span class=\"pl-e\">defaultPackage</span> <span class=\"pl-k\">=</span> <span class=\"pl-v\">nixpkgs</span><span class=\"pl-k\">.</span><span class=\"pl-v\">legacyPackages</span><span class=\"pl-k\">.</span><span class=\"pl-pse\">${</span><span class=\"pl-v\">system</span><span class=\"pl-pse\">}</span><span class=\"pl-k\">.</span><span class=\"pl-v\">pkgs</span><span class=\"pl-k\">.</span><span class=\"pl-v\">python3</span><span class=\"pl-k\">.</span><span class=\"pl-v\">withPackages</span> (<span class=\"pl-smi\">p</span>: [\n      <span class=\"pl-v\">nix</span><span class=\"pl-k\">.</span><span class=\"pl-v\">packages</span><span class=\"pl-k\">.</span><span class=\"pl-pse\">${</span><span class=\"pl-v\">system</span><span class=\"pl-pse\">}</span><span class=\"pl-k\">.</span><span class=\"pl-v\">nix</span><span class=\"pl-k\">.</span><span class=\"pl-v\">python-bindings</span>\n    ]);\n  });\n}</pre></div>\n</details>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ nix run\nPython 3.10.8 (main, Oct 11 2022, 11:35:05) [GCC 11.3.0] on linux\nType &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.\n&gt;&gt;&gt; import nix\n&gt;&gt;&gt; nix.eval(&quot;1 + a&quot;, vars=dict(a = 2))\n3\"><pre class=\"notranslate\"><code class=\"notranslate\">$ nix run\nPython 3.10.8 (main, Oct 11 2022, 11:35:05) [GCC 11.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import nix\n&gt;&gt;&gt; nix.eval(\"1 + a\", vars=dict(a = 2))\n3\n</code></pre></div>\n<p dir=\"auto\">This work is sponsored by <a href=\"https://antithesis.com/\" rel=\"nofollow\">Antithesis</a> <g-emoji class=\"g-emoji\" alias=\"sparkles\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/2728.png\">✨</g-emoji></p>\n<h1 dir=\"auto\">TODO</h1>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Confirm that the Pythonix source code can be used: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1566981515\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nix/issues/7735\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nix/pull/7735/hovercard?comment_id=1093829625&amp;comment_type=review_comment\" href=\"https://github.com/NixOS/nix/pull/7735#discussion_r1093829625\">#7735 (comment)</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Make the build work, both incrementally for development and in CI</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Mark as experimental (<a href=\"https://github.com/NixOS/nix/pull/7735#issuecomment-1415853274\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nix/pull/7735/hovercard\">decided by the Nix Team</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Write more tests</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Write documentation\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> How to develop the bindings</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Manual page for how to use the bindings</li>\n</ul>\n</li>\n</ul>\n<h1 dir=\"auto\">Context</h1>\n<p dir=\"auto\">The motivation for this is better tests for library functions in nixpkgs. Previous efforts:</p>\n<ul dir=\"auto\">\n<li>Using <a href=\"https://github.com/bats-core/bats-core\">bats</a>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1327316875\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/185022\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/185022/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/185022\">NixOS/nixpkgs#185022</a></li>\n<li>Using awk for generating property tests: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1485434623\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/205190\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/205190/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/205190\">NixOS/nixpkgs#205190</a>, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1519661931\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/209099\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/209099/hovercard?comment_id=1069177623&amp;comment_type=review_comment\" href=\"https://github.com/NixOS/nixpkgs/pull/209099#discussion_r1069177623\">NixOS/nixpkgs#209099 (comment)</a> and <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1558912770\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/212858\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/212858/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/212858\">NixOS/nixpkgs#212858</a></li>\n</ul>\n<p dir=\"auto\">In particular <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1558912770\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/212858\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/212858/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/212858\">NixOS/nixpkgs#212858</a> highlighted that property tests are currently either slow (if using the Nix CLI) or limited (if you work around this by cramming everything into a single Nix CLI call, which then means you can't test error messages anymore).</p>\n<p dir=\"auto\">I then instead focused on <a href=\"https://github.com/Mic92/pythonix\">Pythonix</a>, third-party Python bindings for the Nix evaluator. By using Python for testing we can use the Python ecosystem (such as property testing using <a href=\"https://hypothesis.readthedocs.io/\" rel=\"nofollow\">Hypothesis</a>), and by it linking to the Nix library it's much faster and we can test error messages too. Unfortunately Pythonix was archived due to being too hard to maintain, since the library interface isn't stable. So the fix is to just upstream it instead.</p>\n<h1 dir=\"auto\">Checklist for maintainers</h1>\n<p dir=\"auto\">Maintainers: tick if completed or explain if not relevant</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> agreed on idea</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> agreed on implementation strategy</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> tests, as appropriate\n<ul dir=\"auto\">\n<li>functional tests - <code class=\"notranslate\">tests/**.sh</code></li>\n<li>unit tests - <code class=\"notranslate\">src/*/tests</code></li>\n<li>integration tests - <code class=\"notranslate\">tests/nixos/*</code></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> documentation in the manual</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> code and comments are self-explanatory</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> commit message explains why the change was made</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> new feature or bug fix: updated release notes</li>\n</ul>",
            "url": "https://github.com/NixOS/nix/pull/7735",
            "title": "Experimental python bindings",
            "date_modified": "2023-04-21T08:52:09.000Z",
            "date_published": "2023-02-01T23:00:31.000Z",
            "author": {
                "name": "infinisil",
                "url": "https://github.com/infinisil"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/7258858?u=c524720e2844ffa8a2aa67944fde5af54031e06d&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<p dir=\"auto\">To try this use the pkgsUutils overlay and replace python3 with any package:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"nix-build -A pkgsUutils.python3\"><pre class=\"notranslate\">nix-build -A pkgsUutils.python3</pre></div>\n<p dir=\"auto\">ToDo:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> merge <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"830985477\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/116241\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/116241/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/116241\">#116241</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> wait for <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/NixOS/nixpkgs/commit/1f831f0552f92680c3868794a9ffe00e2ee7f8cb/hovercard\" href=\"https://github.com/NixOS/nixpkgs/commit/1f831f0552f92680c3868794a9ffe00e2ee7f8cb\"><tt>1f831f0</tt></a> to be in master</li>\n</ul>\n<p dir=\"auto\">Issues preventing us from using it in a stdenv:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> autotools does not work because the died not handle escape codes <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"831060787\" data-permission-text=\"Title is private\" data-url=\"https://github.com/uutils/coreutils/issues/1817\" data-hovercard-type=\"issue\" data-hovercard-url=\"/uutils/coreutils/issues/1817/hovercard\" href=\"https://github.com/uutils/coreutils/issues/1817\">uutils/coreutils#1817</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> install does not work when installing files from directors <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"831368727\" data-permission-text=\"Title is private\" data-url=\"https://github.com/uutils/coreutils/issues/1823\" data-hovercard-type=\"issue\" data-hovercard-url=\"/uutils/coreutils/issues/1823/hovercard\" href=\"https://github.com/uutils/coreutils/issues/1823\">uutils/coreutils#1823</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> head does not work with null bytes <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"831347006\" data-permission-text=\"Title is private\" data-url=\"https://github.com/uutils/coreutils/issues/1822\" data-hovercard-type=\"issue\" data-hovercard-url=\"/uutils/coreutils/issues/1822/hovercard\" href=\"https://github.com/uutils/coreutils/issues/1822\">uutils/coreutils#1822</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> touch cannot parse some date <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"906789632\" data-permission-text=\"Title is private\" data-url=\"https://github.com/uutils/coreutils/issues/2311\" data-hovercard-type=\"issue\" data-hovercard-url=\"/uutils/coreutils/issues/2311/hovercard\" href=\"https://github.com/uutils/coreutils/issues/2311\">uutils/coreutils#2311</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> cp to many files open <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"906832557\" data-permission-text=\"Title is private\" data-url=\"https://github.com/uutils/coreutils/issues/2312\" data-hovercard-type=\"issue\" data-hovercard-url=\"/uutils/coreutils/issues/2312/hovercard\" href=\"https://github.com/uutils/coreutils/issues/2312\">uutils/coreutils#2312</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> cp main panic <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"906838842\" data-permission-text=\"Title is private\" data-url=\"https://github.com/uutils/coreutils/issues/2314\" data-hovercard-type=\"issue\" data-hovercard-url=\"/uutils/coreutils/issues/2314/hovercard\" href=\"https://github.com/uutils/coreutils/issues/2314\">uutils/coreutils#2314</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> converting absolute symlinks to relative ones <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"909722056\" data-permission-text=\"Title is private\" data-url=\"https://github.com/uutils/coreutils/issues/2335\" data-hovercard-type=\"issue\" data-hovercard-url=\"/uutils/coreutils/issues/2335/hovercard\" href=\"https://github.com/uutils/coreutils/issues/2335\">uutils/coreutils#2335</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> ln multiple --symbolic <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"912392944\" data-permission-text=\"Title is private\" data-url=\"https://github.com/uutils/coreutils/issues/2359\" data-hovercard-type=\"issue\" data-hovercard-url=\"/uutils/coreutils/issues/2359/hovercard\" href=\"https://github.com/uutils/coreutils/issues/2359\">uutils/coreutils#2359</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> missing symlink from test to <code class=\"notranslate\">[</code> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"923151148\" data-permission-text=\"Title is private\" data-url=\"https://github.com/uutils/coreutils/issues/2420\" data-hovercard-type=\"issue\" data-hovercard-url=\"/uutils/coreutils/issues/2420/hovercard\" href=\"https://github.com/uutils/coreutils/issues/2420\">uutils/coreutils#2420</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> tr posix character classes <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"923247805\" data-permission-text=\"Title is private\" data-url=\"https://github.com/uutils/coreutils/issues/2421\" data-hovercard-type=\"issue\" data-hovercard-url=\"/uutils/coreutils/issues/2421/hovercard\" href=\"https://github.com/uutils/coreutils/issues/2421\">uutils/coreutils#2421</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> cp dangling or nested symlinks <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"923260516\" data-permission-text=\"Title is private\" data-url=\"https://github.com/uutils/coreutils/issues/2422\" data-hovercard-type=\"issue\" data-hovercard-url=\"/uutils/coreutils/issues/2422/hovercard\" href=\"https://github.com/uutils/coreutils/issues/2422\">uutils/coreutils#2422</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> cp permission denied <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"923272754\" data-permission-text=\"Title is private\" data-url=\"https://github.com/uutils/coreutils/issues/2423\" data-hovercard-type=\"issue\" data-hovercard-url=\"/uutils/coreutils/issues/2423/hovercard\" href=\"https://github.com/uutils/coreutils/issues/2423\">uutils/coreutils#2423</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> cut not working in rustc <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"924124147\" data-permission-text=\"Title is private\" data-url=\"https://github.com/uutils/coreutils/issues/2424\" data-hovercard-type=\"issue\" data-hovercard-url=\"/uutils/coreutils/issues/2424/hovercard\" href=\"https://github.com/uutils/coreutils/issues/2424\">uutils/coreutils#2424</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fix installation of [ symlink https://github.com/<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"941103231\" data-permission-text=\"Title is private\" data-url=\"https://github.com/uutils/coreutils/issues/2491\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/uutils/coreutils/pull/2491/hovercard\" href=\"https://github.com/uutils/coreutils/pull/2491\">uutils/coreutils/pull/2491</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Create completion directories incase they do not exist <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"941081058\" data-permission-text=\"Title is private\" data-url=\"https://github.com/uutils/coreutils/issues/2490\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/uutils/coreutils/pull/2490/hovercard\" href=\"https://github.com/uutils/coreutils/pull/2490\">uutils/coreutils#2490</a></li>\n</ul>\n<h6 dir=\"auto\">Motivation for this change</h6>\n<ul dir=\"auto\">\n<li>Try it out!</li>\n<li><a href=\"https://discourse.nixos.org/t/rust-coreutils-replacement/11867\" rel=\"nofollow\">https://discourse.nixos.org/t/rust-coreutils-replacement/11867</a></li>\n</ul>\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested using sandboxing (<a href=\"https://nixos.org/nixos/manual/options.html#opt-nix.useSandbox\" rel=\"nofollow\">nix.useSandbox</a> on NixOS, or option <code class=\"notranslate\">sandbox</code> in <a href=\"https://nixos.org/nix/manual/#sec-conf-file\" rel=\"nofollow\"><code class=\"notranslate\">nix.conf</code></a> on non-NixOS linux)</li>\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> NixOS</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> macOS</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> other Linux distributions</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested via one or more NixOS test(s) if existing and applicable for the change (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all pkgs that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review wip\"</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested execution of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Determined the impact on package closure size (by running <code class=\"notranslate\">nix path-info -S</code> before and after)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Ensured that relevant documentation is up to date</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/.github/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>",
            "url": "https://github.com/NixOS/nixpkgs/pull/116274",
            "title": "stdenv: add uutils-coreutils stdenv",
            "date_modified": "2023-03-12T23:19:09.000Z",
            "date_published": "2021-03-14T02:54:41.000Z",
            "author": {
                "name": "SuperSandro2000",
                "url": "https://github.com/SuperSandro2000"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/7413633?u=fb498bbc1a8bfc68da4e6b980673be9227dd0040&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h6 dir=\"auto\">Description of changes</h6>\n<p dir=\"auto\">Bumps LLVM and clang to 15.0.7 on Darwin. This was prompted by <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1690248095\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/229210\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/229210/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/229210\">#229210</a> because the 13.3 SDK does not build with LLVM 11. This PR reworks the Darwin stdenv to decouple it from the bootstrap tools is written not to need updates to bootstrap tools and includes changes to allow LLVM to be bumped without requiring a bump to the bootstrap tools.</p>\n<p dir=\"auto\">See the comments in <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/NixOS/nixpkgs/commit/309dc9d8f1e2f16f734c20606a1d610d53bcd680/hovercard\" href=\"https://github.com/NixOS/nixpkgs/commit/309dc9d8f1e2f16f734c20606a1d610d53bcd680\"><tt>309dc9d</tt></a> explaining the rework of the Darwin stden bootstrap process. My hope is this will make future bumps easier and more approachable for non-Darwin developers. It should also make experimentation a little safer. I’d like to see if any space could be saved by enabling LTO during the bootstrap, but that’s out of scope for this PR.</p>\n<h6 dir=\"auto\">Issues to be resolved</h6>\n<p dir=\"auto\">These have all been resolved. The changes needed for the bootstrap are included in this PR. The others are being handled in separate PRs, which will be linked below.</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Disable LLVM tests when building the stdenv. This causes an infinite recursion currently. I have a workaround, but ideally it should be disabled in the bootstrap.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <code class=\"notranslate\">pkg-config</code> requires disabling a warning, or the build fails. It’s vendoring a very old version of GLib. Unfortunately, nixpkgs does not provide a way to use the nixpkgs <code class=\"notranslate\">glib</code> package. I also tried, and it caused an infinite recursion.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <code class=\"notranslate\">codesign</code> in bootstrap tools is too old for LLVM, but I’ve included a workaround. A bootstrap tools update would obviate the change.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Updating platform definition now that LLVM understands <code class=\"notranslate\">apple-m1</code>. This should likely go in another PR, but it’s included here for testing. See <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1186263356\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/166401\" data-hovercard-type=\"issue\" data-hovercard-url=\"/NixOS/nixpkgs/issues/166401/hovercard\" href=\"https://github.com/NixOS/nixpkgs/issues/166401\">#166401</a>.</li>\n</ul>\n<h6 dir=\"auto\">Testing Done</h6>\n<p dir=\"auto\">Running <code class=\"notranslate\">nixpkgs-review</code> on a stdenv change is obviously going to rebuild an infeasible amount of packages. I have attempted to build and run a number of packages to catch common failures. I’ve tried to change things needed to build the stdenv from those that fix common problems. See below for PRs related to those (and sandbox issues I encountered along the way).</p>\n<h6 dir=\"auto\">Related PRs</h6>\n<p dir=\"auto\">These fail to build due to the changes.</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1726779279\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/234117\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/234117/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/234117\">#234117</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1727535044\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/234219\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/234219/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/234219\">#234219</a></li>\n</ul>\n<p dir=\"auto\">These are Darwin sandbox-related fixes. They’re not strictly necessary, but they allow Darwin users to build more things with the sandbox enabled.</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1726704762\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/234106\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/234106/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/234106\">#234106</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1726737406\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/234111\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/234111/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/234111\">#234111</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1726769590\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/234115\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/234115/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/234115\">#234115</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1726789870\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/234119\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/234119/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/234119\">#234119</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1726796546\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/234122\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/234122/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/234122\">#234122</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1726831476\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/234125\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/234125/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/234125\">#234125</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1726851441\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/234129\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/234129/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/234129\">#234129</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1726858922\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/234132\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/234132/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/234132\">#234132</a></li>\n</ul>\n<p dir=\"auto\">This fix is related to running the store on case-sensitive APFS. It’s the first thing that has broken for me. Most case sensitivity issues during builds are due to <code class=\"notranslate\">/tmp</code> being insensitive.</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1726693933\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/234105\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/234105/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/234105\">#234105</a><br>\n(more fixes coming tomorrow)</li>\n</ul>\n<h6 dir=\"auto\">Things done</h6>\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> aarch64-darwin</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> For non-Linux: Is <code class=\"notranslate\">sandbox = true</code> set in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2305-release-notes\">23.05 Release Notes (or backporting 22.11 Release notes)</a>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n",
            "url": "https://github.com/NixOS/nixpkgs/pull/229786",
            "title": "darwin.stdenv: Update to LLVM 15 and clang to 15.0.7",
            "date_modified": "2023-05-26T21:34:08.000Z",
            "date_published": "2023-05-04T01:55:01.000Z",
            "author": {
                "name": "reckenrode",
                "url": "https://github.com/reckenrode"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/54836058?u=9a136f822864d980a6ff49700e60e1f11502295e&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h6 dir=\"auto\">Description of changes</h6>\n<p dir=\"auto\"><strong>I would like to emphasize that the point of this PR is avoiding technical debt in <code class=\"notranslate\">stdenv</code>.  The fact that it <a href=\"https://github.com/NixOS/nixpkgs/pull/209462#issuecomment-1374609543\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/209462/hovercard\">saves rebuilds in some situations</a> is just an added bonus.</strong></p>\n<p dir=\"auto\">This PR is <a href=\"https://github.com/NixOS/nixpkgs/pull/209462/commits/12408bcf9336f7817a10953e9f0b932031f1f297\">a two-line change</a>, trivial to revert.  Its parent PR, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1523734733\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/209459\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/209459/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/209459\">#209459</a>, is independently useful, and in any event doesn't muck around with the internals of the stdenv stages.</p>\n<p dir=\"auto\">This PR has a child, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1524255088\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/209601\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/209601/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/209601\">#209601</a>, which greatly reduces the amount of aarch64 rebuilds, at the expense of complexity.  I'm not sure the complexity is worth it; the point of that PR is to show that there are various complexity/performance tradeoff points available to choose from.</p>\n<p dir=\"auto\">Motivation:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1514866292\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/208412\" data-hovercard-type=\"issue\" data-hovercard-url=\"/NixOS/nixpkgs/issues/208412/hovercard\" href=\"https://github.com/NixOS/nixpkgs/issues/208412\">#208412</a></li>\n</ul>\n<p dir=\"auto\">Incorporates changes from:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1523734733\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/209459\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/209459/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/209459\">#209459</a></li>\n</ul>\n<p dir=\"auto\">Should fix:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"777259019\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/108111\" data-hovercard-type=\"issue\" data-hovercard-url=\"/NixOS/nixpkgs/issues/108111/hovercard\" href=\"https://github.com/NixOS/nixpkgs/issues/108111\">#108111</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"777610981\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/108305\" data-hovercard-type=\"issue\" data-hovercard-url=\"/NixOS/nixpkgs/issues/108305/hovercard\" href=\"https://github.com/NixOS/nixpkgs/issues/108305\">#108305</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1448851055\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/201254\" data-hovercard-type=\"issue\" data-hovercard-url=\"/NixOS/nixpkgs/issues/201254/hovercard\" href=\"https://github.com/NixOS/nixpkgs/issues/201254\">#201254</a></li>\n</ul>\n<p dir=\"auto\">Alternative to:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1519313711\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/209063\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/209063/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/209063\">#209063</a></li>\n</ul>\n<h6 dir=\"auto\">Things done</h6>\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux (in progress)</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>",
            "url": "https://github.com/NixOS/nixpkgs/pull/209462",
            "title": "aarch64: enable rebootstrap, upgrade to gcc11",
            "date_modified": "2023-03-10T06:22:01.000Z",
            "date_published": "2023-01-07T11:44:33.000Z",
            "author": {
                "name": "amjoseph-nixpkgs",
                "url": "https://github.com/amjoseph-nixpkgs"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/42933?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">I was investigating ways to re-use a derivation function with a different nixpkgs but without using the full dependency tree. For example, <code class=\"notranslate\">openssl1_0_1</code> is only available in older nixpkgs, but I don't want to use old glibc, etc. I think that the simplest way is to re-<code class=\"notranslate\">callPackage</code> the function with current nixpkgs. Something like</p>\n<div class=\"highlight highlight-source-nix notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"let\n  currentNixpkgs = import &lt;nixpkgs&gt; {};\n  oldNixpkgs     = import &lt;nixpkgs-old&gt; {};\nin\n  currentNixpkgs.callPackage (oldNixpkgs.hello.override) {}\"><pre class=\"notranslate\"><span class=\"pl-k\">let</span>\n  <span class=\"pl-e\">currentNixpkgs</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">import</span> <span class=\"pl-s\">&lt;nixpkgs&gt;</span> {};\n  <span class=\"pl-e\">oldNixpkgs</span>     <span class=\"pl-k\">=</span> <span class=\"pl-c1\">import</span> <span class=\"pl-s\">&lt;nixpkgs-old&gt;</span> {};\n<span class=\"pl-k\">in</span>\n  <span class=\"pl-v\">currentNixpkgs</span><span class=\"pl-k\">.</span><span class=\"pl-v\">callPackage</span> (<span class=\"pl-v\">oldNixpkgs</span><span class=\"pl-k\">.</span><span class=\"pl-v\">hello</span><span class=\"pl-k\">.</span><span class=\"pl-v\">override</span>) {}</pre></div>\n<p dir=\"auto\">Which works, but may not be sound. However this doesn't work at all for openssl because it's imported with <code class=\"notranslate\">callPackages</code>, which doesn't propagate the <code class=\"notranslate\">functionArgs</code>.</p>\n<p dir=\"auto\">For the record, I don't think this should be encouraged, but while investigating the options I ran into something that I think is a bug which can be easily fixed.</p>\n<hr>\n<p dir=\"auto\">makeOverridable is very careful to ensure the arguments to the<br>\noverridden function are the same as the input function. As a result,<br>\nthe arguments of hello.override are exactly the same as the original<br>\narguments of the hello function that produced the derivation.</p>\n<p dir=\"auto\">However, callPackagesWith calls makeOverridable with a lambda that<br>\ndoes not propagate the arguments. The override function for a package<br>\ninstantiated with callPackagesWith will not have the original<br>\narguments.</p>\n<p dir=\"auto\">For example:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"nix-repl&gt; lib.functionArgs hello.override\n{ callPackage = false; fetchurl = false; hello = false; lib = false; nixos = false; stdenv = false; testers = false; }\n\nnix-repl&gt; lib.functionArgs openssl.override\n{ }\"><pre class=\"notranslate\"><code class=\"notranslate\">nix-repl&gt; lib.functionArgs hello.override\n{ callPackage = false; fetchurl = false; hello = false; lib = false; nixos = false; stdenv = false; testers = false; }\n\nnix-repl&gt; lib.functionArgs openssl.override\n{ }\n</code></pre></div>\n<p dir=\"auto\">By copying the arguments onto the inner lambda before passing it to<br>\nmakeOverridable, we can make callPackage and callPackages behave the<br>\nsame.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"nix-repl&gt; lib.functionArgs openssl.override\n{ buildPackages = false; coreutils = false; cryptodev = false; enableSSL2 = true; enableSSL3 = true; fetchurl = false; lib = false; perl = false; removeReferencesTo = false; static = true; stdenv = false; withCryptodev = true; withPerl = true; }\"><pre class=\"notranslate\"><code class=\"notranslate\">nix-repl&gt; lib.functionArgs openssl.override\n{ buildPackages = false; coreutils = false; cryptodev = false; enableSSL2 = true; enableSSL3 = true; fetchurl = false; lib = false; perl = false; removeReferencesTo = false; static = true; stdenv = false; withCryptodev = true; withPerl = true; }\n</code></pre></div>\n<h6 dir=\"auto\">Description of changes</h6>\n<p dir=\"auto\">Copied a <code class=\"notranslate\">copyArgs</code> call from makeOverridable to callPackagesWith to propagate arguments.</p>\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> For non-Linux: Is <code class=\"notranslate\">sandbox = true</code> set in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2211-release-notes\">22.11 Release Notes (or backporting 22.05 Release notes)</a>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Release notes changes) Ran <code class=\"notranslate\">nixos/doc/manual/md-to-db.sh</code> to update generated release notes</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.<br>\n]</li>\n</ul>",
            "url": "https://github.com/NixOS/nixpkgs/pull/177977",
            "title": "lib/customization: propagate function arguments in callPackagesWith",
            "date_modified": "2023-01-07T23:52:15.000Z",
            "date_published": "2022-06-17T05:57:36.000Z",
            "author": {
                "name": "thefloweringash",
                "url": "https://github.com/thefloweringash"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/605070?u=3a7ac16d11516429ddb64a782640acfd22afdeeb&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h6 dir=\"auto\">Motivation for this change</h6>\n<p dir=\"auto\">This shell is inspired <a href=\"https://fzakaria.com/2021/08/02/a-minimal-nix-shell.html\" rel=\"nofollow\">some investigation</a> I did<br>\nand a <a href=\"https://github.com/jappeace/mt-shell\">follow-up example</a> that demonstrated starting a <em>nix-shell</em> with a minimal <em>builder.sh</em>.</p>\n<p dir=\"auto\">The goal is to provide the facility to create an ultra-lightweight <em>nix-shell</em> that only has bash as the direct dependency. Users can set environment variables and add packages but the feature-set is purposely minimal.</p>\n<blockquote>\n<p dir=\"auto\">The following Nix expression <strong>works</strong> and is pointing to the latest commit of this PR</p>\n</blockquote>\n<div class=\"highlight highlight-source-nix notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"let\n  nixpkgs = import (builtins.fetchTarball {\n    name = &quot;nixpkgs-fzakaria-fork-2021-08-03&quot;;\n    url =\n      &quot;https://github.com/fzakaria/nixpkgs/archive/refs/heads/faridzakaria/pure-mkShell.tar.gz&quot;;\n    sha256 = &quot;1h7aqlivq2hax7k7a612mffpfkawn1mfd3jfszzpx19i2fxwmqp2&quot;;\n  }) { };\nin\nwith nixpkgs;\nmkShellMinimal {\n  name = &quot;my-test-shell&quot;;\n  packages = [ ripgrep ];\n  FOO = bar;\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">let</span>\n  <span class=\"pl-e\">nixpkgs</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">import</span> (<span class=\"pl-c1\">builtins</span><span class=\"pl-k\">.</span><span class=\"pl-v\">fetchTarball</span> {\n    <span class=\"pl-e\">name</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nixpkgs-fzakaria-fork-2021-08-03<span class=\"pl-pds\">\"</span></span>;\n    <span class=\"pl-e\">url</span> <span class=\"pl-k\">=</span>\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://github.com/fzakaria/nixpkgs/archive/refs/heads/faridzakaria/pure-mkShell.tar.gz<span class=\"pl-pds\">\"</span></span>;\n    <span class=\"pl-e\">sha256</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1h7aqlivq2hax7k7a612mffpfkawn1mfd3jfszzpx19i2fxwmqp2<span class=\"pl-pds\">\"</span></span>;\n  }) { };\n<span class=\"pl-k\">in</span>\n<span class=\"pl-k\">with</span> <span class=\"pl-v\">nixpkgs</span>;\n<span class=\"pl-v\">mkShellMinimal</span> {\n  <span class=\"pl-e\">name</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>my-test-shell<span class=\"pl-pds\">\"</span></span>;\n  <span class=\"pl-e\">packages</span> <span class=\"pl-k\">=</span> [ <span class=\"pl-v\">ripgrep</span> ];\n  <span class=\"pl-e\">FOO</span> <span class=\"pl-k\">=</span> <span class=\"pl-v\">bar</span>;\n}</pre></div>\n<p dir=\"auto\">This minimal nix-shell has effectively a <strong>0</strong> (1.4 KiB) size closure.</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"❯ nix path-info -rSsh $(nix-build -I nixpkgs=/home/fmzakari/code/github.com/NixOS/nixpkgs test-shell-local.nix)\nthese derivations will be built:\n  /nix/store/xaqxyk1y3zjk0qwpxkm0n3n6c05bj6fn-setup.drv\n  /nix/store/rxrbwvk7rjvknil7ns1ki00n4vfqcs8h-my-test-shell.drv\nbuilding '/nix/store/xaqxyk1y3zjk0qwpxkm0n3n6c05bj6fn-setup.drv'...\nbuilding '/nix/store/rxrbwvk7rjvknil7ns1ki00n4vfqcs8h-my-test-shell.drv'...\n\nThis derivation is not meant to be built, unless you want to capture the dependency closure.\n\n/nix/store/8ka1hnlf06z3h2rpd00b4d9w5yxh0n39-setup        \t 376.0 \t 376.0 \n/nix/store/nprykggfqhdkn4r5lxxknjvlqc4qm1yl-builder.sh   \t 280.0 \t 280.0 \n/nix/store/xd8d72ccrxhaz3sxlmiqjnn1z0zwfhm8-my-test-shell\t 744.0 \t   1.4K\"><pre class=\"notranslate\">❯ nix path-info -rSsh <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>nix-build -I nixpkgs=/home/fmzakari/code/github.com/NixOS/nixpkgs test-shell-local.nix<span class=\"pl-pds\">)</span></span>\nthese derivations will be built:\n  /nix/store/xaqxyk1y3zjk0qwpxkm0n3n6c05bj6fn-setup.drv\n  /nix/store/rxrbwvk7rjvknil7ns1ki00n4vfqcs8h-my-test-shell.drv\nbuilding <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/nix/store/xaqxyk1y3zjk0qwpxkm0n3n6c05bj6fn-setup.drv<span class=\"pl-pds\">'</span></span>...\nbuilding <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/nix/store/rxrbwvk7rjvknil7ns1ki00n4vfqcs8h-my-test-shell.drv<span class=\"pl-pds\">'</span></span>...\n\nThis derivation is not meant to be built, unless you want to capture the dependency closure.\n\n/nix/store/8ka1hnlf06z3h2rpd00b4d9w5yxh0n39-setup        \t 376.0 \t 376.0 \n/nix/store/nprykggfqhdkn4r5lxxknjvlqc4qm1yl-builder.sh   \t 280.0 \t 280.0 \n/nix/store/xd8d72ccrxhaz3sxlmiqjnn1z0zwfhm8-my-test-shell\t 744.0 \t   1.4K</pre></div>\n<h6 dir=\"auto\">Things TODO</h6>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> I am still missing the necessary hook to clear <em>$PATH</em> when <em>nix-shell</em> is started pure. This exercise has actually shown how tied the nix-shell and stdenv concepts are.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Add support for <em>inputDerivation</em> similar to what <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/infinisil/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/infinisil\">@infinisil</a> added for mkDerivation</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> calculate the new closure-size (should be 0?) for the minimal shell.</li>\n</ul>\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested using sandboxing (<a href=\"https://nixos.org/nixos/manual/options.html#opt-nix.useSandbox\" rel=\"nofollow\">nix.useSandbox</a> on NixOS, or option <code class=\"notranslate\">sandbox</code> in <a href=\"https://nixos.org/nix/manual/#sec-conf-file\" rel=\"nofollow\"><code class=\"notranslate\">nix.conf</code></a> on non-NixOS linux)</li>\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> NixOS</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> macOS</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> other Linux distributions</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested via one or more NixOS test(s) if existing and applicable for the change (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all pkgs that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review wip\"</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested execution of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2111-release-notes\">21.11 Release Notes (or backporting 21.05 Relase notes)</a>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>",
            "url": "https://github.com/NixOS/nixpkgs/pull/132617",
            "title": "mkShellMinimal: Create an ultra minimal nix-shell",
            "date_modified": "2023-04-19T14:03:35.000Z",
            "date_published": "2021-08-04T04:35:54.000Z",
            "author": {
                "name": "fzakaria",
                "url": "https://github.com/fzakaria"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/91093?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h6 dir=\"auto\">Description of changes</h6>\n<p dir=\"auto\">Adds new options <code class=\"notranslate\">hardware.raid.swraid.monitor </code> which, when enabled, ports a systemd timer from the mdadm package to NixOS that runs regularly scheduled scrubs on swraid md* devices.</p>\n<p dir=\"auto\">To support the new NixOS module, this PR adjusts the mdadm package to: (a) package the mdcheck script, (b) remove the upstream systemd units (mdstart_<em>, mdmonitor</em>) that are not functional in NixOS.</p>\n<p dir=\"auto\">Questions/uncertainties with this (raised in <a href=\"https://discourse.nixos.org/t/nixos-mdadm-mdcheck/23716\" rel=\"nofollow\">https://discourse.nixos.org/t/nixos-mdadm-mdcheck/23716</a>):</p>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">I’ve named the configuration added hardware.raid.swraid.monitor – is this a good naming scheme?</p>\n</li>\n<li>\n<p dir=\"auto\"><code class=\"notranslate\">enable</code> defaults to false – this maintains compatibility with existing NixOS systems, but, has some risks of being an unsafe configuration since regular raid scrubbing is a somewhat standard safety practice. Should this be true, false, or maybe true-if-stateVersion&gt;=\"23.05\" so that it becomes the default on new systems?</p>\n</li>\n<li>\n<p dir=\"auto\">I removed some existing systemd units that are packaged by the mdadm package, but aren’t usable because they don’t subst in the right mdcheck/mdadm paths, and instead recreated the units via systemd.timers and systemd.services to allow configurability. Is this a good direction, or, would it be better to use the upstream unit files and tweak them?</p>\n</li>\n<li>\n<p dir=\"auto\">This doesn’t run the mdmonitor systemd service which has a couple of functionalities; (a) it emails or runs a program on a device event, (b) it swaps spare devices between raid arrays if appropriate on the event of a failure. I didn’t want to include it because getting the functionality (b) requires enabling the functionality (a), which would require explicit configuration for “what to do”. Is leaving this out pretty reasonable? It could be enabled pretty easily by another module, or enhanced in the future.</p>\n</li>\n</ul>\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> For non-Linux: Is <code class=\"notranslate\">sandbox = true</code> set in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2305-release-notes\">23.05 Release Notes (or backporting 22.11 Release notes)</a>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Release notes changes) Ran <code class=\"notranslate\">nixos/doc/manual/md-to-db.sh</code> to update generated release notes</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n",
            "url": "https://github.com/NixOS/nixpkgs/pull/204713",
            "title": "swraid/mdcheck: add mdcheck timer for swraid device scrub",
            "date_modified": "2023-04-11T15:18:50.000Z",
            "date_published": "2022-12-06T00:27:46.000Z",
            "author": {
                "name": "mfenniak",
                "url": "https://github.com/mfenniak"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5954806?u=8265573d90a810afe843a680570e277662c67b98&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This RFC proposes to normalize the <code class=\"notranslate\">version</code> attribute used in Nixpkgs' expresions.</p>\n<p dir=\"auto\"><a href=\"https://github.com/AndersonTorres/rfcs/blob/my-rfc/rfcs/0107-version-normalization.md\">Rendered!</a></p>",
            "url": "https://github.com/NixOS/rfcs/pull/107",
            "title": "[RFC 0107] Nixpkgs `version` attribute usage normalization",
            "date_modified": "2023-05-23T00:34:08.000Z",
            "date_published": "2021-09-24T22:02:31.000Z",
            "author": {
                "name": "AndersonTorres",
                "url": "https://github.com/AndersonTorres"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/18535642?u=1d9947794947098f0c1ac4cd5d543ec44cca6c04&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h6 dir=\"auto\">Description of changes</h6>\n<p dir=\"auto\">Improve the robustness, compatibility, speed and features of the kexec bootstrap machinery. I wanted to install a system with this functionality and made some changes to get it suitable for purpose for that. May be easier to review commit by commit.</p>\n<p dir=\"auto\">Headline changes:</p>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Improve speed by using the <code class=\"notranslate\">kexec_load_file(2)</code> system call when possible; this resulted in a boot speed improvement of over an order of magnitude on my AArch64 test machine, although I imagine the impact is probably more limited on x86-64.</p>\n</li>\n<li>\n<p dir=\"auto\">Use <code class=\"notranslate\">systemctl kexec</code> when possible to ensure that disks are unmounted cleanly and services are stopped gracefully.</p>\n</li>\n<li>\n<p dir=\"auto\">Generate a standalone tarball (well, relatively standalone; you need <code class=\"notranslate\">kexec(8)</code> and optionally <code class=\"notranslate\">cpio(1)</code>, but a more complete bundler could be built on top of this) to allow bootstrapping without an existing Nix installation and save redundant downloads. <code class=\"notranslate\">system.build.kexecTree</code> is still there for those who want it.</p>\n</li>\n<li>\n<p dir=\"auto\">Add <code class=\"notranslate\">--ssh-authorized-keys</code> and <code class=\"notranslate\">--append</code> options to allow using a Hydra-built <code class=\"notranslate\">kexecTarball</code> in more circumstances (like the primary use case of bootstrapping remote servers) without writing system configuration and rebuilding a whole netboot image.</p>\n</li>\n</ul>\n<p dir=\"auto\">Unresolved questions:</p>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Should there be a way to overlay more into the booted system than just an <code class=\"notranslate\">authorized_keys</code> file? I figured that's what most people (including me) will require and if you want other files in the installation environment you can probably mount the existing disk partitions after the fact, but it would be simple to implement. Mostly I couldn't figure out a good interface for it (e.g. where should the files go?) and worried it'd be feature creep; you can always create a custom configuration if you need to get fancier.</p>\n</li>\n<li>\n<p dir=\"auto\">Perhaps instead of building <code class=\"notranslate\">authorized_keys</code> injection into this it could be parsed from a kernel command-line parameter, so that the other installer formats could benefit from it too? (But it seems fussy to parse out of there, and you'll likely have at least a serial console if nothing else with most other installer formats.)</p>\n</li>\n<li>\n<p dir=\"auto\">Is setting <code class=\"notranslate\">system.stateVersion</code> in <code class=\"notranslate\">netboot.nix</code> appropriate? Maybe there's a reason it's in the <code class=\"notranslate\">.iso</code> installer and not there that I'm missing, or maybe it should go into <code class=\"notranslate\">installation-device.nix</code>?</p>\n</li>\n<li>\n<p dir=\"auto\">Would it be useful to use kernel parameters like <code class=\"notranslate\">panic=30 boot.panic_on_fail</code> by default to automatically restore the system to a working configuration in case of boot failure when you have no way of monitoring it?</p>\n</li>\n<li>\n<p dir=\"auto\">Are there backwards compatibility concerns with replacing <code class=\"notranslate\">kexec</code> with <code class=\"notranslate\">kexecTarball</code> wholesale in <code class=\"notranslate\">release.nix</code>? I suppose 23.11 will release with the old form?</p>\n</li>\n<li>\n<p dir=\"auto\">Is linking to Hydra in the documentation okay? The various <code class=\"notranslate\">nixos.*</code> image/installer jobs are not very discoverable in general, so I felt a pointer in the manual was warranted, although search doesn't work very well and there's seemingly no good way to link to jobs independent of release versions.</p>\n</li>\n<li>\n<p dir=\"auto\">Does this warrant a release notes entry?</p>\n</li>\n</ul>\n<p dir=\"auto\">cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/flokli/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/flokli\">@flokli</a> (author of original code)</p>\n<p dir=\"auto\">cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Mic92/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Mic92\">@Mic92</a> (I only just noticed <a href=\"https://github.com/nix-community/nixos-images\">nix-community/nixos-images</a> now after finishing these changes; maybe you have comments?)</p>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/ofborg/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ofborg\">@ofborg</a> text kexec</p>\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> For non-Linux: Is <code class=\"notranslate\">sandbox = true</code> set in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2211-release-notes\">22.11 Release Notes (or backporting 22.05 Release notes)</a>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Release notes changes) Ran <code class=\"notranslate\">nixos/doc/manual/md-to-db.sh</code> to update generated release notes</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n",
            "url": "https://github.com/NixOS/nixpkgs/pull/203415",
            "title": "nixos/kexec-boot: various improvements",
            "date_modified": "2023-05-23T00:32:48.000Z",
            "date_published": "2022-11-28T07:53:15.000Z",
            "author": {
                "name": "emilazy",
                "url": "https://github.com/emilazy"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/131599?u=9b746c99b4e67b5ccdcf525b2598240740b2002c&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<h6 dir=\"auto\">Motivation for this change</h6>\n<p dir=\"auto\">There should not be the need to run our favorite backup tool as root.<br>\nWhy don't we execute it as a DynamicUser and give it permissions to<br>\nbypass discrectionary access control.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"       CAP_DAC_READ_SEARCH\n              * Bypass file read permission checks and directory read\n                and execute permission checks;\n              * invoke open_by_handle_at(2);\n              * use the linkat(2) AT_EMPTY_PATH flag to create a link to\n                a file referred to by a file descriptor.\"><pre class=\"notranslate\"><code class=\"notranslate\">       CAP_DAC_READ_SEARCH\n              * Bypass file read permission checks and directory read\n                and execute permission checks;\n              * invoke open_by_handle_at(2);\n              * use the linkat(2) AT_EMPTY_PATH flag to create a link to\n                a file referred to by a file descriptor.\n</code></pre></div>\n<p dir=\"auto\"><em>capabitilies(7)</em></p>\n<p dir=\"auto\">This would still be a reduced surface area, than what we have today.</p>\n<p dir=\"auto\">Instead of embedding the pre and post hook into the backup script we<br>\nmove them to ExecStartPre and ExecStopPost and grant them full<br>\nprivileges, so they can still achieve tasks like create and delete<br>\nsnapshots. They are short running scripts and have less surface area<br>\nthan the whole of borgbackup.</p>\n<p dir=\"auto\">This doesn't come without breaking changes. The <code class=\"notranslate\">archiveName</code> could<br>\npreviously be passed in the <code class=\"notranslate\">preHook</code> option, but that will stop working<br>\nas soon as we move the hooks into their own scripts. We could alleviate<br>\nthis problem by setting up an explicit <code class=\"notranslate\">archiveName</code> option, that is<br>\nbeing passed into the main backup script.</p>\n<p dir=\"auto\">There is currently also the issue, that the <code class=\"notranslate\">local</code> nixos tests job will<br>\nnot run, because borgbackup cannot write to the local backup location.<br>\nThis could be fixed by adding the location to <code class=\"notranslate\">readWritePaths</code>, but<br>\nfirst we would have to determine if it was actually a local path, and<br>\nnot a remote one.</p>\n<p dir=\"auto\">Also some users might already have configured borgbackup to have more<br>\nconstrained user and group settings, so I could imagine this could<br>\nextend the permission of those jobs. But I think this could be a<br>\nmore secure default for most people.</p>\n<p dir=\"auto\">The whole idea apparently isn't new, it came up over at the borg-<br>\nbackup upstream issue tracker back in 2017.</p>\n<p dir=\"auto\"><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"205362105\" data-permission-text=\"Title is private\" data-url=\"https://github.com/borgbackup/borg/issues/2125\" data-hovercard-type=\"issue\" data-hovercard-url=\"/borgbackup/borg/issues/2125/hovercard\" href=\"https://github.com/borgbackup/borg/issues/2125\">borgbackup/borg#2125</a></p>\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested using sandboxing (<a href=\"https://nixos.org/nixos/manual/options.html#opt-nix.useSandbox\" rel=\"nofollow\">nix.useSandbox</a> on NixOS, or option <code class=\"notranslate\">sandbox</code> in <a href=\"https://nixos.org/nix/manual/#sec-conf-file\" rel=\"nofollow\"><code class=\"notranslate\">nix.conf</code></a> on non-NixOS linux)</li>\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> NixOS</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> macOS</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> other Linux distributions</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested via one or more NixOS test(s) if existing and applicable for the change (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all pkgs that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review wip\"</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested execution of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Determined the impact on package closure size (by running <code class=\"notranslate\">nix path-info -S</code> before and after)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Ensured that relevant documentation is up to date</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/.github/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>",
            "url": "https://github.com/NixOS/nixpkgs/pull/120571",
            "title": "RFC: nixos/borgbackup: run as DynamicUser",
            "date_modified": "2023-01-07T22:47:32.000Z",
            "date_published": "2021-04-25T00:06:49.000Z",
            "author": {
                "name": "mweinelt",
                "url": "https://github.com/mweinelt"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2189609?u=cfde4091c46cd2f5dd706a9b95673e8a915059ae&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This PR adds support for running services with supervisord as well as an OpenSSH module. I wanted to run an SSH server (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"542992703\" data-permission-text=\"Title is private\" data-url=\"https://github.com/t184256/nix-on-droid/issues/32\" data-hovercard-type=\"issue\" data-hovercard-url=\"/t184256/nix-on-droid/issues/32/hovercard\" href=\"https://github.com/t184256/nix-on-droid/issues/32\">#32</a>, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1080191732\" data-permission-text=\"Title is private\" data-url=\"https://github.com/t184256/nix-on-droid/issues/156\" data-hovercard-type=\"issue\" data-hovercard-url=\"/t184256/nix-on-droid/issues/156/hovercard\" href=\"https://github.com/t184256/nix-on-droid/issues/156\">#156</a>) that gets automatically launched when Nix-on-Droid starts, complete with process supervision.</p>\n<p dir=\"auto\">The <code class=\"notranslate\">supervisord.programs.&lt;name&gt;</code> options are designed to resemble <code class=\"notranslate\">systemd.services.&lt;name&gt;</code>:</p>\n<div class=\"highlight highlight-source-nix notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{ pkgs, ... }:\n{\n  supervisord.programs.sshd = {\n    path = [ pkgs.openssh ];\n    autoRestart = true;\n    script = ''\n      ssh-keygen ...\n\n      exec ${pkgs.openssh}/bin/sshd -D -f /etc/ssh/sshd_config\n    '';\n  };\n}\"><pre class=\"notranslate\">{ <span class=\"pl-smi\">pkgs</span><span class=\"pl-k\">,</span> <span class=\"pl-k\">... </span>}:\n{\n  <span class=\"pl-e\">supervisord</span>.<span class=\"pl-e\">programs</span>.<span class=\"pl-e\">sshd</span> <span class=\"pl-k\">=</span> {\n    <span class=\"pl-e\">path</span> <span class=\"pl-k\">=</span> [ <span class=\"pl-v\">pkgs</span><span class=\"pl-k\">.</span><span class=\"pl-v\">openssh</span> ];\n    <span class=\"pl-e\">autoRestart</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>;\n    <span class=\"pl-e\">script</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">''</span></span>\n<span class=\"pl-s\">      ssh-keygen ...</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">      exec <span class=\"pl-pse\">${</span><span class=\"pl-v\">pkgs</span><span class=\"pl-k\">.</span><span class=\"pl-v\">openssh</span><span class=\"pl-pse\">}</span>/bin/sshd -D -f /etc/ssh/sshd_config</span>\n<span class=\"pl-s\">    <span class=\"pl-pds\">''</span></span>;\n  };\n}</pre></div>\n<p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #54.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"565408074\" data-permission-text=\"Title is private\" data-url=\"https://github.com/t184256/nix-on-droid/issues/54\" data-hovercard-type=\"issue\" data-hovercard-url=\"/t184256/nix-on-droid/issues/54/hovercard\" href=\"https://github.com/t184256/nix-on-droid/issues/54\">#54</a>.</p>",
            "url": "https://github.com/t184256/nix-on-droid/pull/203",
            "title": "modules/supervisord: init, modules/openssh: init",
            "date_modified": "2023-01-07T11:39:23.000Z",
            "date_published": "2022-09-21T09:32:25.000Z",
            "author": {
                "name": "zhaofengli",
                "url": "https://github.com/zhaofengli"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/8219659?u=feca5093022b2e71eba8039d82785e2140800f97&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h6 dir=\"auto\">Motivation for this change</h6>\n<p dir=\"auto\">In many packages, the C compiler is not used, so stdenv could be stdenvNoCC.</p>\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested using sandboxing (<a href=\"https://nixos.org/nixos/manual/options.html#opt-nix.useSandbox\" rel=\"nofollow\">nix.useSandbox</a> on NixOS, or option <code class=\"notranslate\">sandbox</code> in <a href=\"https://nixos.org/nix/manual/#sec-conf-file\" rel=\"nofollow\"><code class=\"notranslate\">nix.conf</code></a> on non-NixOS linux)</li>\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> NixOS</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> macOS</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> other Linux distributions</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested via one or more NixOS test(s) if existing and applicable for the change (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all pkgs that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review wip\"</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested execution of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Determined the impact on package closure size (by running <code class=\"notranslate\">nix path-info -S</code> before and after)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Ensured that relevant documentation is up to date</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/.github/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>",
            "url": "https://github.com/NixOS/nixpkgs/pull/117451",
            "title": "treewide: use stdenvNoCC when not building",
            "date_modified": "2022-07-31T04:13:27.000Z",
            "date_published": "2021-03-24T09:29:31.000Z",
            "author": {
                "name": "siraben",
                "url": "https://github.com/siraben"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/750786?u=06b6e032b60550f708bad045fd8bc1d2197a3680&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<h6 dir=\"auto\">Motivation for this change</h6>\n<p dir=\"auto\">The current version of cockroachdb has reached EOL about a month ago.</p>\n<h6 dir=\"auto\">Things done</h6>\n<ul dir=\"auto\">\n<li>Removed the EOL version</li>\n<li>Added a generic builder to support multiple versions</li>\n<li>Added the three versions that are still supported in some way</li>\n</ul>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> For non-Linux: Is <code class=\"notranslate\">sandbox = true</code> set in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2205-release-notes\">22.05 Release Notes (or backporting 21.11 Release notes)</a>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Release notes changes) Ran <code class=\"notranslate\">nixos/doc/manual/md-to-db.sh</code> to update generated release notes</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>",
            "url": "https://github.com/NixOS/nixpkgs/pull/152626",
            "title": "CockroachDB: 20.1.8 -> {20.2.18, 21.1.13, 21.2.4}",
            "date_modified": "2023-02-09T14:56:12.000Z",
            "date_published": "2021-12-29T21:28:58.000Z",
            "author": {
                "name": "ankhers",
                "url": "https://github.com/ankhers"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/18535642?u=1d9947794947098f0c1ac4cd5d543ec44cca6c04&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h6 dir=\"auto\">Motivation for this change</h6>\n<p dir=\"auto\">These match the behaviour of the existing nginx patch.</p>\n<p dir=\"auto\">It would be nice to not have to patch every web server under the sun, but unfortunately I don't see a better option; ETag calculation is pretty uniformly this naive. A potential alternative, though wider-reaching than is in scope for a simple nixpkgs PR like this one, would be to set the mtime of files in the Nix store to an arbitrary date based on their store hash. (There's some precedent for this in other systems; I forget the details, but one of the fields in PKI used to be a date but is now filled with some arbitrary entropy.)</p>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/GrahamcOfBorg/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/GrahamcOfBorg\">@GrahamcOfBorg</a> build caddy2 h2o</p>\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested using sandboxing (<a href=\"http://nixos.org/nixos/manual/options.html#opt-nix.useSandbox\" rel=\"nofollow\">nix.useSandbox</a> on NixOS, or option <code class=\"notranslate\">sandbox</code> in <a href=\"http://nixos.org/nix/manual/#sec-conf-file\" rel=\"nofollow\"><code class=\"notranslate\">nix.conf</code></a> on non-NixOS linux)</li>\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> NixOS</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> macOS</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> other Linux distributions</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested via one or more NixOS test(s) if existing and applicable for the change (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all pkgs that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review wip\"</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested execution of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Determined the impact on package closure size (by running <code class=\"notranslate\">nix path-info -S</code> before and after)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Ensured that relevant documentation is up to date</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/.github/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>",
            "url": "https://github.com/NixOS/nixpkgs/pull/83111",
            "title": "{caddy2,h2o}: use hash of path as ETag in Nix store",
            "date_modified": "2022-11-02T04:36:32.000Z",
            "date_published": "2020-03-22T00:37:54.000Z",
            "author": {
                "name": "emilazy",
                "url": "https://github.com/emilazy"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/11366022?u=6fda465eb8146a4af6510dbc3869235b23216e29&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This pull request adds meson buildsystem support. meson allows for better cross platform support. and is a LOT easier to maintain when compared to autotools. There are also some modifications to fix compilation on FreeBSD.</p>\n<p dir=\"auto\">TODO:</p>\n<ul dir=\"auto\">\n<li>add meson support for tests</li>\n<li>add meson support for docs</li>\n<li>add amazon s3 building</li>\n</ul>",
            "url": "https://github.com/NixOS/nix/pull/3160",
            "title": "added meson support",
            "date_modified": "2023-03-27T13:43:21.000Z",
            "date_published": "2019-10-21T17:09:49.000Z",
            "author": {
                "name": "p01arst0rm",
                "url": "https://github.com/p01arst0rm"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5317234?u=37e2019ee3c4c0f35fb7aa259c0b14e18128fe7f&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This proposal is around changing the default shell of bash to an alternative shell called oil.</p>\n<p dir=\"auto\">The main point is that it seems the changes should be small and the benefits look promising</p>\n<p dir=\"auto\"><a href=\"https://github.com/happysalada/rfcs/blob/change_default_shell_to_oil/0099-Replacing%20bash%20as%20the%20default%20shell.md\">Rendered version</a></p>",
            "url": "https://github.com/NixOS/rfcs/pull/99",
            "title": "[RFC 0099] Change default shell from bash to oil",
            "date_modified": "2022-06-15T23:48:35.000Z",
            "date_published": "2021-08-12T05:44:11.000Z",
            "author": {
                "name": "happysalada",
                "url": "https://github.com/happysalada"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/391919?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">... and I think I know about the fourth one, similar to the third, but I'm too tired for now already.</p>\n<p dir=\"auto\">First 5 commits are more or less cleanup. Then there are 3 pairs with each pair first adding a failing test that should have worked and then the next commit fixing <code class=\"notranslate\">git-signatures</code> so that it would actually work.</p>\n<p dir=\"auto\">I also strongly suggest:</p>\n<ul dir=\"auto\">\n<li>rewriting this for <code class=\"notranslate\">bash -e</code>, I frequently find errors this way,</li>\n<li>using four spaces for indent :)</li>\n</ul>",
            "url": "https://github.com/hashbang/git-signatures/pull/13",
            "title": "Fix three zero days",
            "date_modified": "2018-10-05T21:13:20.000Z",
            "date_published": "2018-10-02T05:08:46.000Z",
            "author": {
                "name": "oxij",
                "url": "https://github.com/oxij"
            }
        }
    ]
}