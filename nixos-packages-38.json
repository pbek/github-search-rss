{
    "version": "https://jsonfeed.org/version/1",
    "title": "NixOS Package PRs for nmap, xclip, libcap-2.68, fishplugin-fzf.fish, cmake, pinentry-1.2.1 packages",
    "home_page_url": "https://pbek.github.io/github-search-rss/nixos-packages-38.json",
    "feed_url": "https://pbek.github.io/github-search-rss/nixos-packages-38.json",
    "description": "NixOS Package PRs for nmap, xclip, libcap-2.68, fishplugin-fzf.fish, cmake, pinentry-1.2.1 packages on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1682954?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<p dir=\"auto\">Enable cmake support to be able to consume this as a dependency from projects using cmake.<br>\nModernize &amp; fmt.</p>\n<h2 dir=\"auto\">Things done</h2>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li>For non-Linux: Is sandboxing enabled in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = relaxed</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = true</code></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/README.md#package-tests\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/README.md#linking-nixos-module-tests-to-a-package\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2411.section.md\">24.11 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11</a> and <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2405.section.md\">24.05</a> Release notes)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n\n<hr>\n<p dir=\"auto\">Add a üëç <a href=\"https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\" rel=\"nofollow\">reaction</a> to <a href=\"https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc\">pull requests you find important</a>.</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/349764",
            "title": "libamqpcpp: build with cmake support",
            "date_modified": "2024-10-19T14:23:05.000Z",
            "date_published": "2024-10-19T12:55:25.000Z",
            "author": {
                "name": "fliiiix",
                "url": "https://github.com/fliiiix"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/226650?u=9603aebc31635c014eac5345c0223757807babef&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Changes: <a href=\"https://cmake.org/cmake/help/latest/release/3.30.html#id25\" rel=\"nofollow\">https://cmake.org/cmake/help/latest/release/3.30.html#id25</a></p>\n\n<h2 dir=\"auto\">Things done</h2>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li>For non-Linux: Is sandboxing enabled in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = relaxed</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = true</code></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/README.md#package-tests\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/README.md#linking-nixos-module-tests-to-a-package\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2411.section.md\">24.11 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11</a> and <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2405.section.md\">24.05</a> Release notes)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n\n<hr>\n<p dir=\"auto\">Add a üëç <a href=\"https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\" rel=\"nofollow\">reaction</a> to <a href=\"https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc\">pull requests you find important</a>.</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/349465",
            "title": "cmake: 3.30.4 -> 3.30.5",
            "date_modified": "2024-10-19T19:35:59.000Z",
            "date_published": "2024-10-18T06:15:32.000Z",
            "author": {
                "name": "trofi",
                "url": "https://github.com/trofi"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2768870?u=4bd5646894dcea5a875ae3ec0c75e297dc3cd9ce&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This is not a good idea for packaging, because it will mean frequent new build failures when compilers introduce new warnings (that they have deliberately not made errors), or e.g. Qt deprecates some API (as has happened in 6.8).</p>\n<p dir=\"auto\">Fixes build on staging-next.</p>\n\n<h2 dir=\"auto\">Things done</h2>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li>For non-Linux: Is sandboxing enabled in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = relaxed</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = true</code></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/README.md#package-tests\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/README.md#linking-nixos-module-tests-to-a-package\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2411.section.md\">24.11 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11</a> and <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2405.section.md\">24.05</a> Release notes)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n\n<hr>\n<p dir=\"auto\">Add a üëç <a href=\"https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\" rel=\"nofollow\">reaction</a> to <a href=\"https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc\">pull requests you find important</a>.</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/348088",
            "title": "obs-studio: disable CMAKE_COMPILE_WARNING_AS_ERROR",
            "date_modified": "2024-10-14T13:37:47.000Z",
            "date_published": "2024-10-12T13:11:48.000Z",
            "author": {
                "name": "alyssais",
                "url": "https://github.com/alyssais"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/893884?u=774d6826c6b0b4a501efe1533e4ebb761a9d3bf4&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This is a small change that removes the overriding of <code class=\"notranslate\">CMAKE_SKIP_RPATH</code> in the CMake build script. This same change was made soon after the 3.2.0 release upstream in this commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/icculus/physfs/commit/2ff4a37a0c375f6ef43e8092d06f5334e9d83174/hovercard\" href=\"https://github.com/icculus/physfs/commit/2ff4a37a0c375f6ef43e8092d06f5334e9d83174\">icculus/physfs@<tt>2ff4a37</tt></a>.</p>\n<p dir=\"auto\">The build system setting that option causes the install name of the library on macOS to become <code class=\"notranslate\">libphysfs.1.dylib</code> instead of <code class=\"notranslate\">@rpath/libphysfs.1.dylib</code> (and in the final path in the store, <code class=\"notranslate\">/nix/store/[...]/libphysfs.1.dylib</code>), so things that link physfs such as the VVVVVV game will fail to load the library at runtime as the dynamic linker won't know where to find it.</p>\n\n<h2 dir=\"auto\">Things done</h2>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> aarch64-darwin</li>\n</ul>\n</li>\n<li>For non-Linux: Is sandboxing enabled in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = relaxed</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = true</code></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/README.md#package-tests\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/README.md#linking-nixos-module-tests-to-a-package\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2411.section.md\">24.11 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11</a> and <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2405.section.md\">24.05</a> Release notes)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n\n<hr>\n<p dir=\"auto\">Add a üëç <a href=\"https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\" rel=\"nofollow\">reaction</a> to <a href=\"https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc\">pull requests you find important</a>.</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/346169",
            "title": "physfs: don't set CMAKE_SKIP_RPATH",
            "date_modified": "2024-10-03T14:26:46.000Z",
            "date_published": "2024-10-03T13:33:37.000Z",
            "author": {
                "name": "nadiaholmquist",
                "url": "https://github.com/nadiaholmquist"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/7258858?u=c524720e2844ffa8a2aa67944fde5af54031e06d&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Rewriting /usr and /opt to /var/empty is no longer necessary since the sandbox was introduced. It also introduced unexpected side effects and changes paths like $out/etc/opt/ to $out/etc/var/empty/</p>\n<p dir=\"auto\"><span class=\"issue-keyword\">Closes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"216166131\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/24215\" data-hovercard-type=\"issue\" data-hovercard-url=\"/NixOS/nixpkgs/issues/24215/hovercard\" href=\"https://github.com/NixOS/nixpkgs/issues/24215\">#24215</a></p>\n<h6 dir=\"auto\">Description of changes</h6>\n\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> For non-Linux: Is <code class=\"notranslate\">sandbox = true</code> set in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2305-release-notes\">23.05 Release Notes (or backporting 22.11 Release notes)</a>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n",
            "url": "https://github.com/NixOS/nixpkgs/pull/232522",
            "title": "cmake: remove fixCmakeFiles",
            "date_modified": "2024-08-30T04:16:43.000Z",
            "date_published": "2023-05-17T23:19:37.000Z",
            "author": {
                "name": "SuperSandro2000",
                "url": "https://github.com/SuperSandro2000"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/44064051?u=72bfba8e870895a2d7737c0f13def841c7438e7e&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Description of changes</h2>\n<p dir=\"auto\">This pull reques lints the setup hooks of <code class=\"notranslate\">cmake</code> with ShellCheck, making them more resilient to edge cases such as strings containing white spaces.</p>\n<p dir=\"auto\">Split from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2212163620\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/299622\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/299622/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/299622\">#299622</a></p>\n<h2 dir=\"auto\">Things done</h2>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux (built <code class=\"notranslate\">cmakeMinimal</code>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li>For non-Linux: Is sandboxing enabled in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = relaxed</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = true</code></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/README.md#package-tests\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2411.section.md\">24.11 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11</a> and <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2405.section.md\">24.05</a> Release notes)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n\n<hr>\n<p dir=\"auto\">Add a üëç <a href=\"https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\" rel=\"nofollow\">reaction</a> to <a href=\"https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc\">pull requests you find important</a>.</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/335704",
            "title": "cmake: lint setuphooks with ShellCheck",
            "date_modified": "2024-08-19T15:54:49.000Z",
            "date_published": "2024-08-18T23:56:46.000Z",
            "author": {
                "name": "ShamrockLee",
                "url": "https://github.com/ShamrockLee"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/44064051?u=72bfba8e870895a2d7737c0f13def841c7438e7e&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Description of changes</h2>\n<p dir=\"auto\">This PR extracts the default CMake flags pretending code into its own Bash function <code class=\"notranslate\">genCmakeDefaultFlags()</code>. Instead of pretending the flags to <code class=\"notranslate\">cmakeFlags</code>, it collects them into a global Bash array <code class=\"notranslate\">cmakeDefaultFlags</code>.</p>\n<p dir=\"auto\">Original discussions:<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2342460022\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/318614\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/318614/hovercard?comment_id=2214801613&amp;comment_type=issue_comment\" href=\"https://github.com/NixOS/nixpkgs/pull/318614#issuecomment-2214801613\">#318614 (comment)</a><br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2212163620\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/299622\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/299622/hovercard?comment_id=2295022373&amp;comment_type=issue_comment\" href=\"https://github.com/NixOS/nixpkgs/pull/299622#issuecomment-2295022373\">#299622 (comment)</a></p>\n<p dir=\"auto\">Cc: <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/AndersonTorres/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/AndersonTorres\">@AndersonTorres</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jtojnar/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jtojnar\">@jtojnar</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/wolfgangwalther/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/wolfgangwalther\">@wolfgangwalther</a></p>\n<h2 dir=\"auto\">Things done</h2>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux (built <code class=\"notranslate\">cmakeMinimal</code>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li>For non-Linux: Is sandboxing enabled in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = relaxed</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = true</code></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/README.md#package-tests\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2411.section.md\">24.11 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11</a> and <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2405.section.md\">24.05</a> Release notes)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n\n<hr>\n<p dir=\"auto\">Add a üëç <a href=\"https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\" rel=\"nofollow\">reaction</a> to <a href=\"https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc\">pull requests you find important</a>.</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/335682",
            "title": "cmake: setup-hook.sh: add genCmakeDefaultFlags()",
            "date_modified": "2024-08-31T06:15:33.000Z",
            "date_published": "2024-08-18T21:34:54.000Z",
            "author": {
                "name": "ShamrockLee",
                "url": "https://github.com/ShamrockLee"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/9590981?u=4bee3912bdf56af8799c0686f4d599baa77b8ec2&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Description of changes</h2>\n<p dir=\"auto\"><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1822284517\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/245527\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/245527/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/245527\">#245527</a> PR author ran into the issue (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1041779826\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/144170\" data-hovercard-type=\"issue\" data-hovercard-url=\"/NixOS/nixpkgs/issues/144170/hovercard\" href=\"https://github.com/NixOS/nixpkgs/issues/144170\">#144170</a>) where many programs expect <code class=\"notranslate\">CMAKE_INSTALL_LIBDIR</code> &amp; co. to be a relative path, but NixOS sets it to an absolute path. Fedora used to do the same until 2012, but ran into the same issue so it doesn't do that anymore.</p>\n<p dir=\"auto\">Leaving aside whether this should be reconsidered like Fedora did, the <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1822284517\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/245527\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/245527/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/245527\">#245527</a> PR author saw the warning about <code class=\"notranslate\">//nix</code> being in a .pc file, so they fixed the code to use <code class=\"notranslate\">CMAKE_INSTALL_FULL_LIBDIR</code>. This got rid of the warning, but the <code class=\"notranslate\">.cmake</code> files still contained <code class=\"notranslate\">//nix</code>. This PR adds a warning for <code class=\"notranslate\">}//nix</code> in <code class=\"notranslate\">.cmake</code> files as well (maybe <code class=\"notranslate\">//nix</code> check would make more sense since it's comparatively less likely that it would be <code class=\"notranslate\">}//nix</code> in .cmake files).</p>\n<h2 dir=\"auto\">Things done</h2>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> For non-Linux: Is <code class=\"notranslate\">sandbox = true</code> set in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2305.section.md\">23.05 Release notes</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n",
            "url": "https://github.com/NixOS/nixpkgs/pull/247474",
            "title": "cmake: make check-pc-files hook also check .cmake files",
            "date_modified": "2024-08-08T22:43:52.000Z",
            "date_published": "2023-08-06T07:30:40.000Z",
            "author": {
                "name": "chayleaf",
                "url": "https://github.com/chayleaf"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/62384384?u=853b6f305c10b39d54b5bb4b2a8942c012e03a02&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Description of changes</h2>\n<p dir=\"auto\">Use <code class=\"notranslate\">FETCHCONTENT_SOURCE_DIR_&lt;uppercaseName&gt;</code> for overriding fetchcontent source dir, instead of patching.</p>\n\n<h2 dir=\"auto\">Things done</h2>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li>For non-Linux: Is sandboxing enabled in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = relaxed</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = true</code></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/README.md#package-tests\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/README.md#linking-nixos-module-tests-to-a-package\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2411.section.md\">24.11 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11</a> and <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2405.section.md\">24.05</a> Release notes)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n\n<hr>\n<p dir=\"auto\">Add a üëç <a href=\"https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\" rel=\"nofollow\">reaction</a> to <a href=\"https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc\">pull requests you find important</a>.</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/343588",
            "title": "nanoboyadvance: use cmake flag instead of patch for glad source",
            "date_modified": "2024-09-21T22:33:49.000Z",
            "date_published": "2024-09-21T21:45:18.000Z",
            "author": {
                "name": "TomaSajt",
                "url": "https://github.com/TomaSajt"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1753388?u=03a487a7dfe79b10caf97771926c1ca975eccbc4&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<h2 dir=\"auto\">Things done</h2>\n<p dir=\"auto\">(refer to PR title)</p>\n<p dir=\"auto\">As a nice side-effect, this reduces the size of .out from 12MB to 3MB.</p>\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li>For non-Linux: Is sandboxing enabled in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = relaxed</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <code class=\"notranslate\">sandbox = true</code></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/README.md#package-tests\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/README.md#linking-nixos-module-tests-to-a-package\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2411.section.md\">24.11 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11</a> and <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2405.section.md\">24.05</a> Release notes)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n\n<hr>\n<p dir=\"auto\">Result of <code class=\"notranslate\">nixpkgs-review</code> run on x86_64-linux <a href=\"https://github.com/Mic92/nixpkgs-review\">1</a></p>\n<details>\n  <summary>12 packages failed to build:</summary>\n  <ul dir=\"auto\">\n    <li>authentik</li>\n    <li>dvc-with-remotes</li>\n    <li>dvc-with-remotes.dist</li>\n    <li>kafka-delta-ingest</li>\n    <li>python311Packages.django-health-check</li>\n    <li>python311Packages.django-health-check.dist</li>\n    <li>python312Packages.django-health-check</li>\n    <li>python312Packages.django-health-check.dist</li>\n    <li>quickgui</li>\n    <li>quickgui.debug</li>\n    <li>quickgui.pubcache</li>\n    <li>vector</li>\n  </ul>\n</details>\n<details>\n  <summary>153 packages built:</summary>\n  <ul dir=\"auto\">\n    <li>ceph</li>\n    <li>ceph-client</li>\n    <li>ceph-csi</li>\n    <li>ceph.dev</li>\n    <li>ceph.doc</li>\n    <li>libceph (ceph.lib ,libceph.dev ,libceph.doc ,libceph.lib ,libceph.man)</li>\n    <li>ceph.man</li>\n    <li>collectd</li>\n    <li>dvc (python312Packages.dvc)</li>\n    <li>dvc.dist (python312Packages.dvc.dist)</li>\n    <li>kcat</li>\n    <li>libserdes</li>\n    <li>libserdes.dev</li>\n    <li>materialize</li>\n    <li>modern-cpp-kafka</li>\n    <li>ntopng</li>\n    <li>ocamlPackages.kafka</li>\n    <li>paperless-ngx</li>\n    <li>php81Extensions.rdkafka</li>\n    <li>php82Extensions.rdkafka</li>\n    <li>php83Extensions.rdkafka</li>\n    <li>php84Extensions.rdkafka</li>\n    <li>pretalx</li>\n    <li>pretalx.dist</li>\n    <li>pretalx.static</li>\n    <li>pretix</li>\n    <li>pretix.dist</li>\n    <li>python311Packages.bytewax</li>\n    <li>python311Packages.bytewax.dist</li>\n    <li>python311Packages.celery</li>\n    <li>python311Packages.celery-redbeat</li>\n    <li>python311Packages.celery-redbeat.dist</li>\n    <li>python311Packages.celery-singleton</li>\n    <li>python311Packages.celery-singleton.dist</li>\n    <li>python311Packages.celery.dist</li>\n    <li>python311Packages.confluent-kafka</li>\n    <li>python311Packages.confluent-kafka.dist</li>\n    <li>python311Packages.django-celery-beat</li>\n    <li>python311Packages.django-celery-beat.dist</li>\n    <li>python311Packages.django-celery-email</li>\n    <li>python311Packages.django-celery-email.dist</li>\n    <li>python311Packages.django-celery-results</li>\n    <li>python311Packages.django-celery-results.dist</li>\n    <li>python311Packages.django-google-analytics-app</li>\n    <li>python311Packages.django-google-analytics-app.dist</li>\n    <li>python311Packages.django-raster</li>\n    <li>python311Packages.django-raster.dist</li>\n    <li>python311Packages.djmail</li>\n    <li>python311Packages.djmail.dist</li>\n    <li>python311Packages.dvc</li>\n    <li>python311Packages.dvc-gdrive</li>\n    <li>python311Packages.dvc-gdrive.dist</li>\n    <li>python311Packages.dvc-hdfs</li>\n    <li>python311Packages.dvc-hdfs.dist</li>\n    <li>python311Packages.dvc-task</li>\n    <li>python311Packages.dvc-task.dist</li>\n    <li>python311Packages.dvc.dist</li>\n    <li>python311Packages.dvclive</li>\n    <li>python311Packages.dvclive.dist</li>\n    <li>python311Packages.flower</li>\n    <li>python311Packages.flower.dist</li>\n    <li>python311Packages.kombu</li>\n    <li>python311Packages.kombu.dist</li>\n    <li>python311Packages.mmcv</li>\n    <li>python311Packages.mmcv.dist</li>\n    <li>python311Packages.mmengine</li>\n    <li>python311Packages.mmengine.dist</li>\n    <li>python311Packages.nameko</li>\n    <li>python311Packages.nameko.dist</li>\n    <li>python311Packages.opentelemetry-instrumentation-celery</li>\n    <li>python311Packages.opentelemetry-instrumentation-celery.dist</li>\n    <li>python311Packages.streamz</li>\n    <li>python311Packages.streamz.dist</li>\n    <li>python312Packages.bytewax</li>\n    <li>python312Packages.bytewax.dist</li>\n    <li>python312Packages.celery</li>\n    <li>python312Packages.celery-redbeat</li>\n    <li>python312Packages.celery-redbeat.dist</li>\n    <li>python312Packages.celery-singleton</li>\n    <li>python312Packages.celery-singleton.dist</li>\n    <li>python312Packages.celery.dist</li>\n    <li>python312Packages.confluent-kafka</li>\n    <li>python312Packages.confluent-kafka.dist</li>\n    <li>python312Packages.django-celery-beat</li>\n    <li>python312Packages.django-celery-beat.dist</li>\n    <li>python312Packages.django-celery-email</li>\n    <li>python312Packages.django-celery-email.dist</li>\n    <li>python312Packages.django-celery-results</li>\n    <li>python312Packages.django-celery-results.dist</li>\n    <li>python312Packages.django-google-analytics-app</li>\n    <li>python312Packages.django-google-analytics-app.dist</li>\n    <li>python312Packages.django-raster</li>\n    <li>python312Packages.django-raster.dist</li>\n    <li>python312Packages.djmail</li>\n    <li>python312Packages.djmail.dist</li>\n    <li>python312Packages.dvc-gdrive</li>\n    <li>python312Packages.dvc-gdrive.dist</li>\n    <li>python312Packages.dvc-hdfs</li>\n    <li>python312Packages.dvc-hdfs.dist</li>\n    <li>python312Packages.dvc-task</li>\n    <li>python312Packages.dvc-task.dist</li>\n    <li>python312Packages.dvclive</li>\n    <li>python312Packages.dvclive.dist</li>\n    <li>python312Packages.flower</li>\n    <li>python312Packages.flower.dist</li>\n    <li>python312Packages.kombu</li>\n    <li>python312Packages.kombu.dist</li>\n    <li>python312Packages.mmcv</li>\n    <li>python312Packages.mmcv.dist</li>\n    <li>python312Packages.mmengine</li>\n    <li>python312Packages.mmengine.dist</li>\n    <li>python312Packages.nameko</li>\n    <li>python312Packages.nameko.dist</li>\n    <li>python312Packages.opentelemetry-instrumentation-celery</li>\n    <li>python312Packages.opentelemetry-instrumentation-celery.dist</li>\n    <li>python312Packages.streamz</li>\n    <li>python312Packages.streamz.dist</li>\n    <li>qemu_full</li>\n    <li>qemu_full.debug</li>\n    <li>qemu_full.ga</li>\n    <li>quickemu</li>\n    <li>rdkafka</li>\n    <li>rdkafka.dev</li>\n    <li>rsyslog</li>\n    <li>samba4Full</li>\n    <li>samba4Full.dev</li>\n    <li>samba4Full.man</li>\n    <li>sbclPackages.cl-rdkafka</li>\n    <li>sourcehut.buildsrht</li>\n    <li>sourcehut.buildsrht.dist</li>\n    <li>sourcehut.coresrht</li>\n    <li>sourcehut.coresrht.dist</li>\n    <li>sourcehut.gitsrht</li>\n    <li>sourcehut.gitsrht.dist</li>\n    <li>sourcehut.hgsrht</li>\n    <li>sourcehut.hgsrht.dist</li>\n    <li>sourcehut.hubsrht</li>\n    <li>sourcehut.hubsrht.dist</li>\n    <li>sourcehut.listssrht</li>\n    <li>sourcehut.listssrht.dist</li>\n    <li>sourcehut.mansrht</li>\n    <li>sourcehut.mansrht.dist</li>\n    <li>sourcehut.metasrht</li>\n    <li>sourcehut.metasrht.dist</li>\n    <li>sourcehut.pastesrht</li>\n    <li>sourcehut.pastesrht.dist</li>\n    <li>sourcehut.todosrht</li>\n    <li>sourcehut.todosrht.dist</li>\n    <li>syslogng</li>\n    <li>syslogng.man</li>\n    <li>weblate</li>\n    <li>weblate.dist</li>\n    <li>weblate.static</li>\n  </ul>\n</details>\n<p dir=\"auto\">I've checked that authentik, dvc-with-remotes, kafka-delta-ingest, django-health-check, quickgui, and vector all also fail on the merge base, so I consider the failures to be benign.</p>\n<hr>\n<p dir=\"auto\">Add a üëç <a href=\"https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\" rel=\"nofollow\">reaction</a> to <a href=\"https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc\">pull requests you find important</a>.</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/349725",
            "title": "rdkafka: switch to cmake, split outputs, remove static library from non-static targets, fix static build",
            "date_modified": "2024-10-20T12:08:50.000Z",
            "date_published": "2024-10-19T08:27:13.000Z",
            "author": {
                "name": "jcaesar",
                "url": "https://github.com/jcaesar"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/3880346?u=b07045cdae95b044728cc2f6f965415789956482&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Description of changes</h2>\n<p dir=\"auto\">Adds derivations to build the CMake CUDA test suite to verify our setup hooks and build environments are functioning as intended.</p>\n<p dir=\"auto\">Exposed through passthrough are derivations which require NixOS systems to have the <code class=\"notranslate\">\"cuda\"</code> system feature, as some of the tests require access to the GPU.</p>\n<div class=\"markdown-alert markdown-alert-important\" dir=\"auto\"><p class=\"markdown-alert-title\" dir=\"auto\"><svg class=\"octicon octicon-report mr-2\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"M0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v9.5A1.75 1.75 0 0 1 14.25 13H8.06l-2.573 2.573A1.458 1.458 0 0 1 3 14.543V13H1.75A1.75 1.75 0 0 1 0 11.25Zm1.75-.25a.25.25 0 0 0-.25.25v9.5c0 .138.112.25.25.25h2a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h6.5a.25.25 0 0 0 .25-.25v-9.5a.25.25 0 0 0-.25-.25Zm7 2.25v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 9a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\"></path></svg>Important</p>\n<p dir=\"auto\">TODO:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Update CMake files to build test executables and <em>run</em> test executables separately.</li>\n</ul>\n</div>\n\n<h2 dir=\"auto\">Things done</h2>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li>For non-Linux: Is sandboxing enabled in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = relaxed</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = true</code></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/README.md#package-tests\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2411.section.md\">24.11 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11</a> and <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2405.section.md\">24.05</a> Release notes)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n\n<hr>\n<p dir=\"auto\">Add a üëç <a href=\"https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\" rel=\"nofollow\">reaction</a> to <a href=\"https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc\">pull requests you find important</a>.</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/331342",
            "title": "cudaPackages.cmake-cuda-tests: init at 2.29.6",
            "date_modified": "2024-09-09T20:18:02.000Z",
            "date_published": "2024-07-31T17:36:02.000Z",
            "author": {
                "name": "ConnorBaker",
                "url": "https://github.com/ConnorBaker"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/37933096?u=b11a857efbc669246eb43904472627625dcdbbdb&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Automatic update generated by <a href=\"https://github.com/ryantm/nixpkgs-update\">nixpkgs-update</a> tools. This update was made based on information from passthru.updateScript.</p>\n<ul dir=\"auto\">\n<li>WARNING: Package has meta.broken=true; Please manually test this package update and remove the broken attribute.</li>\n</ul>\n<p dir=\"auto\">meta.description for rocmPackages.rocm-cmake is: CMake modules for common build tasks for the ROCm stack</p>\n<p dir=\"auto\">meta.homepage for rocmPackages.rocm-cmake is: <a href=\"https://github.com/ROCm/rocm-cmake\">https://github.com/ROCm/rocm-cmake</a></p>\n<h6 dir=\"auto\">Updates performed</h6>\n<ul dir=\"auto\">\n<li>Ran passthru.UpdateScript</li>\n</ul>\n<h6 dir=\"auto\">To inspect upstream changes</h6>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><a href=\"https://github.com/ROCm/rocm-cmake/releases/tag/rocm-6.1.0\">Release on GitHub</a></p>\n</li>\n<li>\n<p dir=\"auto\"><a href=\"https://github.com/ROCm/rocm-cmake/compare/rocm-6.0.2...rocm-6.1.0\">Compare changes on GitHub</a></p>\n</li>\n</ul>\n<h6 dir=\"auto\">Impact</h6>\n<p dir=\"auto\"><b>Checks done</b></p>\n<hr>\n<ul dir=\"auto\">\n<li>built on NixOS</li>\n<li>The tests defined in <code class=\"notranslate\">passthru.tests</code>, if any, passed</li>\n<li>found 6.1.0 in filename of file in /nix/store/k485w9x8dch0mh21h8g0lnw3s8mdx15v-rocm-cmake-6.1.0</li>\n</ul>\n<hr>\n<details>\n<summary>\n<b>Rebuild report</b> (if merged into master) (click to expand)\n</summary>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"96 total rebuild path(s)\n\n96 package rebuild(s)\n\nFirst fifty rebuilds by attrpath\nblender-hip\nrocmPackages.clang-ocl\nrocmPackages.clr\nrocmPackages.composable_kernel\nrocmPackages.half\nrocmPackages.hipblas\nrocmPackages.hipcub\nrocmPackages.hipfft\nrocmPackages.hipfort\nrocmPackages.hiprand\nrocmPackages.hipsolver\nrocmPackages.hipsparse\nrocmPackages.llvm.flang\nrocmPackages.llvm.mlir\nrocmPackages.llvm.openmp\nrocmPackages.migraphx\nrocmPackages.miopen\nrocmPackages.miopen-hip\nrocmPackages.mivisionx\nrocmPackages.mivisionx-cpu\nrocmPackages.mivisionx-hip\nrocmPackages.rccl\nrocmPackages.rdc\nrocmPackages.rocalution\nrocmPackages.rocblas\nrocmPackages.rocdbgapi\nrocmPackages.rocfft\nrocmPackages.rocm-cmake\nrocmPackages.rocm-comgr\nrocmPackages.rocm-device-libs\nrocmPackages.rocm-runtime\nrocmPackages.rocminfo\nrocmPackages.rocmlir\nrocmPackages.rocmlir-rock\nrocmPackages.rocprim\nrocmPackages.rocprofiler\nrocmPackages.rocr-debug-agent\nrocmPackages.rocrand\nrocmPackages.rocsolver\nrocmPackages.rocsparse\nrocmPackages.rocthrust\nrocmPackages.roctracer\nrocmPackages.rocwmma\nrocmPackages.rpp\nrocmPackages.rpp-cpu\nrocmPackages.rpp-hip\nrocmPackages.rpp-opencl\nrocmPackages.tensile\nrocmPackages_6.clang-ocl\nrocmPackages_6.clr\"><pre class=\"notranslate\"><code class=\"notranslate\">96 total rebuild path(s)\n\n96 package rebuild(s)\n\nFirst fifty rebuilds by attrpath\nblender-hip\nrocmPackages.clang-ocl\nrocmPackages.clr\nrocmPackages.composable_kernel\nrocmPackages.half\nrocmPackages.hipblas\nrocmPackages.hipcub\nrocmPackages.hipfft\nrocmPackages.hipfort\nrocmPackages.hiprand\nrocmPackages.hipsolver\nrocmPackages.hipsparse\nrocmPackages.llvm.flang\nrocmPackages.llvm.mlir\nrocmPackages.llvm.openmp\nrocmPackages.migraphx\nrocmPackages.miopen\nrocmPackages.miopen-hip\nrocmPackages.mivisionx\nrocmPackages.mivisionx-cpu\nrocmPackages.mivisionx-hip\nrocmPackages.rccl\nrocmPackages.rdc\nrocmPackages.rocalution\nrocmPackages.rocblas\nrocmPackages.rocdbgapi\nrocmPackages.rocfft\nrocmPackages.rocm-cmake\nrocmPackages.rocm-comgr\nrocmPackages.rocm-device-libs\nrocmPackages.rocm-runtime\nrocmPackages.rocminfo\nrocmPackages.rocmlir\nrocmPackages.rocmlir-rock\nrocmPackages.rocprim\nrocmPackages.rocprofiler\nrocmPackages.rocr-debug-agent\nrocmPackages.rocrand\nrocmPackages.rocsolver\nrocmPackages.rocsparse\nrocmPackages.rocthrust\nrocmPackages.roctracer\nrocmPackages.rocwmma\nrocmPackages.rpp\nrocmPackages.rpp-cpu\nrocmPackages.rpp-hip\nrocmPackages.rpp-opencl\nrocmPackages.tensile\nrocmPackages_6.clang-ocl\nrocmPackages_6.clr\n</code></pre></div>\n</details>\n<details>\n<summary>\n<b>Instructions to test this update</b> (click to expand)\n</summary>\n<hr>\n<p dir=\"auto\">Either <strong>download from Cachix</strong>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"nix-store -r /nix/store/k485w9x8dch0mh21h8g0lnw3s8mdx15v-rocm-cmake-6.1.0 \\\n  --option binary-caches 'https://cache.nixos.org/ https://nix-community.cachix.org/' \\\n  --option trusted-public-keys '\n  nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=\n  cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=\n  '\"><pre class=\"notranslate\"><code class=\"notranslate\">nix-store -r /nix/store/k485w9x8dch0mh21h8g0lnw3s8mdx15v-rocm-cmake-6.1.0 \\\n  --option binary-caches 'https://cache.nixos.org/ https://nix-community.cachix.org/' \\\n  --option trusted-public-keys '\n  nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=\n  cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=\n  '\n</code></pre></div>\n<p dir=\"auto\">(The Cachix cache is only trusted for this store-path realization.)<br>\nFor the Cachix download to work, your user must be in the <code class=\"notranslate\">trusted-users</code> list or you can use <code class=\"notranslate\">sudo</code> since root is effectively trusted.</p>\n<p dir=\"auto\">Or, <strong>build yourself</strong>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"nix-build -A rocmPackages.rocm-cmake https://github.com/r-ryantm/nixpkgs/archive/1cc6ac622ff9b4a1f019e4871bcc0e89ddaac891.tar.gz\"><pre class=\"notranslate\"><code class=\"notranslate\">nix-build -A rocmPackages.rocm-cmake https://github.com/r-ryantm/nixpkgs/archive/1cc6ac622ff9b4a1f019e4871bcc0e89ddaac891.tar.gz\n</code></pre></div>\n<p dir=\"auto\">Or:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"nix build github:r-ryantm/nixpkgs/1cc6ac622ff9b4a1f019e4871bcc0e89ddaac891#rocmPackages.rocm-cmake\"><pre class=\"notranslate\"><code class=\"notranslate\">nix build github:r-ryantm/nixpkgs/1cc6ac622ff9b4a1f019e4871bcc0e89ddaac891#rocmPackages.rocm-cmake\n</code></pre></div>\n<p dir=\"auto\">After you've downloaded or built it, look at the files and if there are any, run the binaries:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"ls -la /nix/store/k485w9x8dch0mh21h8g0lnw3s8mdx15v-rocm-cmake-6.1.0\nls -la /nix/store/k485w9x8dch0mh21h8g0lnw3s8mdx15v-rocm-cmake-6.1.0/bin\"><pre class=\"notranslate\"><code class=\"notranslate\">ls -la /nix/store/k485w9x8dch0mh21h8g0lnw3s8mdx15v-rocm-cmake-6.1.0\nls -la /nix/store/k485w9x8dch0mh21h8g0lnw3s8mdx15v-rocm-cmake-6.1.0/bin\n</code></pre></div>\n<hr>\n</details>\n<br>\n<h3 dir=\"auto\">Pre-merge build results</h3>\n<p dir=\"auto\">We have automatically built all packages that will get rebuilt due to<br>\nthis change.</p>\n<p dir=\"auto\">This gives evidence on whether the upgrade will break dependent packages.<br>\nNote sometimes packages show up as <em>failed to build</em> independent of the<br>\nchange, simply because they are already broken on the target branch.</p>\n<p dir=\"auto\">Result of <code class=\"notranslate\">nixpkgs-review --extra-nixpkgs-config '{ allowInsecurePredicate = x: true; }'</code> run on x86_64-linux <a href=\"https://github.com/Mic92/nixpkgs-review\">1</a></p>\n<details>\n  <summary>59 packages marked as broken and skipped:</summary>\n  <ul dir=\"auto\">\n    <li>blender-hip</li>\n    <li>rocmPackages.clang-ocl</li>\n    <li>rocmPackages.clr</li>\n    <li>rocmPackages.clr.icd</li>\n    <li>rocmPackages.composable_kernel</li>\n    <li>rocmPackages.half</li>\n    <li>rocmPackages.hipblas</li>\n    <li>rocmPackages.hipcub</li>\n    <li>rocmPackages.hipfft</li>\n    <li>rocmPackages.hipfort</li>\n    <li>rocmPackages.hiprand</li>\n    <li>rocmPackages.hipsolver</li>\n    <li>rocmPackages.hipsparse</li>\n    <li>rocmPackages.llvm.flang</li>\n    <li>rocmPackages.llvm.flang.doc</li>\n    <li>rocmPackages.llvm.flang.info</li>\n    <li>rocmPackages.llvm.flang.man</li>\n    <li>rocmPackages.llvm.mlir</li>\n    <li>rocmPackages.llvm.openmp</li>\n    <li>rocmPackages.llvm.openmp.doc</li>\n    <li>rocmPackages.llvm.openmp.info</li>\n    <li>rocmPackages.llvm.openmp.man</li>\n    <li>rocmPackages.migraphx</li>\n    <li>rocmPackages.miopen</li>\n    <li>rocmPackages.mivisionx</li>\n    <li>rocmPackages.mivisionx-cpu</li>\n    <li>rocmPackages.mivisionx-hip</li>\n    <li>rocmPackages.rccl</li>\n    <li>rocmPackages.rdc</li>\n    <li>rocmPackages.rdc.doc</li>\n    <li>rocmPackages.rocalution</li>\n    <li>rocmPackages.rocblas</li>\n    <li>rocmPackages.rocdbgapi</li>\n    <li>rocmPackages.rocdbgapi.doc</li>\n    <li>rocmPackages.rocfft</li>\n    <li>rocmPackages.rocm-cmake</li>\n    <li>rocmPackages.rocm-comgr</li>\n    <li>rocmPackages.rocm-device-libs</li>\n    <li>rocmPackages.rocm-runtime</li>\n    <li>rocmPackages.rocminfo</li>\n    <li>rocmPackages.rocmlir</li>\n    <li>rocmPackages.rocmlir-rock</li>\n    <li>rocmPackages.rocmlir.external</li>\n    <li>rocmPackages.rocprim</li>\n    <li>rocmPackages.rocprofiler</li>\n    <li>rocmPackages.rocr-debug-agent</li>\n    <li>rocmPackages.rocrand</li>\n    <li>rocmPackages.rocsolver</li>\n    <li>rocmPackages.rocsparse</li>\n    <li>rocmPackages.rocthrust</li>\n    <li>rocmPackages.roctracer</li>\n    <li>rocmPackages.rocwmma</li>\n    <li>rocmPackages.rpp</li>\n    <li>rocmPackages.rpp-cpu</li>\n    <li>rocmPackages.rpp-hip</li>\n    <li>rocmPackages.rpp-opencl</li>\n    <li>rocmPackages.tensile</li>\n    <li>rocmPackages.tensile.dist</li>\n    <li>zluda</li>\n  </ul>\n</details>\n<hr>\n<h6 dir=\"auto\">Maintainer pings</h6>\n<p dir=\"auto\">cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Madouura/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Madouura\">@Madouura</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Flakebi/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Flakebi\">@Flakebi</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/mschwaig/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mschwaig\">@mschwaig</a> for <a href=\"https://github.com/ryantm/nixpkgs-update/blob/main/doc/nixpkgs-maintainer-faq.md#r-ryantm-opened-a-pr-for-my-package-what-do-i-do\">testing</a>.</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/305415",
            "title": "rocmPackages.rocm-cmake: 6.0.2 -> 6.2.2",
            "date_modified": "2024-10-02T13:15:18.000Z",
            "date_published": "2024-04-19T23:44:38.000Z",
            "author": {
                "name": "r-ryantm",
                "url": "https://github.com/r-ryantm"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/3685154?u=9847dee000d03a784ba28ec39ca51fa0092594bf&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Description of changes</h2>\n<p dir=\"auto\">Refactored to use cmake instead of autotools. Cleaned up unused deps.<br>\nAdded override options to support available cmake flags.</p>\n\n<h2 dir=\"auto\">Things done</h2>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li>For non-Linux: Is sandboxing enabled in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = relaxed</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = true</code></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2405.section.md\">24.05 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2305.section.md\">23.05</a> and <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11</a> Release notes)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n\n<hr>\n<p dir=\"auto\">Add a üëç <a href=\"https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\" rel=\"nofollow\">reaction</a> to <a href=\"https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc\">pull requests you find important</a>.</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/298240",
            "title": "gridcoin-research: cleanup and refactor to use cmake",
            "date_modified": "2024-09-10T20:23:34.000Z",
            "date_published": "2024-03-23T01:43:10.000Z",
            "author": {
                "name": "GiggleSquid",
                "url": "https://github.com/GiggleSquid"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/327028?u=901222d8ea04f3390043829681a025d31e170a20&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Description of changes</h2>\n<p dir=\"auto\">Hi, <strong>I need help with this</strong>.</p>\n<p dir=\"auto\">Out standing issues:</p>\n<ol dir=\"auto\">\n<li>Am I doing the right thing to build a cmake subdir that's not included in the parent project?</li>\n<li>Any suggestions on what to do about the <code class=\"notranslate\">utils</code> binaries? They link against the local relative path to libtypec, which is incorrect and fails the reference check at the end of the build.</li>\n</ol>\n<hr>\n<p dir=\"auto\">Init <code class=\"notranslate\">libtypec</code> at <code class=\"notranslate\">0.4.0</code>.</p>\n<p dir=\"auto\">project url: <a href=\"https://github.com/Rajaram-Regupathy/libtypec\">https://github.com/Rajaram-Regupathy/libtypec</a><br>\ndescription:</p>\n<blockquote>\n<p dir=\"auto\">‚Äúlibtypec‚Äù is aimed to provide a generic interface abstracting all platform complexity for user space to develop tools for efficient USB-C port management. The library can also enable development of diagnostic and debug tools to debug system issues around USB-C/USB PD topology.</p>\n</blockquote>\n<h2 dir=\"auto\">Things done</h2>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li>For non-Linux: Is sandboxing enabled in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = relaxed</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = true</code></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2305.section.md\">23.05 Release notes</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n\n<h3 dir=\"auto\">Priorities</h3>\n<p dir=\"auto\">Add a üëç <a href=\"https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\" rel=\"nofollow\">reaction</a> to <a href=\"https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc\">pull requests you find important</a>.</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/270763",
            "title": "wip: libtypec: init at 0.5.0 (cmake help needed)",
            "date_modified": "2024-10-16T18:41:40.000Z",
            "date_published": "2023-11-29T00:28:07.000Z",
            "author": {
                "name": "colemickens",
                "url": "https://github.com/colemickens"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/382362?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><ul dir=\"auto\">\n<li>Fix a couple typos</li>\n<li>Capitalize CMake, Ninja, and Make when used as project names</li>\n<li>Clarify that CMAKE_ environment variable setting cannot be disabled</li>\n<li>Explain why it is sufficient to override configurePhase</li>\n<li>Explain how Ninja comes into play in a CMake project</li>\n<li>Note the interaction between the Ninja and CMake setup hooks for disabling<br>\npurposes</li>\n</ul>",
            "url": "https://github.com/NixOS/nixpkgs/pull/147119",
            "title": "Documentation improvements for the CMake infrastructure",
            "date_modified": "2024-07-04T15:07:34.000Z",
            "date_published": "2021-11-23T12:41:27.000Z",
            "author": {
                "name": "dudebout",
                "url": "https://github.com/dudebout"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/19633626?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">CMake implicitly runs a compiler test when it detects a new project. This normally compiles a minimal executable and runs it. In case of cross-compilation it still attempts to build an executable but not execute it.</p>\n<p dir=\"auto\">When cross-compiling to a None platform, this will fail for all CMake packages since executables cannot be built and the user is forced to override this manually through overlays.</p>\n<p dir=\"auto\">This commit changes CMake's behavior when cross compiling to a None platform so that it compiles a static library as a test instead.</p>\n<h2 dir=\"auto\">Description of changes</h2>\n<p dir=\"auto\">Add <a href=\"https://cmake.org/cmake/help/latest/variable/CMAKE_TRY_COMPILE_TARGET_TYPE.html#variable:CMAKE_TRY_COMPILE_TARGET_TYPE\" rel=\"nofollow\">CMAKE_TRY_COMPILE_TARGET_TYPE=STATIC_LIBRARY</a> to cmakeFlags.</p>\n<h2 dir=\"auto\">Things done</h2>\n<p dir=\"auto\">Checked change with a large set of custom and builtin CMake libraries while cross-compiling to <code class=\"notranslate\">arm-none-eabi</code> target</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/283623",
            "title": "Disable compiler runtime-test for cmake when cross-compiling to None platform.",
            "date_modified": "2024-06-16T08:25:21.000Z",
            "date_published": "2024-01-24T22:31:44.000Z",
            "author": {
                "name": "liarokapisv",
                "url": "https://github.com/liarokapisv"
            }
        }
    ]
}