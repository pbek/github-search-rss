{
    "version": "https://jsonfeed.org/version/1",
    "title": "NixOS Package PRs for cpio",
    "home_page_url": "https://pbek.github.io/github-search-rss/nixos-cpio.json",
    "feed_url": "https://pbek.github.io/github-search-rss/nixos-cpio.json",
    "description": "NixOS Package PRs for cpio on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/86169957?u=7f489baac161f7c1b5b8005b07be05e71e7b3053&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h6 dir=\"auto\">Description of changes</h6>\n<p dir=\"auto\"><del>I remember something about <code class=\"notranslate\">.0</code> releases being not considered stable, so this is a draft</del></p>\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> For non-Linux: Is <code class=\"notranslate\">sandbox = true</code> set in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2305-release-notes\">23.05 Release Notes (or backporting 22.11 Release notes)</a>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n",
            "url": "https://github.com/NixOS/nixpkgs/pull/233220",
            "title": "mesa: 23.0.3 -> 23.1.1",
            "date_modified": "2023-05-28T13:51:06.000Z",
            "date_published": "2023-05-21T12:09:17.000Z",
            "author": {
                "name": "yu-re-ka",
                "url": "https://github.com/yu-re-ka"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5737016?u=1744522506e84b87b7e0f43f16d027199d320c61&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h6 dir=\"auto\">Problem</h6>\n<p dir=\"auto\">I want to compile <a href=\"https://github.com/Rust-for-Linux/linux\">https://github.com/Rust-for-Linux/linux</a> in Nix so that the kernel keeps <code class=\"notranslate\">CONFIG_RUST=y</code> and does not silently drop it during the build. The generated <code class=\"notranslate\">./scripts/target.json</code> file must also be kept to enable (out-of-tree) module builds. This requires changes in <code class=\"notranslate\">pkgs.linuxKernel.manualConfig</code>.</p>\n<p dir=\"auto\">I use the following Nix code to build the kernel. It uses the nixpkgs changes that are also part of this PR.</p>\n<p dir=\"auto\">Nix code:</p>\n<details>\n<div class=\"highlight highlight-source-nix notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{ lib\n, pkgs\n, rustc\n, rust-bindgen\n}:\n\nlet\n  src =\n    let\n      rev = &quot;bc22545f38d74473cfef3e9fd65432733435b79f&quot;;\n    in\n    builtins.fetchTarball {\n      url = &quot;https://github.com/Rust-for-Linux/linux/archive/${rev}.tar.gz&quot;;\n      sha256 = &quot;sha256:18mxvk1l97448m9s55zc60nlgwb5dnzl1akpz12xyvigc5kz3q7r&quot;;\n    };\n  # Function that builds a kernel from the provided Linux source with the\n  # given config.\n  buildKernel = pkgs.linuxKernel.manualConfig {\n    inherit (pkgs) stdenv lib;\n\n    inherit src;\n    # This is a valid config file with activated Rust support. It works\n    # with regular builds (outside of Nix)\n    configfile = ./kernel.config;\n\n    # Required so that the kernel activates Rust support. \n    # Uses my local Nix fork at the moment\n    # -&gt; https://github.com/NixOS/nixpkgs/pull/232861/files\n    extra-build-dependencies = [ rustc rust-bindgen ];\n\n    version = &quot;6.3&quot;;\n    # Probably that's a weird nixpkgs upstream thingy. Linux 6.3 wants\n    # &quot;6.3.0&quot; instead of &quot;6.3&quot;.\n    modDirVersion = &quot;6.3.0&quot;;\n\n    allowImportFromDerivation = true;\n\n    extraMakeFlags = [\n      # Helps to detect the output of the rust_is_available.sh script.\n      &quot;V=12&quot;\n    ];\n  };\nin\nbuildKernel\"><pre class=\"notranslate\">{ <span class=\"pl-smi\">lib</span>\n<span class=\"pl-k\">,</span> <span class=\"pl-smi\">pkgs</span>\n<span class=\"pl-k\">,</span> <span class=\"pl-smi\">rustc</span>\n<span class=\"pl-k\">,</span> <span class=\"pl-smi\">rust-bindgen</span>\n}:\n\n<span class=\"pl-k\">let</span>\n  <span class=\"pl-e\">src</span> <span class=\"pl-k\">=</span>\n    <span class=\"pl-k\">let</span>\n      <span class=\"pl-e\">rev</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bc22545f38d74473cfef3e9fd65432733435b79f<span class=\"pl-pds\">\"</span></span>;\n    <span class=\"pl-k\">in</span>\n    <span class=\"pl-c1\">builtins</span><span class=\"pl-k\">.</span><span class=\"pl-v\">fetchTarball</span> {\n      <span class=\"pl-e\">url</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://github.com/Rust-for-Linux/linux/archive/<span class=\"pl-pse\">${</span><span class=\"pl-v\">rev</span><span class=\"pl-pse\">}</span>.tar.gz<span class=\"pl-pds\">\"</span></span>;\n      <span class=\"pl-e\">sha256</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>sha256:18mxvk1l97448m9s55zc60nlgwb5dnzl1akpz12xyvigc5kz3q7r<span class=\"pl-pds\">\"</span></span>;\n    };\n  <span class=\"pl-c\"># Function that builds a kernel from the provided Linux source with the</span>\n  <span class=\"pl-c\"># given config.</span>\n  <span class=\"pl-e\">buildKernel</span> <span class=\"pl-k\">=</span> <span class=\"pl-v\">pkgs</span><span class=\"pl-k\">.</span><span class=\"pl-v\">linuxKernel</span><span class=\"pl-k\">.</span><span class=\"pl-v\">manualConfig</span> {\n    <span class=\"pl-k\">inherit</span> (<span class=\"pl-v\">pkgs</span>) <span class=\"pl-e\">stdenv</span> <span class=\"pl-e\">lib</span>;\n\n    <span class=\"pl-k\">inherit</span> <span class=\"pl-e\">src</span>;\n    <span class=\"pl-c\"># This is a valid config file with activated Rust support. It works</span>\n    <span class=\"pl-c\"># with regular builds (outside of Nix)</span>\n    <span class=\"pl-e\">configfile</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\">./kernel.config</span>;\n\n    <span class=\"pl-c\"># Required so that the kernel activates Rust support. </span>\n    <span class=\"pl-c\"># Uses my local Nix fork at the moment</span>\n    <span class=\"pl-c\"># -&gt; https://github.com/NixOS/nixpkgs/pull/232861/files</span>\n    <span class=\"pl-e\">extra-build-dependencies</span> <span class=\"pl-k\">=</span> [ <span class=\"pl-v\">rustc</span> <span class=\"pl-v\">rust-bindgen</span> ];\n\n    <span class=\"pl-e\">version</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>6.3<span class=\"pl-pds\">\"</span></span>;\n    <span class=\"pl-c\"># Probably that's a weird nixpkgs upstream thingy. Linux 6.3 wants</span>\n    <span class=\"pl-c\"># \"6.3.0\" instead of \"6.3\".</span>\n    <span class=\"pl-e\">modDirVersion</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>6.3.0<span class=\"pl-pds\">\"</span></span>;\n\n    <span class=\"pl-e\">allowImportFromDerivation</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>;\n\n    <span class=\"pl-e\">extraMakeFlags</span> <span class=\"pl-k\">=</span> [\n      <span class=\"pl-c\"># Helps to detect the output of the rust_is_available.sh script.</span>\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>V=12<span class=\"pl-pds\">\"</span></span>\n    ];\n  };\n<span class=\"pl-k\">in</span>\n<span class=\"pl-v\">buildKernel</span></pre></div>\n</details>\n<p dir=\"auto\"><em><strong>Edit:</strong></em> If <code class=\"notranslate\">CONFIG_RUST=y</code> is kept properly, <code class=\"notranslate\">./scripts/target.json</code> should also be kept because of</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/NixOS/nixpkgs/blob/4645ea3569ab7cc4fdc617503f7e54655512a54c/pkgs/os-specific/linux/kernel/manual-config.nix#L363-L364\">nixpkgs/pkgs/os-specific/linux/kernel/manual-config.nix</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 363 to 364\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/NixOS/nixpkgs/commit/4645ea3569ab7cc4fdc617503f7e54655512a54c\">4645ea3</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L363\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"363\"></td>\n          <td id=\"LC363\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-s\">    # Keep whole scripts dir</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L364\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"364\"></td>\n          <td id=\"LC364\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-s\">    chmod u-w -R scripts</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">For example, \"rustc\" and \"rust-bindgen\" are required to be present in very specific versions for Linux's early Rust support. Hence, it is handy to optionally pass such deps.</p>\n<p dir=\"auto\">When I build an out-of-tree Rust module like this</p>\n<details>\n<div class=\"highlight highlight-source-nix notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{ gitignoreSource\n, lib\n  # The Linux kernel Nix package for which this module is compiled.\n, kernel\n, stdenv\n, rust-bindgen\n, rustc\n}:\n\nstdenv.mkDerivation rec {\n  pname = &quot;qemu-debugcon-driver&quot;;\n  version = &quot;0.1&quot;;\n\n  src = gitignoreSource ../src;\n\n  setSourceRoot = ''\n    export sourceRoot=$(pwd)/source\n  '';\n\n  nativeBuildInputs = kernel.moduleBuildDependencies\n    ++\n    # Rust-specific module build depenendencies not specified out-of-the-box in Nix.\n    [ rust-bindgen rustc ]\n  ;\n\n  makeFlags = kernel.makeFlags ++ [\n    &quot;-C&quot;\n    &quot;${kernel.dev}/lib/modules/${kernel.modDirVersion}/build&quot;\n    &quot;M=$(sourceRoot)&quot;\n  ];\n\n  buildFlags = [ &quot;modules&quot; ];\n  installFlags = [ &quot;INSTALL_MOD_PATH=${placeholder &quot;out&quot;}&quot; ];\n  installTargets = [ &quot;modules_install&quot; ];\n\n  meta = with lib; {\n    description = &quot;A QEMU Debugcon Driver for Linux&quot;;\n    platforms = platforms.linux;\n  };\n}\"><pre class=\"notranslate\">{ <span class=\"pl-smi\">gitignoreSource</span>\n<span class=\"pl-k\">,</span> <span class=\"pl-smi\">lib</span>\n  <span class=\"pl-c\"># The Linux kernel Nix package for which this module is compiled.</span>\n<span class=\"pl-k\">,</span> <span class=\"pl-smi\">kernel</span>\n<span class=\"pl-k\">,</span> <span class=\"pl-smi\">stdenv</span>\n<span class=\"pl-k\">,</span> <span class=\"pl-smi\">rust-bindgen</span>\n<span class=\"pl-k\">,</span> <span class=\"pl-smi\">rustc</span>\n}:\n\n<span class=\"pl-v\">stdenv</span><span class=\"pl-k\">.</span><span class=\"pl-v\">mkDerivation</span> <span class=\"pl-k\">rec</span> {\n  <span class=\"pl-e\">pname</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>qemu-debugcon-driver<span class=\"pl-pds\">\"</span></span>;\n  <span class=\"pl-e\">version</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0.1<span class=\"pl-pds\">\"</span></span>;\n\n  <span class=\"pl-e\">src</span> <span class=\"pl-k\">=</span> <span class=\"pl-v\">gitignoreSource</span> <span class=\"pl-s\">../src</span>;\n\n  <span class=\"pl-e\">setSourceRoot</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">''</span></span>\n<span class=\"pl-s\">    export sourceRoot=$(pwd)/source</span>\n<span class=\"pl-s\">  <span class=\"pl-pds\">''</span></span>;\n\n  <span class=\"pl-e\">nativeBuildInputs</span> <span class=\"pl-k\">=</span> <span class=\"pl-v\">kernel</span><span class=\"pl-k\">.</span><span class=\"pl-v\">moduleBuildDependencies</span>\n    <span class=\"pl-k\">++</span>\n    <span class=\"pl-c\"># Rust-specific module build depenendencies not specified out-of-the-box in Nix.</span>\n    [ <span class=\"pl-v\">rust-bindgen</span> <span class=\"pl-v\">rustc</span> ]\n  ;\n\n  <span class=\"pl-e\">makeFlags</span> <span class=\"pl-k\">=</span> <span class=\"pl-v\">kernel</span><span class=\"pl-k\">.</span><span class=\"pl-v\">makeFlags</span> <span class=\"pl-k\">++</span> [\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-C<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pse\">${</span><span class=\"pl-v\">kernel</span><span class=\"pl-k\">.</span><span class=\"pl-v\">dev</span><span class=\"pl-pse\">}</span>/lib/modules/<span class=\"pl-pse\">${</span><span class=\"pl-v\">kernel</span><span class=\"pl-k\">.</span><span class=\"pl-v\">modDirVersion</span><span class=\"pl-pse\">}</span>/build<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>M=$(sourceRoot)<span class=\"pl-pds\">\"</span></span>\n  ];\n\n  <span class=\"pl-e\">buildFlags</span> <span class=\"pl-k\">=</span> [ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>modules<span class=\"pl-pds\">\"</span></span> ];\n  <span class=\"pl-e\">installFlags</span> <span class=\"pl-k\">=</span> [ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>INSTALL_MOD_PATH=<span class=\"pl-pse\">${</span><span class=\"pl-v\">placeholder</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>out<span class=\"pl-pds\">\"</span></span><span class=\"pl-pse\">}</span><span class=\"pl-pds\">\"</span></span> ];\n  <span class=\"pl-e\">installTargets</span> <span class=\"pl-k\">=</span> [ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>modules_install<span class=\"pl-pds\">\"</span></span> ];\n\n  <span class=\"pl-e\">meta</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">with</span> <span class=\"pl-v\">lib</span>; {\n    <span class=\"pl-e\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>A QEMU Debugcon Driver for Linux<span class=\"pl-pds\">\"</span></span>;\n    <span class=\"pl-e\">platforms</span> <span class=\"pl-k\">=</span> <span class=\"pl-v\">platforms</span><span class=\"pl-k\">.</span><span class=\"pl-v\">linux</span>;\n  };\n}</pre></div>\n</details>\n<p dir=\"auto\">It always fails with <code class=\"notranslate\">target file \"./scripts/target.json\" does not exist</code>.</p>\n<p dir=\"auto\">This file is only generated if <code class=\"notranslate\">CONFIG_RUST=y</code> and <code class=\"notranslate\">RUSTC=$(which rustc) BINDGEN=$(which bindgen) scripts/rust_is_available.sh -v</code> succeeds. <del>I think that with my changes, the kernel build correctly recognizes Rust and that <code class=\"notranslate\">scripts/rust_is_available.sh</code> succeeds. However, I'm not sure if <code class=\"notranslate\">./scripts/target.json</code> is really generated and if it's kept for the out-of-tree build or is discarded. I suppose that the Nix build environment is already capable of keeping these kind of files.</del> Please look at the discussion as we figured new things out along the way.</p>\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> For non-Linux: Is <code class=\"notranslate\">sandbox = true</code> set in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2305-release-notes\">23.05 Release Notes (or backporting 22.11 Release notes)</a>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n",
            "url": "https://github.com/NixOS/nixpkgs/pull/232861",
            "title": "linux: enable Rust (rust-for-linux) in kernel builds (pkgs.linuxKernel.manualConfig)",
            "date_modified": "2023-05-24T09:24:31.000Z",
            "date_published": "2023-05-19T17:15:00.000Z",
            "author": {
                "name": "phip1611",
                "url": "https://github.com/phip1611"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/18535642?u=1d9947794947098f0c1ac4cd5d543ec44cca6c04&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h6 dir=\"auto\">Description of changes</h6>\n<p dir=\"auto\">Improve the robustness, compatibility, speed and features of the kexec bootstrap machinery. I wanted to install a system with this functionality and made some changes to get it suitable for purpose for that. May be easier to review commit by commit.</p>\n<p dir=\"auto\">Headline changes:</p>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Improve speed by using the <code class=\"notranslate\">kexec_load_file(2)</code> system call when possible; this resulted in a boot speed improvement of over an order of magnitude on my AArch64 test machine, although I imagine the impact is probably more limited on x86-64.</p>\n</li>\n<li>\n<p dir=\"auto\">Use <code class=\"notranslate\">systemctl kexec</code> when possible to ensure that disks are unmounted cleanly and services are stopped gracefully.</p>\n</li>\n<li>\n<p dir=\"auto\">Generate a standalone tarball (well, relatively standalone; you need <code class=\"notranslate\">kexec(8)</code> and optionally <code class=\"notranslate\">cpio(1)</code>, but a more complete bundler could be built on top of this) to allow bootstrapping without an existing Nix installation and save redundant downloads. <code class=\"notranslate\">system.build.kexecTree</code> is still there for those who want it.</p>\n</li>\n<li>\n<p dir=\"auto\">Add <code class=\"notranslate\">--ssh-authorized-keys</code> and <code class=\"notranslate\">--append</code> options to allow using a Hydra-built <code class=\"notranslate\">kexecTarball</code> in more circumstances (like the primary use case of bootstrapping remote servers) without writing system configuration and rebuilding a whole netboot image.</p>\n</li>\n</ul>\n<p dir=\"auto\">Unresolved questions:</p>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Should there be a way to overlay more into the booted system than just an <code class=\"notranslate\">authorized_keys</code> file? I figured that's what most people (including me) will require and if you want other files in the installation environment you can probably mount the existing disk partitions after the fact, but it would be simple to implement. Mostly I couldn't figure out a good interface for it (e.g. where should the files go?) and worried it'd be feature creep; you can always create a custom configuration if you need to get fancier.</p>\n</li>\n<li>\n<p dir=\"auto\">Perhaps instead of building <code class=\"notranslate\">authorized_keys</code> injection into this it could be parsed from a kernel command-line parameter, so that the other installer formats could benefit from it too? (But it seems fussy to parse out of there, and you'll likely have at least a serial console if nothing else with most other installer formats.)</p>\n</li>\n<li>\n<p dir=\"auto\">Is setting <code class=\"notranslate\">system.stateVersion</code> in <code class=\"notranslate\">netboot.nix</code> appropriate? Maybe there's a reason it's in the <code class=\"notranslate\">.iso</code> installer and not there that I'm missing, or maybe it should go into <code class=\"notranslate\">installation-device.nix</code>?</p>\n</li>\n<li>\n<p dir=\"auto\">Would it be useful to use kernel parameters like <code class=\"notranslate\">panic=30 boot.panic_on_fail</code> by default to automatically restore the system to a working configuration in case of boot failure when you have no way of monitoring it?</p>\n</li>\n<li>\n<p dir=\"auto\">Are there backwards compatibility concerns with replacing <code class=\"notranslate\">kexec</code> with <code class=\"notranslate\">kexecTarball</code> wholesale in <code class=\"notranslate\">release.nix</code>? I suppose 23.11 will release with the old form?</p>\n</li>\n<li>\n<p dir=\"auto\">Is linking to Hydra in the documentation okay? The various <code class=\"notranslate\">nixos.*</code> image/installer jobs are not very discoverable in general, so I felt a pointer in the manual was warranted, although search doesn't work very well and there's seemingly no good way to link to jobs independent of release versions.</p>\n</li>\n<li>\n<p dir=\"auto\">Does this warrant a release notes entry?</p>\n</li>\n</ul>\n<p dir=\"auto\">cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/flokli/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/flokli\">@flokli</a> (author of original code)</p>\n<p dir=\"auto\">cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Mic92/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Mic92\">@Mic92</a> (I only just noticed <a href=\"https://github.com/nix-community/nixos-images\">nix-community/nixos-images</a> now after finishing these changes; maybe you have comments?)</p>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/ofborg/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ofborg\">@ofborg</a> text kexec</p>\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> For non-Linux: Is <code class=\"notranslate\">sandbox = true</code> set in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2211-release-notes\">22.11 Release Notes (or backporting 22.05 Release notes)</a>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Release notes changes) Ran <code class=\"notranslate\">nixos/doc/manual/md-to-db.sh</code> to update generated release notes</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n",
            "url": "https://github.com/NixOS/nixpkgs/pull/203415",
            "title": "nixos/kexec-boot: various improvements",
            "date_modified": "2023-05-23T00:32:48.000Z",
            "date_published": "2022-11-28T07:53:15.000Z",
            "author": {
                "name": "emilazy",
                "url": "https://github.com/emilazy"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/26877687?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h6 dir=\"auto\">Description of changes</h6>\n<p dir=\"auto\">Minimize closure size for zfs package</p>\n<p dir=\"auto\">After that PR <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"651147039\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/92378\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/92378/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/92378\">#92378</a> increased the size of the iso image. The image now contains the samba package, which is not needed there.<br>\nThis change keeps <code class=\"notranslate\">zfs share</code> command working.</p>\n<p dir=\"auto\">After closure size:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"nix path-info -Sh ./result\n/nix/store/yw1by07874clir1jqlnvc9xz7k27q3vh-zfs-user-2.1.4       358.6M\"><pre class=\"notranslate\"><code class=\"notranslate\">nix path-info -Sh ./result\n/nix/store/yw1by07874clir1jqlnvc9xz7k27q3vh-zfs-user-2.1.4       358.6M\n</code></pre></div>\n<p dir=\"auto\">Before closure size:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"nix path-info -Sh ./result\n/nix/store/2zimgasxn13j860cg5pfgv79vz7ilpmg-zfs-user-2.1.4       278.6M\"><pre class=\"notranslate\"><code class=\"notranslate\">nix path-info -Sh ./result\n/nix/store/2zimgasxn13j860cg5pfgv79vz7ilpmg-zfs-user-2.1.4       278.6M\n</code></pre></div>\n<p dir=\"auto\">Reduced <code class=\"notranslate\">Minimal ISO</code> size from 811M to 747M.</p>\n<p dir=\"auto\">cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/SuperSandro2000/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SuperSandro2000\">@SuperSandro2000</a></p>\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> For non-Linux: Is <code class=\"notranslate\">sandbox = true</code> set in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2205-release-notes\">22.05 Release Notes (or backporting 21.11 Release notes)</a>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Release notes changes) Ran <code class=\"notranslate\">nixos/doc/manual/md-to-db.sh</code> to update generated release notes</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n",
            "url": "https://github.com/NixOS/nixpkgs/pull/170460",
            "title": "zfs: reduce closure size",
            "date_modified": "2022-10-11T08:06:01.000Z",
            "date_published": "2022-04-26T18:34:18.000Z",
            "author": {
                "name": "Izorkin",
                "url": "https://github.com/Izorkin"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2626481?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">The current code only checked at the end of recursive processing which paths should be excluded by pathsToLink. This resulted in false-positive collision warnings or errors for excluded paths.</p>\n\n<h6 dir=\"auto\">Motivation for this change</h6>\n<p dir=\"auto\">False-positive collision warning from <code class=\"notranslate\">nixos-rebuild</code> (<code class=\"notranslate\">pathsToLink</code> excludes <code class=\"notranslate\">/libexec</code> in my configuration):<br>\n<code class=\"notranslate\">collision between `/nix/store/wmxqm38g1y1y7sd7s9vg7an3klffaiyz-gnutar-1.31/libexec/rmt' and `/nix/store/yxxfkhl59hsy6x198r2df2xr7jd75i23-cpio-2.12/libexec/rmt'</code></p>\n<h6 dir=\"auto\">Things done</h6>\n\n<p dir=\"auto\">Tested with the NixOS system-path and checked that it produces the exact same result as before, but does not generate that collision warning.</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested using sandboxing (<a href=\"http://nixos.org/nixos/manual/options.html#opt-nix.useSandbox\" rel=\"nofollow\">nix.useSandbox</a> on NixOS, or option <code class=\"notranslate\">sandbox</code> in <a href=\"http://nixos.org/nix/manual/#sec-conf-file\" rel=\"nofollow\"><code class=\"notranslate\">nix.conf</code></a> on non-NixOS)</li>\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> NixOS</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> macOS</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> other Linux distributions</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested via one or more NixOS test(s) if existing and applicable for the change (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all pkgs that depend on this change using <code class=\"notranslate\">nix-shell -p nix-review --run \"nix-review wip\"</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested execution of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Determined the impact on package closure size (by running <code class=\"notranslate\">nix path-info -S</code> before and after)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Assured whether relevant documentation is up to date</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/.github/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n<hr>",
            "url": "https://github.com/NixOS/nixpkgs/pull/60396",
            "title": "buildEnv: Skip paths excluded by pathsToLink as soon as they are encountered.",
            "date_modified": "2022-12-31T21:14:34.000Z",
            "date_published": "2019-04-28T23:09:46.000Z",
            "author": {
                "name": "ambrop72",
                "url": "https://github.com/ambrop72"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/54836058?u=9a136f822864d980a6ff49700e60e1f11502295e&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h6 dir=\"auto\">Description of changes</h6>\n<p dir=\"auto\"><strong>I would like to emphasize that the point of this PR is avoiding technical debt in <code class=\"notranslate\">stdenv</code>.  The fact that it <a href=\"https://github.com/NixOS/nixpkgs/pull/209462#issuecomment-1374609543\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/209462/hovercard\">saves rebuilds in some situations</a> is just an added bonus.</strong></p>\n<p dir=\"auto\">This PR is <a href=\"https://github.com/NixOS/nixpkgs/pull/209462/commits/12408bcf9336f7817a10953e9f0b932031f1f297\">a two-line change</a>, trivial to revert.  Its parent PR, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1523734733\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/209459\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/209459/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/209459\">#209459</a>, is independently useful, and in any event doesn't muck around with the internals of the stdenv stages.</p>\n<p dir=\"auto\">This PR has a child, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1524255088\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/209601\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/209601/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/209601\">#209601</a>, which greatly reduces the amount of aarch64 rebuilds, at the expense of complexity.  I'm not sure the complexity is worth it; the point of that PR is to show that there are various complexity/performance tradeoff points available to choose from.</p>\n<p dir=\"auto\">Motivation:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1514866292\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/208412\" data-hovercard-type=\"issue\" data-hovercard-url=\"/NixOS/nixpkgs/issues/208412/hovercard\" href=\"https://github.com/NixOS/nixpkgs/issues/208412\">#208412</a></li>\n</ul>\n<p dir=\"auto\">Incorporates changes from:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1523734733\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/209459\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/209459/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/209459\">#209459</a></li>\n</ul>\n<p dir=\"auto\">Should fix:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"777259019\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/108111\" data-hovercard-type=\"issue\" data-hovercard-url=\"/NixOS/nixpkgs/issues/108111/hovercard\" href=\"https://github.com/NixOS/nixpkgs/issues/108111\">#108111</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"777610981\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/108305\" data-hovercard-type=\"issue\" data-hovercard-url=\"/NixOS/nixpkgs/issues/108305/hovercard\" href=\"https://github.com/NixOS/nixpkgs/issues/108305\">#108305</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1448851055\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/201254\" data-hovercard-type=\"issue\" data-hovercard-url=\"/NixOS/nixpkgs/issues/201254/hovercard\" href=\"https://github.com/NixOS/nixpkgs/issues/201254\">#201254</a></li>\n</ul>\n<p dir=\"auto\">Alternative to:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1519313711\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/209063\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/209063/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/209063\">#209063</a></li>\n</ul>\n<h6 dir=\"auto\">Things done</h6>\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux (in progress)</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>",
            "url": "https://github.com/NixOS/nixpkgs/pull/209462",
            "title": "aarch64: enable rebootstrap, upgrade to gcc11",
            "date_modified": "2023-03-10T06:22:01.000Z",
            "date_published": "2023-01-07T11:44:33.000Z",
            "author": {
                "name": "amjoseph-nixpkgs",
                "url": "https://github.com/amjoseph-nixpkgs"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/81317317?u=61a31edd75120921cc11f98ab57b0097dbd151cd&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h6 dir=\"auto\">Description of changes</h6>\n<p dir=\"auto\">Taking on <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1196037609\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/167707\" data-hovercard-type=\"issue\" data-hovercard-url=\"/NixOS/nixpkgs/issues/167707/hovercard\" href=\"https://github.com/NixOS/nixpkgs/issues/167707\">#167707</a>. Add the peazip package.</p>\n<h6 dir=\"auto\">Things done</h6>\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> For non-Linux: Is <code class=\"notranslate\">sandbox = true</code> set in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2205-release-notes\">22.05 Release Notes (or backporting 21.11 Release notes)</a>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Release notes changes) Ran <code class=\"notranslate\">nixos/doc/manual/md-to-db.sh</code> to update generated release notes</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>",
            "url": "https://github.com/NixOS/nixpkgs/pull/169447",
            "title": "peazip: init at 8.6.0",
            "date_modified": "2023-01-03T14:33:21.000Z",
            "date_published": "2022-04-20T14:32:37.000Z",
            "author": {
                "name": "auroraanna",
                "url": "https://github.com/auroraanna"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/830082?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">As mainline U-Boot contains support for the ROCK64, I added support for it to Tow-Boot.</p>\n<p dir=\"auto\"><span class=\"issue-keyword\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1233246480\" data-permission-text=\"Title is private\" data-url=\"https://github.com/Tow-Boot/Tow-Boot/issues/151\" data-hovercard-type=\"issue\" data-hovercard-url=\"/Tow-Boot/Tow-Boot/issues/151/hovercard\" href=\"https://github.com/Tow-Boot/Tow-Boot/issues/151\">#151</a></p>",
            "url": "https://github.com/Tow-Boot/Tow-Boot/pull/155",
            "title": "pine64-rock64: Add support for ROCK64",
            "date_modified": "2022-11-14T01:16:09.000Z",
            "date_published": "2022-05-24T00:07:12.000Z",
            "author": {
                "name": "moosingin3space",
                "url": "https://github.com/moosingin3space"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/in/12910?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">See <a href=\"/Patreos123/ohmyzsh/pull/61/commits\">Commits</a> and <a href=\"/Patreos123/ohmyzsh/pull/61/files\">Changes</a> for more details.</p>\n<hr>\n<p dir=\"auto\">Created by <a href=\"https://github.com/wei/pull\"><img src=\"https://camo.githubusercontent.com/10b395fcb1e79328616286811829ac008adeddefb5d4a7c9207898caa843926a/68747470733a2f2f70726f642e646f776e6c6f61642f70756c6c2d3138682d737667\" valign=\"bottom\" data-canonical-src=\"https://prod.download/pull-18h-svg\" style=\"max-width: 100%;\"> <strong>pull[bot]</strong></a></p>\n<p dir=\"auto\"><em>Can you help keep this open source service alive? <strong><a href=\"https://prod.download/pull-pr-sponsor\" rel=\"nofollow\"><g-emoji class=\"g-emoji\" alias=\"sparkling_heart\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f496.png\">💖</g-emoji> Please sponsor : )</a></strong></em></p>",
            "url": "https://github.com/Patreos123/ohmyzsh/pull/61",
            "title": "[pull] master from ohmyzsh:master",
            "date_modified": "2023-05-26T07:45:16.000Z",
            "date_published": "2021-12-07T17:21:58.000Z",
            "author": {
                "name": "pull",
                "url": "https://github.com/apps/pull"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/in/12910?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">See <a href=\"/Lebhoryi/ohmyzsh/pull/57/commits\">Commits</a> and <a href=\"/Lebhoryi/ohmyzsh/pull/57/files\">Changes</a> for more details.</p>\n<hr>\n<p dir=\"auto\">Created by <a href=\"https://github.com/wei/pull\"><img src=\"https://camo.githubusercontent.com/10b395fcb1e79328616286811829ac008adeddefb5d4a7c9207898caa843926a/68747470733a2f2f70726f642e646f776e6c6f61642f70756c6c2d3138682d737667\" valign=\"bottom\" data-canonical-src=\"https://prod.download/pull-18h-svg\" style=\"max-width: 100%;\"> <strong>pull[bot]</strong></a></p>\n<p dir=\"auto\"><em>Can you help keep this open source service alive? <strong><a href=\"https://prod.download/pull-pr-sponsor\" rel=\"nofollow\"><g-emoji class=\"g-emoji\" alias=\"sparkling_heart\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f496.png\">💖</g-emoji> Please sponsor : )</a></strong></em></p>",
            "url": "https://github.com/Lebhoryi/ohmyzsh/pull/57",
            "title": "[pull] master from ohmyzsh:master",
            "date_modified": "2023-05-26T07:45:28.000Z",
            "date_published": "2021-12-07T20:27:09.000Z",
            "author": {
                "name": "pull",
                "url": "https://github.com/apps/pull"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/in/12910?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">See <a href=\"/kernel1337/ohmyzsh/pull/229/commits\">Commits</a> and <a href=\"/kernel1337/ohmyzsh/pull/229/files\">Changes</a> for more details.</p>\n<hr>\n<p dir=\"auto\">Created by <a href=\"https://github.com/wei/pull\"><img src=\"https://camo.githubusercontent.com/10b395fcb1e79328616286811829ac008adeddefb5d4a7c9207898caa843926a/68747470733a2f2f70726f642e646f776e6c6f61642f70756c6c2d3138682d737667\" valign=\"bottom\" data-canonical-src=\"https://prod.download/pull-18h-svg\" style=\"max-width: 100%;\"> <strong>pull[bot]</strong></a></p>\n<p dir=\"auto\"><em>Can you help keep this open source service alive? <strong><a href=\"https://prod.download/pull-pr-sponsor\" rel=\"nofollow\"><g-emoji class=\"g-emoji\" alias=\"sparkling_heart\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f496.png\">💖</g-emoji> Please sponsor : )</a></strong></em></p>",
            "url": "https://github.com/kernel1337/ohmyzsh/pull/229",
            "title": "[pull] master from ohmyzsh:master",
            "date_modified": "2023-05-26T07:45:23.000Z",
            "date_published": "2021-12-07T18:05:13.000Z",
            "author": {
                "name": "pull",
                "url": "https://github.com/apps/pull"
            }
        }
    ]
}