{
    "version": "https://jsonfeed.org/version/1",
    "title": "NixOS Package PRs for qtvirtualkeyboard, kwin, kdesu, plasma-workspace, systemsettings-5.27.5, gdb packages",
    "home_page_url": "https://pbek.github.io/github-search-rss/nixos-packages-16.json",
    "feed_url": "https://pbek.github.io/github-search-rss/nixos-packages-16.json",
    "description": "NixOS Package PRs for qtvirtualkeyboard, kwin, kdesu, plasma-workspace, systemsettings-5.27.5, gdb packages on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1217934?u=be46df35c141149e2121fe65b01d9a665608e4bc&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Description of changes</h2>\n<p dir=\"auto\">Installs a symbolic link to <code class=\"notranslate\">kdesu</code> in <code class=\"notranslate\">$out/bin</code>, so that <code class=\"notranslate\">kdesu</code> can eventually be found in <code class=\"notranslate\">$PATH</code>.</p>\n<h2 dir=\"auto\">Things done</h2>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li>For non-Linux: Is sandboxing enabled in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = relaxed</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = true</code></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/README.md#package-tests\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2411.section.md\">24.11 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11</a> and <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2405.section.md\">24.05</a> Release notes)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n\n<hr>\n<p dir=\"auto\">Add a üëç <a href=\"https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\" rel=\"nofollow\">reaction</a> to <a href=\"https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc\">pull requests you find important</a>.</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/324779",
            "title": "kdePackages.kde-cli-tools: install a symlink to kdesu in bin",
            "date_modified": "2024-07-05T15:04:24.000Z",
            "date_published": "2024-07-05T10:08:18.000Z",
            "author": {
                "name": "romildo",
                "url": "https://github.com/romildo"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/44840644?u=0a498d7bbd5d30da4694c929305b134a888d341f&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Description of changes</h2>\n\n<p dir=\"auto\">Thanks to the wonderful cross compilation support in nixpkgs, GDB (along with a full cross compile toolchain) can be spun up in a jiffy:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ nix-shell -I nixpkgs=. -E &quot;{pkgs ? (import &lt;nixpkgs&gt; { crossSystem = ''x86_64-linux''; }).__splicedPackages }: with pkgs; mkShell { packages = [ gdb ]; }&quot;\n\n[nix-shell:~/Personal/nixpkgs]$ x86_64-unknown-linux-gnu-gdb\nGNU gdb (GDB) 14.2\nCopyright (C) 2023 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\nType &quot;show copying&quot; and &quot;show warranty&quot; for details.\nThis GDB was configured as &quot;--host=aarch64-apple-darwin --target=x86_64-unknown-linux-gnu&quot;.\n...\"><pre class=\"notranslate\"><code class=\"notranslate\">$ nix-shell -I nixpkgs=. -E \"{pkgs ? (import &lt;nixpkgs&gt; { crossSystem = ''x86_64-linux''; }).__splicedPackages }: with pkgs; mkShell { packages = [ gdb ]; }\"\n\n[nix-shell:~/Personal/nixpkgs]$ x86_64-unknown-linux-gnu-gdb\nGNU gdb (GDB) 14.2\nCopyright (C) 2023 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\nType \"show copying\" and \"show warranty\" for details.\nThis GDB was configured as \"--host=aarch64-apple-darwin --target=x86_64-unknown-linux-gnu\".\n...\n</code></pre></div>\n<p dir=\"auto\">This is especially useful for embedded targets, e.g. arm-none-eabi-gdb.<br>\nThe only annoying bit is that although GDB can normally target multiple platforms (<code class=\"notranslate\">--enable-targets=,,</code>), this cross GDB can only debug one target... might just be my ignorance of Autoconf though.</p>\n<p dir=\"auto\">(As a side note... any reason why this can't be generalized to <code class=\"notranslate\">lib.platforms.unix</code>? It's obviously broadening the advertised support, but it seems the BSDs support GDB just fine...)</p>\n<h2 dir=\"auto\">Things done</h2>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> aarch64-darwin</li>\n</ul>\n</li>\n<li>For non-Linux: Is sandboxing enabled in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = relaxed</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = true</code></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/README.md#package-tests\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2411.section.md\">24.11 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11</a> and <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2405.section.md\">24.05</a> Release notes)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n\n<hr>\n<p dir=\"auto\">Add a üëç <a href=\"https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\" rel=\"nofollow\">reaction</a> to <a href=\"https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc\">pull requests you find important</a>.</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/328712",
            "title": "gdb: support aarch64-darwin as a hostPlatform",
            "date_modified": "2024-07-20T18:03:18.000Z",
            "date_published": "2024-07-20T18:03:18.000Z",
            "author": {
                "name": "Feyorsh",
                "url": "https://github.com/Feyorsh"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/35251295?u=486c655715efdbdb322b710ead3f633d1a27a1ff&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Description of changes</h2>\n<p dir=\"auto\">Root cause of the problem - <code class=\"notranslate\">cuda_gdb</code> for <code class=\"notranslate\">aarch64</code>,<code class=\"notranslate\">sbsa</code> requires <code class=\"notranslate\">libexpat.so.1</code>, while  <code class=\"notranslate\">x86_64</code> does not.</p>\n<p dir=\"auto\">For investigation, manually download and extract <code class=\"notranslate\">https://developer.download.nvidia.com/compute/cuda/redist/cuda_gdb/linux-{x86_64,aarch64,sbsa}/cuda_gdb-linux-{x86_64,aarch64,sbsa}-12.2.140-archive.tar.xz</code></p>\n<details>\n  <summary>Expand - running ldd for different architectures</summary>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ ldd ./cuda_gdb-linux-x86_64-12.2.140-archive/bin/cuda-gdb\n\tlinux-vdso.so.1 (0x00007fff1bcf7000)\n\tlibdl.so.2 =&gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x000070c6a3529000)\n\tlibgmp.so.10 =&gt; /lib/x86_64-linux-gnu/libgmp.so.10 (0x000070c6a34a7000)\n\tlibstdc++.so.6 =&gt; /lib/x86_64-linux-gnu/libstdc++.so.6 (0x000070c6a327b000)\n\tlibm.so.6 =&gt; /lib/x86_64-linux-gnu/libm.so.6 (0x000070c6a3194000)\n\tlibgcc_s.so.1 =&gt; /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x000070c6a3174000)\n\tlibpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x000070c6a316d000)\n\tlibc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x000070c6a2f44000)\n\t/lib64/ld-linux-x86-64.so.2 (0x000070c6a3541000)\n\n$ ldd ./cuda_gdb-linux-aarch64-12.2.140-archive/bin/cuda-gdb\n\tlinux-vdso.so.1 (0x0000ffff8deed000)\n\tlibdl.so.2 =&gt; /lib/aarch64-linux-gnu/libdl.so.2 (0x0000ffff8de66000)\n\tlibexpat.so.1 =&gt; /lib/aarch64-linux-gnu/libexpat.so.1 (0x0000ffff8de2f000)\n\tlibgmp.so.10 =&gt; /lib/aarch64-linux-gnu/libgmp.so.10 (0x0000ffff8dda7000)\n\tlibstdc++.so.6 =&gt; /lib/aarch64-linux-gnu/libstdc++.so.6 (0x0000ffff8dbc2000)\n\tlibm.so.6 =&gt; /lib/aarch64-linux-gnu/libm.so.6 (0x0000ffff8db17000)\n\tlibgcc_s.so.1 =&gt; /lib/aarch64-linux-gnu/libgcc_s.so.1 (0x0000ffff8daf3000)\n\tlibpthread.so.0 =&gt; /lib/aarch64-linux-gnu/libpthread.so.0 (0x0000ffff8dac2000)\n\tlibc.so.6 =&gt; /lib/aarch64-linux-gnu/libc.so.6 (0x0000ffff8d94f000)\n\t/lib/ld-linux-aarch64.so.1 (0x0000ffff8debd000)\n\n$ ldd ./cuda_gdb-linux-sbsa-12.2.140-archive/bin/cuda-gdb\n\tlinux-vdso.so.1 (0x0000ffffbddd3000)\n\tlibdl.so.2 =&gt; /lib/aarch64-linux-gnu/libdl.so.2 (0x0000ffffbdd4c000)\n\tlibexpat.so.1 =&gt; /lib/aarch64-linux-gnu/libexpat.so.1 (0x0000ffffbdd15000)\n\tlibgmp.so.10 =&gt; /lib/aarch64-linux-gnu/libgmp.so.10 (0x0000ffffbdc8d000)\n\tlibstdc++.so.6 =&gt; /lib/aarch64-linux-gnu/libstdc++.so.6 (0x0000ffffbdaa8000)\n\tlibm.so.6 =&gt; /lib/aarch64-linux-gnu/libm.so.6 (0x0000ffffbd9fd000)\n\tlibgcc_s.so.1 =&gt; /lib/aarch64-linux-gnu/libgcc_s.so.1 (0x0000ffffbd9d9000)\n\tlibpthread.so.0 =&gt; /lib/aarch64-linux-gnu/libpthread.so.0 (0x0000ffffbd9a8000)\n\tlibc.so.6 =&gt; /lib/aarch64-linux-gnu/libc.so.6 (0x0000ffffbd835000)\n\t/lib/ld-linux-aarch64.so.1 (0x0000ffffbdda3000)\"><pre class=\"notranslate\"><code class=\"notranslate\">$ ldd ./cuda_gdb-linux-x86_64-12.2.140-archive/bin/cuda-gdb\n\tlinux-vdso.so.1 (0x00007fff1bcf7000)\n\tlibdl.so.2 =&gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x000070c6a3529000)\n\tlibgmp.so.10 =&gt; /lib/x86_64-linux-gnu/libgmp.so.10 (0x000070c6a34a7000)\n\tlibstdc++.so.6 =&gt; /lib/x86_64-linux-gnu/libstdc++.so.6 (0x000070c6a327b000)\n\tlibm.so.6 =&gt; /lib/x86_64-linux-gnu/libm.so.6 (0x000070c6a3194000)\n\tlibgcc_s.so.1 =&gt; /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x000070c6a3174000)\n\tlibpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x000070c6a316d000)\n\tlibc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x000070c6a2f44000)\n\t/lib64/ld-linux-x86-64.so.2 (0x000070c6a3541000)\n\n$ ldd ./cuda_gdb-linux-aarch64-12.2.140-archive/bin/cuda-gdb\n\tlinux-vdso.so.1 (0x0000ffff8deed000)\n\tlibdl.so.2 =&gt; /lib/aarch64-linux-gnu/libdl.so.2 (0x0000ffff8de66000)\n\tlibexpat.so.1 =&gt; /lib/aarch64-linux-gnu/libexpat.so.1 (0x0000ffff8de2f000)\n\tlibgmp.so.10 =&gt; /lib/aarch64-linux-gnu/libgmp.so.10 (0x0000ffff8dda7000)\n\tlibstdc++.so.6 =&gt; /lib/aarch64-linux-gnu/libstdc++.so.6 (0x0000ffff8dbc2000)\n\tlibm.so.6 =&gt; /lib/aarch64-linux-gnu/libm.so.6 (0x0000ffff8db17000)\n\tlibgcc_s.so.1 =&gt; /lib/aarch64-linux-gnu/libgcc_s.so.1 (0x0000ffff8daf3000)\n\tlibpthread.so.0 =&gt; /lib/aarch64-linux-gnu/libpthread.so.0 (0x0000ffff8dac2000)\n\tlibc.so.6 =&gt; /lib/aarch64-linux-gnu/libc.so.6 (0x0000ffff8d94f000)\n\t/lib/ld-linux-aarch64.so.1 (0x0000ffff8debd000)\n\n$ ldd ./cuda_gdb-linux-sbsa-12.2.140-archive/bin/cuda-gdb\n\tlinux-vdso.so.1 (0x0000ffffbddd3000)\n\tlibdl.so.2 =&gt; /lib/aarch64-linux-gnu/libdl.so.2 (0x0000ffffbdd4c000)\n\tlibexpat.so.1 =&gt; /lib/aarch64-linux-gnu/libexpat.so.1 (0x0000ffffbdd15000)\n\tlibgmp.so.10 =&gt; /lib/aarch64-linux-gnu/libgmp.so.10 (0x0000ffffbdc8d000)\n\tlibstdc++.so.6 =&gt; /lib/aarch64-linux-gnu/libstdc++.so.6 (0x0000ffffbdaa8000)\n\tlibm.so.6 =&gt; /lib/aarch64-linux-gnu/libm.so.6 (0x0000ffffbd9fd000)\n\tlibgcc_s.so.1 =&gt; /lib/aarch64-linux-gnu/libgcc_s.so.1 (0x0000ffffbd9d9000)\n\tlibpthread.so.0 =&gt; /lib/aarch64-linux-gnu/libpthread.so.0 (0x0000ffffbd9a8000)\n\tlibc.so.6 =&gt; /lib/aarch64-linux-gnu/libc.so.6 (0x0000ffffbd835000)\n\t/lib/ld-linux-aarch64.so.1 (0x0000ffffbdda3000)\n</code></pre></div>\n</details>\n<p dir=\"auto\">The problem was reproduceable on master branch. Running <code class=\"notranslate\">nix-shell --show-trace --packages cudaPackages_*_*.cuda_gdb</code> (from upstream without applying this PR):</p>\n<details>\n  <summary>missing libraries over architectures and cudaPackages versions, on aarch64 linux computer</summary>\n<p dir=\"auto\">To use <code class=\"notranslate\">aarch64</code>, put <code class=\"notranslate\">{ cudaCapabilities = [ \"7.2\" ]; }</code> into <code class=\"notranslate\">.config/nixpkgs/config.nix</code></p>\n<markdown-accessiblity-table><table role=\"table\">\n<thead>\n<tr>\n<th>cudaPackages_</th>\n<th>arch</th>\n<th>not found</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>12_3</td>\n<td>sbsa</td>\n<td>libexpat.so.1</td>\n</tr>\n<tr>\n<td>12_2</td>\n<td>sbsa</td>\n<td>libexpat.so.1</td>\n</tr>\n<tr>\n<td>12_1</td>\n<td>sbsa</td>\n<td>libexpat.so.1</td>\n</tr>\n<tr>\n<td>12_0</td>\n<td>sbsa</td>\n<td>libexpat.so.1</td>\n</tr>\n<tr>\n<td>11_8</td>\n<td>sbsa</td>\n<td>libexpat.so.1</td>\n</tr>\n<tr>\n<td>11_7</td>\n<td>sbsa</td>\n<td>libexpat.so.1</td>\n</tr>\n<tr>\n<td>11_6</td>\n<td>sbsa</td>\n<td>libexpat.so.1</td>\n</tr>\n<tr>\n<td>11_5</td>\n<td>sbsa</td>\n<td>libexpat.so.1</td>\n</tr>\n<tr>\n<td>11_4</td>\n<td>sbsa</td>\n<td>libexpat.so.1</td>\n</tr>\n<tr>\n<td>12_3</td>\n<td>aarch64</td>\n<td>N/A</td>\n</tr>\n<tr>\n<td>12_2</td>\n<td>aarch64</td>\n<td>libexpat.so.1</td>\n</tr>\n<tr>\n<td>12_1</td>\n<td>aarch64</td>\n<td>libexpat.so.1</td>\n</tr>\n<tr>\n<td>12_0</td>\n<td>aarch64</td>\n<td>libexpat.so.1</td>\n</tr>\n<tr>\n<td>11_8</td>\n<td>aarch64</td>\n<td>libexpat.so.1</td>\n</tr>\n<tr>\n<td>11_7</td>\n<td>aarch64</td>\n<td>N/A</td>\n</tr>\n<tr>\n<td>11_6</td>\n<td>aarch64</td>\n<td>N/A</td>\n</tr>\n<tr>\n<td>11_5</td>\n<td>aarch64</td>\n<td>N/A</td>\n</tr>\n<tr>\n<td>11_4</td>\n<td>aarch64</td>\n<td>N/A</td>\n</tr>\n</tbody>\n</table></markdown-accessiblity-table>\n</details>\n<p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #327222.\">fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2407653558\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/327222\" data-hovercard-type=\"issue\" data-hovercard-url=\"/NixOS/nixpkgs/issues/327222/hovercard\" href=\"https://github.com/NixOS/nixpkgs/issues/327222\">#327222</a></p>\n\n<h2 dir=\"auto\">Things done</h2>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li>For non-Linux: Is sandboxing enabled in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = relaxed</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = true</code></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/README.md#package-tests\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2411.section.md\">24.11 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11</a> and <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2405.section.md\">24.05</a> Release notes)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n\n<hr>\n<p dir=\"auto\">Add a üëç <a href=\"https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\" rel=\"nofollow\">reaction</a> to <a href=\"https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc\">pull requests you find important</a>.</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/326247",
            "title": "cudaPackages.cuda_gdb: fix libexpat.so.1 on aarch64",
            "date_modified": "2024-07-18T12:02:12.000Z",
            "date_published": "2024-07-11T05:28:24.000Z",
            "author": {
                "name": "yeongrokgim",
                "url": "https://github.com/yeongrokgim"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1903418?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h6 dir=\"auto\">Description of changes</h6>\n<p dir=\"auto\">This sits on top of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1331124587\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/185598\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/185598/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/185598\">#185598</a> (but doesn't strictly speaking need to, only to avoid merge conflicts). The change from this is the commit <a href=\"https://github.com/NixOS/nixpkgs/commit/546a99e6793490e5938f0f1819e903cbd78ed127\">gdb: Remove unused \"--disable-shared\" \"--enable-static\"</a>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"gdb: Remove unused &quot;--disable-shared&quot; &quot;--enable-static&quot;\n\nIt is unused as without the previous commit (--disable-inprocess-agent)\nGDB should have failed to compile, and for pkgsStatic the\n`--enable-static` should be automatically added.\n\nThese flags were added in f8741c38cd546e3ff18ce9d708de14ff2aae68ab by John Ericson in 2017\n\n        binutils, gdb: Do not expose libbfd or libopcodes, and be multitarget\n\n        There are separate derivations for these libraries and we don't want\n        conflict. Multitarget is generally more useful, and will eventually\n        speed up cross builds, so why not?!\n\n        [...]\n        @@ -58,10 +59,16 @@ stdenv.mkDerivation rec {\n           configurePlatforms = [ &quot;build&quot; &quot;host&quot; ] ++ stdenv.lib.optional (targetPlatform != hostPlatform) &quot;target&quot;;\n\n           configureFlags = with stdenv.lib; [\n        -    &quot;--with-gmp=${gmp.dev}&quot; &quot;--with-mpfr=${mpfr.dev}&quot; &quot;--with-system-readline&quot;\n        -    &quot;--with-system-zlib&quot; &quot;--with-expat&quot; &quot;--with-libexpat-prefix=${expat.dev}&quot;\n        -  ] ++ stdenv.lib.optional (!pythonSupport) &quot;--without-python&quot;\n        -    ++ stdenv.lib.optional multitarget &quot;--enable-targets=all&quot;;\n        +    &quot;--enable-targets=all&quot; &quot;--enable-64-bit-bfd&quot;\n        +    &quot;--disable-install-libbfd&quot;\n        +    &quot;--disable-shared&quot; &quot;--enable-static&quot;\n        +    &quot;--with-system-zlib&quot;\n        +    &quot;--with-system-readline&quot;\n        +\n        +    &quot;--with-gmp=${gmp.dev}&quot;\n        +    &quot;--with-mpfr=${mpfr.dev}&quot;\n        +    &quot;--with-expat&quot; &quot;--with-libexpat-prefix=${expat.dev}&quot;\n        +  ] ++ stdenv.lib.optional (!pythonSupport) &quot;--without-python&quot;;\n\n           postInstall =\n             '' # Remove Info files already provided by Binutils and other packages.\n        [...]\"><pre class=\"notranslate\"><code class=\"notranslate\">gdb: Remove unused \"--disable-shared\" \"--enable-static\"\n\nIt is unused as without the previous commit (--disable-inprocess-agent)\nGDB should have failed to compile, and for pkgsStatic the\n`--enable-static` should be automatically added.\n\nThese flags were added in f8741c38cd546e3ff18ce9d708de14ff2aae68ab by John Ericson in 2017\n\n        binutils, gdb: Do not expose libbfd or libopcodes, and be multitarget\n\n        There are separate derivations for these libraries and we don't want\n        conflict. Multitarget is generally more useful, and will eventually\n        speed up cross builds, so why not?!\n\n        [...]\n        @@ -58,10 +59,16 @@ stdenv.mkDerivation rec {\n           configurePlatforms = [ \"build\" \"host\" ] ++ stdenv.lib.optional (targetPlatform != hostPlatform) \"target\";\n\n           configureFlags = with stdenv.lib; [\n        -    \"--with-gmp=${gmp.dev}\" \"--with-mpfr=${mpfr.dev}\" \"--with-system-readline\"\n        -    \"--with-system-zlib\" \"--with-expat\" \"--with-libexpat-prefix=${expat.dev}\"\n        -  ] ++ stdenv.lib.optional (!pythonSupport) \"--without-python\"\n        -    ++ stdenv.lib.optional multitarget \"--enable-targets=all\";\n        +    \"--enable-targets=all\" \"--enable-64-bit-bfd\"\n        +    \"--disable-install-libbfd\"\n        +    \"--disable-shared\" \"--enable-static\"\n        +    \"--with-system-zlib\"\n        +    \"--with-system-readline\"\n        +\n        +    \"--with-gmp=${gmp.dev}\"\n        +    \"--with-mpfr=${mpfr.dev}\"\n        +    \"--with-expat\" \"--with-libexpat-prefix=${expat.dev}\"\n        +  ] ++ stdenv.lib.optional (!pythonSupport) \"--without-python\";\n\n           postInstall =\n             '' # Remove Info files already provided by Binutils and other packages.\n        [...]\n</code></pre></div>\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> For non-Linux: Is <code class=\"notranslate\">sandbox = true</code> set in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2211-release-notes\">22.11 Release Notes (or backporting 22.05 Release notes)</a>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Release notes changes) Ran <code class=\"notranslate\">nixos/doc/manual/md-to-db.sh</code> to update generated release notes</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n",
            "url": "https://github.com/NixOS/nixpkgs/pull/185708",
            "title": "Fix gdb static compile staging",
            "date_modified": "2024-07-04T15:16:27.000Z",
            "date_published": "2022-08-08T20:04:54.000Z",
            "author": {
                "name": "KoviRobi",
                "url": "https://github.com/KoviRobi"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/3074260?u=630edaf3df4b822946646668f7d621e68f39d50b&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Description of changes</h2>\n<p dir=\"auto\">Python in gdb is very useful. I added patch for support cross compilation with python.</p>\n<p dir=\"auto\">How to test:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"nix-build . -A 'pkgsCross.riscv64.gdb'\"><pre class=\"notranslate\"><code class=\"notranslate\">nix-build . -A 'pkgsCross.riscv64.gdb'\n</code></pre></div>\n<p dir=\"auto\">Before:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ ./result/bin/gdb --configuration | grep python\n             --without-python\n             --without-python-libdir\"><pre class=\"notranslate\"><code class=\"notranslate\">$ ./result/bin/gdb --configuration | grep python\n             --without-python\n             --without-python-libdir\n</code></pre></div>\n<p dir=\"auto\">After:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ ./result/bin/gdb --configuration | grep python\n             --with-python=/nix/store/80nllrpfnd1an56x10cjn1wwnmm0m4m3-python3-riscv64-unknown-linux-gnu-3.11.6\n             --with-python-libdir=/nix/store/80nllrpfnd1an56x10cjn1wwnmm0m4m3-python3-riscv64-unknown-linux-gnu-3.11.6/lib\"><pre class=\"notranslate\"><code class=\"notranslate\">$ ./result/bin/gdb --configuration | grep python\n             --with-python=/nix/store/80nllrpfnd1an56x10cjn1wwnmm0m4m3-python3-riscv64-unknown-linux-gnu-3.11.6\n             --with-python-libdir=/nix/store/80nllrpfnd1an56x10cjn1wwnmm0m4m3-python3-riscv64-unknown-linux-gnu-3.11.6/lib\n</code></pre></div>\n<p dir=\"auto\">cc: <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/trofi/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/trofi\">@trofi</a></p>\n\n<h2 dir=\"auto\">Things done</h2>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li>For non-Linux: Is sandboxing enabled in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = relaxed</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = true</code></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2405.section.md\">24.05 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2305.section.md\">23.05</a> and <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11</a> Release notes)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n\n<hr>\n<p dir=\"auto\">Add a üëç <a href=\"https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\" rel=\"nofollow\">reaction</a> to <a href=\"https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc\">pull requests you find important</a>.</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/275731",
            "title": "gdb: fix cross-compile with python",
            "date_modified": "2024-07-04T15:49:49.000Z",
            "date_published": "2023-12-20T22:16:30.000Z",
            "author": {
                "name": "patryk4815",
                "url": "https://github.com/patryk4815"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1055245?u=c9769cefdf870911a6981ddc77c1b6d6502e4155&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h6 dir=\"auto\">Motivation for this change</h6>\n<p dir=\"auto\">The libgcc/compiler-rt used varies with the target platform.</p>\n<p dir=\"auto\">I checked, and lldb doesn't have a similar notion of load prefix path,<br>\nso this stays a one-off wrapper for gdb for now.</p>\n<p dir=\"auto\">Need to test to make sure all cross stuff works as expected.</p>\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested using sandboxing (<a href=\"http://nixos.org/nixos/manual/options.html#opt-nix.useSandbox\" rel=\"nofollow\">nix.useSandbox</a> on NixOS, or option <code class=\"notranslate\">sandbox</code> in <a href=\"http://nixos.org/nix/manual/#sec-conf-file\" rel=\"nofollow\"><code class=\"notranslate\">nix.conf</code></a> on non-NixOS linux)</li>\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> NixOS</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> macOS</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> other Linux distributions</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested via one or more NixOS test(s) if existing and applicable for the change (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all pkgs that depend on this change using <code class=\"notranslate\">nix-shell -p nix-review --run \"nix-review wip\"</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested execution of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Determined the impact on package closure size (by running <code class=\"notranslate\">nix path-info -S</code> before and after)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Ensured that relevant documentation is up to date</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/.github/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n<h6 dir=\"auto\">Notify maintainers</h6>\n<p dir=\"auto\">cc @</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/74808",
            "title": "WIP: gdb: Make target-independent and auto-load-safe-path with a wrapper",
            "date_modified": "2024-03-20T20:50:23.000Z",
            "date_published": "2019-12-01T22:41:13.000Z",
            "author": {
                "name": "Ericson2314",
                "url": "https://github.com/Ericson2314"
            }
        }
    ]
}