{
    "version": "https://jsonfeed.org/version/1",
    "title": "NixOS Package PRs for htop, shadow-4.13, nix-bash-completions, threadweaver, okular, docker packages",
    "home_page_url": "https://pbek.github.io/github-search-rss/nixos-packages-47.json",
    "feed_url": "https://pbek.github.io/github-search-rss/nixos-packages-47.json",
    "description": "NixOS Package PRs for htop, shadow-4.13, nix-bash-completions, threadweaver, okular, docker packages on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/7075751?u=fcab9da95e20ee56f660751751cc3af09b82bc2b&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h6 dir=\"auto\">Motivation for this change</h6>\n<p dir=\"auto\">Based on <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1149666916\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/161707\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/161707/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/161707\">#161707</a>. Looking for more packages to test this way, feel free to suggest.</p>\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> For non-Linux: Is <code class=\"notranslate\">sandbox = true</code> set in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2205-release-notes\">22.05 Release Notes (or backporting 21.11 Release notes)</a>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Release notes changes) Ran <code class=\"notranslate\">nixos/doc/manual/md-to-db.sh</code> to update generated release notes</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>",
            "url": "https://github.com/NixOS/nixpkgs/pull/161853",
            "title": "htop: add test with expect",
            "date_modified": "2024-07-04T15:11:05.000Z",
            "date_published": "2022-02-25T15:50:30.000Z",
            "author": {
                "name": "Synthetica9",
                "url": "https://github.com/Synthetica9"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/8706?u=cafa388feb0a419702a115fa685b8577d9a24ce8&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Description of changes</h2>\n<p dir=\"auto\">This PR implements three main changes.</p>\n<ul dir=\"auto\">\n<li>Do not shadow <code class=\"notranslate\">containerd</code>, <code class=\"notranslate\">crio</code> or <code class=\"notranslate\">docker</code> binaries with tools that are meant to set up the host with the NVIDIA container toolkit (<a href=\"https://github.com/NVIDIA/nvidia-container-toolkit/tree/a470818ba7d9166be282cd0039dd2fc9b0a34d73/tools/container\">https://github.com/NVIDIA/nvidia-container-toolkit/tree/a470818ba7d9166be282cd0039dd2fc9b0a34d73/tools/container</a>)</li>\n<li>Fix the Docker runtime wrapper for Nvidia GPU's. This makes the <code class=\"notranslate\">--runtime=nvidia --gpus=</code> use case work as expected.</li>\n<li>Remove the Nvidia wrapper for podman: according to the Nvidia documentation (<a href=\"https://web.archive.org/web/20240729183805/https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html#configuring-podman\" rel=\"nofollow\">https://web.archive.org/web/20240729183805/https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html#configuring-podman</a>), the CDI approach is recommended for podman, and it has had support on NixOS for CDI since 22.05 (podman 4.1.0).</li>\n</ul>\n<h2 dir=\"auto\">Things done</h2>\n<p dir=\"auto\">Tested, with the NixOS options:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"virtualisation = {\n  containers.enable = true;\n  podman.enable = true;\n  docker = {\n    enable = true;\n    # Allows the CDI implementation, while also makes it possible to use the nvidia runtime wrappers.\n    package = pkgs.docker_25;\n    # For the runtime wrappers/non-CDI case...\n    enableNvidia = true;\n  };\n};\nhardware = {\n  # Required by the runtime wrappers\n  graphics.enable32Bit = true;\n  # CDI generation\n  nvidia-container-toolkit.enable = true;\n};\"><pre class=\"notranslate\"><code class=\"notranslate\">virtualisation = {\n  containers.enable = true;\n  podman.enable = true;\n  docker = {\n    enable = true;\n    # Allows the CDI implementation, while also makes it possible to use the nvidia runtime wrappers.\n    package = pkgs.docker_25;\n    # For the runtime wrappers/non-CDI case...\n    enableNvidia = true;\n  };\n};\nhardware = {\n  # Required by the runtime wrappers\n  graphics.enable32Bit = true;\n  # CDI generation\n  nvidia-container-toolkit.enable = true;\n};\n</code></pre></div>\n<p dir=\"auto\">The following works as expected:</p>\n<ul dir=\"auto\">\n<li>Podman</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"# CDI\n❯ podman run --rm --device=nvidia.com/gpu=all ubuntu:latest nvidia-smi\nWed Jul 31 08:27:17 2024\n+-----------------------------------------------------------------------------------------+\n| NVIDIA-SMI 555.58.02              Driver Version: 555.58.02      CUDA Version: 12.5     |\n|-----------------------------------------+------------------------+----------------------+\n| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |\n|                                         |                        |               MIG M. |\n|=========================================+========================+======================|\n|   0  NVIDIA GeForce RTX 4090        On  |   00000000:41:00.0 Off |                  Off |\n| 61%   49C    P8             17W /  450W |       2MiB /  24564MiB |      0%      Default |\n|                                         |                        |                  N/A |\n+-----------------------------------------+------------------------+----------------------+\n|   1  NVIDIA GeForce RTX 2080 ...    On  |   00000000:61:00.0 Off |                  N/A |\n|  0%   53C    P8             35W /  250W |       1MiB /   8192MiB |      0%      Default |\n|                                         |                        |                  N/A |\n+-----------------------------------------+------------------------+----------------------+\n\n+-----------------------------------------------------------------------------------------+\n| Processes:                                                                              |\n|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |\n|        ID   ID                                                               Usage      |\n|=========================================================================================|\n|  No running processes found                                                             |\n+-----------------------------------------------------------------------------------------+\n\n# Wrapper\n# Does not apply. CDI is recommended.\"><pre lang=\"shell-session\" class=\"notranslate\"><code class=\"notranslate\"># CDI\n❯ podman run --rm --device=nvidia.com/gpu=all ubuntu:latest nvidia-smi\nWed Jul 31 08:27:17 2024\n+-----------------------------------------------------------------------------------------+\n| NVIDIA-SMI 555.58.02              Driver Version: 555.58.02      CUDA Version: 12.5     |\n|-----------------------------------------+------------------------+----------------------+\n| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |\n|                                         |                        |               MIG M. |\n|=========================================+========================+======================|\n|   0  NVIDIA GeForce RTX 4090        On  |   00000000:41:00.0 Off |                  Off |\n| 61%   49C    P8             17W /  450W |       2MiB /  24564MiB |      0%      Default |\n|                                         |                        |                  N/A |\n+-----------------------------------------+------------------------+----------------------+\n|   1  NVIDIA GeForce RTX 2080 ...    On  |   00000000:61:00.0 Off |                  N/A |\n|  0%   53C    P8             35W /  250W |       1MiB /   8192MiB |      0%      Default |\n|                                         |                        |                  N/A |\n+-----------------------------------------+------------------------+----------------------+\n\n+-----------------------------------------------------------------------------------------+\n| Processes:                                                                              |\n|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |\n|        ID   ID                                                               Usage      |\n|=========================================================================================|\n|  No running processes found                                                             |\n+-----------------------------------------------------------------------------------------+\n\n# Wrapper\n# Does not apply. CDI is recommended.\n</code></pre></div>\n<ul dir=\"auto\">\n<li>Docker</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"# CDI\n❯ docker run --rm --device=nvidia.com/gpu=all ubuntu:latest nvidia-smi\nWed Jul 31 08:28:24 2024\n+-----------------------------------------------------------------------------------------+\n| NVIDIA-SMI 555.58.02              Driver Version: 555.58.02      CUDA Version: 12.5     |\n|-----------------------------------------+------------------------+----------------------+\n| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |\n|                                         |                        |               MIG M. |\n|=========================================+========================+======================|\n|   0  NVIDIA GeForce RTX 4090        On  |   00000000:41:00.0 Off |                  Off |\n| 48%   50C    P8             17W /  450W |       2MiB /  24564MiB |      0%      Default |\n|                                         |                        |                  N/A |\n+-----------------------------------------+------------------------+----------------------+\n|   1  NVIDIA GeForce RTX 2080 ...    On  |   00000000:61:00.0 Off |                  N/A |\n|  0%   54C    P8             35W /  250W |       1MiB /   8192MiB |      0%      Default |\n|                                         |                        |                  N/A |\n+-----------------------------------------+------------------------+----------------------+\n\n+-----------------------------------------------------------------------------------------+\n| Processes:                                                                              |\n|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |\n|        ID   ID                                                               Usage      |\n|=========================================================================================|\n|  No running processes found                                                             |\n+-----------------------------------------------------------------------------------------+\n\n# Wrapper\n❯ docker run --rm -it --runtime=nvidia --gpus=all ubuntu:latest nvidia-smi\nWed Jul 31 08:28:43 2024\n+-----------------------------------------------------------------------------------------+\n| NVIDIA-SMI 555.58.02              Driver Version: 555.58.02      CUDA Version: 12.5     |\n|-----------------------------------------+------------------------+----------------------+\n| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |\n|                                         |                        |               MIG M. |\n|=========================================+========================+======================|\n|   0  NVIDIA GeForce RTX 4090        On  |   00000000:41:00.0 Off |                  Off |\n| 43%   49C    P8             16W /  450W |       2MiB /  24564MiB |      0%      Default |\n|                                         |                        |                  N/A |\n+-----------------------------------------+------------------------+----------------------+\n|   1  NVIDIA GeForce RTX 2080 ...    On  |   00000000:61:00.0 Off |                  N/A |\n|  0%   54C    P8             35W /  250W |       1MiB /   8192MiB |      0%      Default |\n|                                         |                        |                  N/A |\n+-----------------------------------------+------------------------+----------------------+\n\n+-----------------------------------------------------------------------------------------+\n| Processes:                                                                              |\n|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |\n|        ID   ID                                                               Usage      |\n|=========================================================================================|\n|  No running processes found                                                             |\n+-----------------------------------------------------------------------------------------+\"><pre class=\"notranslate\"><code class=\"notranslate\"># CDI\n❯ docker run --rm --device=nvidia.com/gpu=all ubuntu:latest nvidia-smi\nWed Jul 31 08:28:24 2024\n+-----------------------------------------------------------------------------------------+\n| NVIDIA-SMI 555.58.02              Driver Version: 555.58.02      CUDA Version: 12.5     |\n|-----------------------------------------+------------------------+----------------------+\n| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |\n|                                         |                        |               MIG M. |\n|=========================================+========================+======================|\n|   0  NVIDIA GeForce RTX 4090        On  |   00000000:41:00.0 Off |                  Off |\n| 48%   50C    P8             17W /  450W |       2MiB /  24564MiB |      0%      Default |\n|                                         |                        |                  N/A |\n+-----------------------------------------+------------------------+----------------------+\n|   1  NVIDIA GeForce RTX 2080 ...    On  |   00000000:61:00.0 Off |                  N/A |\n|  0%   54C    P8             35W /  250W |       1MiB /   8192MiB |      0%      Default |\n|                                         |                        |                  N/A |\n+-----------------------------------------+------------------------+----------------------+\n\n+-----------------------------------------------------------------------------------------+\n| Processes:                                                                              |\n|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |\n|        ID   ID                                                               Usage      |\n|=========================================================================================|\n|  No running processes found                                                             |\n+-----------------------------------------------------------------------------------------+\n\n# Wrapper\n❯ docker run --rm -it --runtime=nvidia --gpus=all ubuntu:latest nvidia-smi\nWed Jul 31 08:28:43 2024\n+-----------------------------------------------------------------------------------------+\n| NVIDIA-SMI 555.58.02              Driver Version: 555.58.02      CUDA Version: 12.5     |\n|-----------------------------------------+------------------------+----------------------+\n| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |\n|                                         |                        |               MIG M. |\n|=========================================+========================+======================|\n|   0  NVIDIA GeForce RTX 4090        On  |   00000000:41:00.0 Off |                  Off |\n| 43%   49C    P8             16W /  450W |       2MiB /  24564MiB |      0%      Default |\n|                                         |                        |                  N/A |\n+-----------------------------------------+------------------------+----------------------+\n|   1  NVIDIA GeForce RTX 2080 ...    On  |   00000000:61:00.0 Off |                  N/A |\n|  0%   54C    P8             35W /  250W |       1MiB /   8192MiB |      0%      Default |\n|                                         |                        |                  N/A |\n+-----------------------------------------+------------------------+----------------------+\n\n+-----------------------------------------------------------------------------------------+\n| Processes:                                                                              |\n|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |\n|        ID   ID                                                               Usage      |\n|=========================================================================================|\n|  No running processes found                                                             |\n+-----------------------------------------------------------------------------------------+\n</code></pre></div>\n<p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #293857.\">Fixes</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2172488681\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/293857\" data-hovercard-type=\"issue\" data-hovercard-url=\"/NixOS/nixpkgs/issues/293857/hovercard\" href=\"https://github.com/NixOS/nixpkgs/issues/293857\">#293857</a><br>\n<span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #322400.\">Fixes</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2372556920\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/322400\" data-hovercard-type=\"issue\" data-hovercard-url=\"/NixOS/nixpkgs/issues/322400/hovercard\" href=\"https://github.com/NixOS/nixpkgs/issues/322400\">#322400</a></p>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li>For non-Linux: Is sandboxing enabled in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = relaxed</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = true</code></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/README.md#package-tests\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2411.section.md\">24.11 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11</a> and <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2405.section.md\">24.05</a> Release notes)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n\n<hr>\n<p dir=\"auto\">Add a 👍 <a href=\"https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\" rel=\"nofollow\">reaction</a> to <a href=\"https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc\">pull requests you find important</a>.</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/331071",
            "title": "Fix nvidia container toolkit docker contamination",
            "date_modified": "2024-08-16T19:12:49.000Z",
            "date_published": "2024-07-30T11:34:26.000Z",
            "author": {
                "name": "ereslibre",
                "url": "https://github.com/ereslibre"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/37933096?u=b11a857efbc669246eb43904472627625dcdbbdb&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Automatic update generated by <a href=\"https://github.com/ryantm/nixpkgs-update\">nixpkgs-update</a> tools. This update was made based on information from <a href=\"https://github.com/docker/compose/releases\">https://github.com/docker/compose/releases</a>.</p>\n<p dir=\"auto\">meta.description for docker-compose is: Docker CLI plugin to define and run multi-container applications with Docker</p>\n<p dir=\"auto\">meta.homepage for docker-compose is: <a href=\"https://github.com/docker/compose\">https://github.com/docker/compose</a></p>\n<h6 dir=\"auto\">Updates performed</h6>\n<ul dir=\"auto\">\n<li>Golang update</li>\n</ul>\n<h6 dir=\"auto\">To inspect upstream changes</h6>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><a href=\"https://github.com/docker/compose/releases/tag/v2.29.2\">Release on GitHub</a></p>\n</li>\n<li>\n<p dir=\"auto\"><a href=\"https://github.com/docker/compose/compare/v2.29.1...v2.29.2\">Compare changes on GitHub</a></p>\n</li>\n</ul>\n<h6 dir=\"auto\">Impact</h6>\n<p dir=\"auto\"><b>Checks done</b></p>\n<hr>\n<ul dir=\"auto\">\n<li>built on NixOS</li>\n<li>The tests defined in <code class=\"notranslate\">passthru.tests</code>, if any, passed</li>\n<li>found 2.29.2 with grep in /nix/store/7lkfqcws95zb5ya4f3534fl935cw3dzq-docker-compose-2.29.2</li>\n<li>found 2.29.2 in filename of file in /nix/store/7lkfqcws95zb5ya4f3534fl935cw3dzq-docker-compose-2.29.2</li>\n</ul>\n<hr>\n<details>\n<summary>\n<b>Rebuild report</b> (if merged into master) (click to expand)\n</summary>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"25 total rebuild path(s)\n\n25 package rebuild(s)\n\nFirst fifty rebuilds by attrpath\n\nairlift\napptainer\napptainer-overriden-nixos\narion\ncharliecloud\ndevcontainer\ndocker\ndocker-client\ndocker-compose\ndocker-gc\ndocker-sbom\ndocker_24\ndocker_25\ndocker_26\ndocker_27\nfn-cli\nnvidia-docker\npipework\npython311Packages.jupyter-repo2docker\npython312Packages.jupyter-repo2docker\nsingularity\nsingularity-overriden-nixos\ntests.devShellTools.nixos\nudocker\"><pre class=\"notranslate\"><code class=\"notranslate\">25 total rebuild path(s)\n\n25 package rebuild(s)\n\nFirst fifty rebuilds by attrpath\n\nairlift\napptainer\napptainer-overriden-nixos\narion\ncharliecloud\ndevcontainer\ndocker\ndocker-client\ndocker-compose\ndocker-gc\ndocker-sbom\ndocker_24\ndocker_25\ndocker_26\ndocker_27\nfn-cli\nnvidia-docker\npipework\npython311Packages.jupyter-repo2docker\npython312Packages.jupyter-repo2docker\nsingularity\nsingularity-overriden-nixos\ntests.devShellTools.nixos\nudocker\n</code></pre></div>\n</details>\n<details>\n<summary>\n<b>Instructions to test this update</b> (click to expand)\n</summary>\n<hr>\n<p dir=\"auto\">Either <strong>download from Cachix</strong>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"nix-store -r /nix/store/7lkfqcws95zb5ya4f3534fl935cw3dzq-docker-compose-2.29.2 \\\n  --option binary-caches 'https://cache.nixos.org/ https://nix-community.cachix.org/' \\\n  --option trusted-public-keys '\n  nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=\n  cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=\n  '\"><pre class=\"notranslate\"><code class=\"notranslate\">nix-store -r /nix/store/7lkfqcws95zb5ya4f3534fl935cw3dzq-docker-compose-2.29.2 \\\n  --option binary-caches 'https://cache.nixos.org/ https://nix-community.cachix.org/' \\\n  --option trusted-public-keys '\n  nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=\n  cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=\n  '\n</code></pre></div>\n<p dir=\"auto\">(The Cachix cache is only trusted for this store-path realization.)<br>\nFor the Cachix download to work, your user must be in the <code class=\"notranslate\">trusted-users</code> list or you can use <code class=\"notranslate\">sudo</code> since root is effectively trusted.</p>\n<p dir=\"auto\">Or, <strong>build yourself</strong>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"nix-build -A docker-compose https://github.com/r-ryantm/nixpkgs/archive/4144cce4db021bafa17ab646e5a5f959f890b6e6.tar.gz\"><pre class=\"notranslate\"><code class=\"notranslate\">nix-build -A docker-compose https://github.com/r-ryantm/nixpkgs/archive/4144cce4db021bafa17ab646e5a5f959f890b6e6.tar.gz\n</code></pre></div>\n<p dir=\"auto\">Or:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"nix build github:r-ryantm/nixpkgs/4144cce4db021bafa17ab646e5a5f959f890b6e6#docker-compose\"><pre class=\"notranslate\"><code class=\"notranslate\">nix build github:r-ryantm/nixpkgs/4144cce4db021bafa17ab646e5a5f959f890b6e6#docker-compose\n</code></pre></div>\n<p dir=\"auto\">After you've downloaded or built it, look at the files and if there are any, run the binaries:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"ls -la /nix/store/7lkfqcws95zb5ya4f3534fl935cw3dzq-docker-compose-2.29.2\nls -la /nix/store/7lkfqcws95zb5ya4f3534fl935cw3dzq-docker-compose-2.29.2/bin\"><pre class=\"notranslate\"><code class=\"notranslate\">ls -la /nix/store/7lkfqcws95zb5ya4f3534fl935cw3dzq-docker-compose-2.29.2\nls -la /nix/store/7lkfqcws95zb5ya4f3534fl935cw3dzq-docker-compose-2.29.2/bin\n</code></pre></div>\n<hr>\n</details>\n<br>\n<h3 dir=\"auto\">Pre-merge build results</h3>\n<p dir=\"auto\">We have automatically built all packages that will get rebuilt due to<br>\nthis change.</p>\n<p dir=\"auto\">This gives evidence on whether the upgrade will break dependent packages.<br>\nNote sometimes packages show up as <em>failed to build</em> independent of the<br>\nchange, simply because they are already broken on the target branch.</p>\n<p dir=\"auto\">Result of <code class=\"notranslate\">nixpkgs-review</code> run on x86_64-linux <a href=\"https://github.com/Mic92/nixpkgs-review\">1</a></p>\n<details>\n  <summary>26 packages built:</summary>\n  <ul dir=\"auto\">\n    <li>airlift</li>\n    <li>airlift.dist</li>\n    <li>apptainer</li>\n    <li>apptainer-overriden-nixos</li>\n    <li>arion</li>\n    <li>arion.data</li>\n    <li>charliecloud</li>\n    <li>devcontainer</li>\n    <li>docker</li>\n    <li>docker-client</li>\n    <li>docker-compose</li>\n    <li>docker-gc</li>\n    <li>docker-sbom</li>\n    <li>docker_25</li>\n    <li>docker_26</li>\n    <li>fn-cli</li>\n    <li>nvidia-docker</li>\n    <li>pipework</li>\n    <li>python311Packages.jupyter-repo2docker</li>\n    <li>python311Packages.jupyter-repo2docker.dist</li>\n    <li>python312Packages.jupyter-repo2docker</li>\n    <li>python312Packages.jupyter-repo2docker.dist</li>\n    <li>singularity</li>\n    <li>singularity-overriden-nixos</li>\n    <li>udocker</li>\n    <li>udocker.dist</li>\n  </ul>\n</details>\n<hr>\n<h6 dir=\"auto\">Maintainer pings</h6>\n<hr>\n<p dir=\"auto\">Add a 👍 <a href=\"https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\" rel=\"nofollow\">reaction</a> to <a href=\"https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc\">pull requests you find important</a>.</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/335124",
            "title": "docker-compose: 2.29.1 -> 2.29.2",
            "date_modified": "2024-08-16T14:40:00.000Z",
            "date_published": "2024-08-16T13:43:23.000Z",
            "author": {
                "name": "r-ryantm",
                "url": "https://github.com/r-ryantm"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2544204?u=8b85febe3e3cd6b348d10de04e4512c7d8a12891&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Description of changes</h2>\n<p dir=\"auto\">Devicemapper is deprecated from docker ver. 25 - <a href=\"https://docs.docker.com/storage/storagedriver/device-mapper-driver/\" rel=\"nofollow\">https://docs.docker.com/storage/storagedriver/device-mapper-driver/</a></p>\n\n<h2 dir=\"auto\">Things done</h2>\n<p dir=\"auto\">Did run into this runtime error, updating the host</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Aug 05 09:01:33 nix-p01 dockerd[1647]: time=&quot;2024-08-05T09:01:33.625388361+02:00&quot; level=info msg=&quot;[graphdriver] trying configured driver: devicemapper&quot;\nAug 05 09:01:33 nix-p01 dockerd[1647]: time=&quot;2024-08-05T09:01:33.626590547+02:00&quot; level=info msg=&quot;stopping healthcheck following graceful shutdown&quot; module=libcontainerd\nAug 05 09:01:33 nix-p01 dockerd[1647]: time=&quot;2024-08-05T09:01:33.626664583+02:00&quot; level=info msg=&quot;stopping event stream following graceful shutdown&quot; error=&quot;context canceled&quot; module=libcontainerd namespace=plugins.moby\nAug 05 09:01:34 nix-p01 dockerd[1647]: failed to start daemon: error initializing graphdriver: [graphdriver] ERROR: the devicemapper storage-driver has been deprecated and removed; visit https://docs.docker.com/go/storage-driver/ for more information: devicemapper\"><pre class=\"notranslate\"><code class=\"notranslate\">Aug 05 09:01:33 nix-p01 dockerd[1647]: time=\"2024-08-05T09:01:33.625388361+02:00\" level=info msg=\"[graphdriver] trying configured driver: devicemapper\"\nAug 05 09:01:33 nix-p01 dockerd[1647]: time=\"2024-08-05T09:01:33.626590547+02:00\" level=info msg=\"stopping healthcheck following graceful shutdown\" module=libcontainerd\nAug 05 09:01:33 nix-p01 dockerd[1647]: time=\"2024-08-05T09:01:33.626664583+02:00\" level=info msg=\"stopping event stream following graceful shutdown\" error=\"context canceled\" module=libcontainerd namespace=plugins.moby\nAug 05 09:01:34 nix-p01 dockerd[1647]: failed to start daemon: error initializing graphdriver: [graphdriver] ERROR: the devicemapper storage-driver has been deprecated and removed; visit https://docs.docker.com/go/storage-driver/ for more information: devicemapper\n</code></pre></div>\n<p dir=\"auto\">Better to have a build warning then discover it runtime :-)</p>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li>For non-Linux: Is sandboxing enabled in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = relaxed</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = true</code></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/README.md#package-tests\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2411.section.md\">24.11 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11</a> and <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2405.section.md\">24.05</a> Release notes)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n\n<hr>\n<p dir=\"auto\">Add a 👍 <a href=\"https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\" rel=\"nofollow\">reaction</a> to <a href=\"https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc\">pull requests you find important</a>.</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/332478",
            "title": "Devicemapper is deprecated from docker ver. 25",
            "date_modified": "2024-08-06T21:41:58.000Z",
            "date_published": "2024-08-05T13:07:46.000Z",
            "author": {
                "name": "eskytthe",
                "url": "https://github.com/eskytthe"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/88513682?u=b01dd702e62101bd41222be2df62a9fd6719cec0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Description of changes</h2>\n<p dir=\"auto\">Simple <a href=\"http://doc.pytest.org/\" rel=\"nofollow\">pytest</a> fixtures that help you write integration tests with Docker and <a href=\"https://docs.docker.com/compose/\" rel=\"nofollow\">Docker Compose</a>. Specify all necessary containers in a docker-compose.yml file and and pytest-docker will spin them up for the duration of your tests.</p>\n<p dir=\"auto\">Metadata</p>\n<ul dir=\"auto\">\n<li>homepage URL: <a href=\"https://github.com/avast/pytest-docker\">https://github.com/avast/pytest-docker</a></li>\n<li>source URL: <a href=\"https://github.com/avast/pytest-docker\">https://github.com/avast/pytest-docker</a></li>\n<li>license: MIT</li>\n<li>platforms: Linux</li>\n</ul>\n<p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #331323.\">Closes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2440311774\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/331323\" data-hovercard-type=\"issue\" data-hovercard-url=\"/NixOS/nixpkgs/issues/331323/hovercard\" href=\"https://github.com/NixOS/nixpkgs/issues/331323\">#331323</a></p>\n\n<h2 dir=\"auto\">Things done</h2>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li>For non-Linux: Is sandboxing enabled in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = relaxed</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <code class=\"notranslate\">sandbox = true</code></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/README.md#package-tests\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2411.section.md\">24.11 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11</a> and <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2405.section.md\">24.05</a> Release notes)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n\n<hr>\n<p dir=\"auto\">Add a 👍 <a href=\"https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\" rel=\"nofollow\">reaction</a> to <a href=\"https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc\">pull requests you find important</a>.</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/331359",
            "title": "python312Packages.pytest-docker: init at 3.1.1",
            "date_modified": "2024-08-14T21:19:48.000Z",
            "date_published": "2024-07-31T19:42:38.000Z",
            "author": {
                "name": "ByteSudoer",
                "url": "https://github.com/ByteSudoer"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/4659562?u=ccc5802ffd59ab51fb35e5a86c69a034800b829a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h6 dir=\"auto\">Description of changes</h6>\n\n<p dir=\"auto\">Added package for <a href=\"https://www.docker.com/products/docker-desktop/\" rel=\"nofollow\">https://www.docker.com/products/docker-desktop/</a></p>\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> aarch64-darwin</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> For non-Linux: Is <code class=\"notranslate\">sandbox = true</code> set in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2205-release-notes\">22.05 Release Notes (or backporting 21.11 Release notes)</a>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Release notes changes) Ran <code class=\"notranslate\">nixos/doc/manual/md-to-db.sh</code> to update generated release notes</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n",
            "url": "https://github.com/NixOS/nixpkgs/pull/165363",
            "title": "Add Docker Desktop",
            "date_modified": "2024-03-20T21:08:29.000Z",
            "date_published": "2022-03-23T03:55:04.000Z",
            "author": {
                "name": "steinybot",
                "url": "https://github.com/steinybot"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/104329992?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Description of changes</h2>\n<p dir=\"auto\">This module supports declaratively creating docker networks and supports<br>\nall the standard arguments that the CLI tool accepts. It uses systemd to<br>\ndo this. Networks are also removed upon systemd service stop.</p>\n<p dir=\"auto\">For the test I just ran the docker test, as well as wrote an addition docker-network.nix test.</p>\n<h2 dir=\"auto\">Things done</h2>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> For non-Linux: Is <code class=\"notranslate\">sandbox = true</code> set in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2305.section.md\">23.05 Release notes</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n",
            "url": "https://github.com/NixOS/nixpkgs/pull/255035",
            "title": "nixos/docker: Add module for network",
            "date_modified": "2024-07-04T15:36:43.000Z",
            "date_published": "2023-09-13T23:39:33.000Z",
            "author": {
                "name": "agentx3",
                "url": "https://github.com/agentx3"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1675190?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h6 dir=\"auto\">Description of changes</h6>\n<p dir=\"auto\">The docs were never updated when the type of the <code class=\"notranslate\">extraConfig</code> option was changed.</p>\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> For non-Linux: Is <code class=\"notranslate\">sandbox = true</code> set in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2205-release-notes\">22.05 Release Notes (or backporting 21.11 Release notes)</a>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Release notes changes) Ran <code class=\"notranslate\">nixos/doc/manual/md-to-db.sh</code> to update generated release notes</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n",
            "url": "https://github.com/NixOS/nixpkgs/pull/166964",
            "title": "nixos/docker-registry: fix extraConfig docs",
            "date_modified": "2024-07-04T15:12:17.000Z",
            "date_published": "2022-04-02T20:12:27.000Z",
            "author": {
                "name": "Prillan",
                "url": "https://github.com/Prillan"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/7343721?u=d25c69e470fdf900f6b9e4c6eaa7a93b2dd15bc4&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h6 dir=\"auto\">Description of changes</h6>\n<p dir=\"auto\">nix-prefetch-docker failed to run when the target Docker image didn't exist for the host platform, regardless of the target platform specified for the image.</p>\n<div class=\"highlight highlight-text-shell-session notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ nix-prefetch-docker --json pihole/pihole 2023.02.1\nFATA[0001] Error parsing manifest for image: choosing image instance: no image found in manifest list for architecture amd64, variant &quot;&quot;, OS darwin\"><pre class=\"notranslate\">$ <span class=\"pl-s1\">nix-prefetch-docker --json pihole/pihole 2023.02.1</span>\n<span class=\"pl-c1\">FATA[0001] Error parsing manifest for image: choosing image instance: no image found in manifest list for architecture amd64, variant \"\", OS darwin</span></pre></div>\n<p dir=\"auto\">The failure occurred because some calls to the skopeo CLI didn't specify the target OS and architecture. This change fixes the problem by wrapping every call to skopeo.</p>\n\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> For non-Linux: Is <code class=\"notranslate\">sandbox = true</code> set in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2305-release-notes\">23.05 Release Notes (or backporting 22.11 Release notes)</a>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n",
            "url": "https://github.com/NixOS/nixpkgs/pull/216188",
            "title": "nix-prefetch-docker: fix cross-platform use",
            "date_modified": "2024-07-04T15:25:41.000Z",
            "date_published": "2023-02-13T17:12:28.000Z",
            "author": {
                "name": "midchildan",
                "url": "https://github.com/midchildan"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/18373623?u=482a3e8747297c9fc9931ab4d0747f72e92d78fe&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Description of changes</h2>\n<p dir=\"auto\">Added options for randomizedDelaySec and persistent to the systemd timer, these mirror nix.gc</p>\n\n<h2 dir=\"auto\">Things done</h2>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li>For non-Linux: Is sandboxing enabled in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = relaxed</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = true</code></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2405.section.md\">24.05 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2305.section.md\">23.05</a> and <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11</a> Release notes)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n\n<hr>\n<p dir=\"auto\">Add a 👍 <a href=\"https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\" rel=\"nofollow\">reaction</a> to <a href=\"https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc\">pull requests you find important</a>.</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/301547",
            "title": "docker: add auto prune randomizedDelaySec and persistent options",
            "date_modified": "2024-04-04T13:58:00.000Z",
            "date_published": "2024-04-04T13:32:53.000Z",
            "author": {
                "name": "mrbrownt",
                "url": "https://github.com/mrbrownt"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2084639?u=224890883ad8bc8b5131ab89957dcda9627fa27c&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Description of changes</h2>\n<p dir=\"auto\">I packaged the python app script <code class=\"notranslate\">docker-systemctl-replacement</code>. It's my first python lib packaging, so not sure if I have done it right.</p>\n<p dir=\"auto\">Also I'm not sure about the binary name, as the app has the bin <code class=\"notranslate\">systemctl.py</code> but <a href=\"https://github.com/gdraheim/docker-systemctl-replacement\">the usage is described</a> as (&amp; makes more sense) to symlink it as bin name <code class=\"notranslate\">systemctl</code> 🤔</p>\n<h2 dir=\"auto\">Things done</h2>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li>For non-Linux: Is sandboxing enabled in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = relaxed</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">sandbox = true</code></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2405.section.md\">24.05 Release Notes</a> (or backporting <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2305.section.md\">23.05</a> and <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/doc/manual/release-notes/rl-2311.section.md\">23.11</a> Release notes)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n\n<hr>\n<p dir=\"auto\">Add a 👍 <a href=\"https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/\" rel=\"nofollow\">reaction</a> to <a href=\"https://github.com/NixOS/nixpkgs/pulls?q=is%3Aopen+sort%3Areactions-%2B1-desc\">pull requests you find important</a>.</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/282702",
            "title": "init: docker-systemctl-replacement at 1.5.7417",
            "date_modified": "2024-01-23T15:59:11.000Z",
            "date_published": "2024-01-21T21:51:43.000Z",
            "author": {
                "name": "tennox",
                "url": "https://github.com/tennox"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/144553?u=3c97d2c4591c9e0acf0ac7ac9a0d6a89172ffef9&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Extends <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"406228064\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/55179\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/55179/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/55179\">#55179</a></p>\n<h6 dir=\"auto\">Motivation for this change</h6>\n<p dir=\"auto\">I needed to be able to set some extra flags for my personal server, and instead of adding loads of extra cruft to the <code class=\"notranslate\">extraFlags</code> field, I decided to just add new options for them.</p>\n<p dir=\"auto\">The options I have added are</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">devices</code> (for device nodes like <code class=\"notranslate\">/dev/dvb</code>)</li>\n<li><code class=\"notranslate\">hostname</code> (for when you really need to change the container's internal hostname)</li>\n<li><code class=\"notranslate\">labels</code> (for labelling containers, especially useful with træfik's docker mode)</li>\n<li><code class=\"notranslate\">network</code> (for explicitely defining the primary network to join, see below)</li>\n</ul>\n<p dir=\"auto\">I'm open to suggestions as to whether some of these should be done in a different way, especially with regards to whether <code class=\"notranslate\">devices</code> should be an attribute set (though if that's the case, should other similars like <code class=\"notranslate\">volumes</code> change as well?).</p>\n<p dir=\"auto\">I've also added some changes to how the container is launched. Previously, systemd called <code class=\"notranslate\">docker run --rm</code>, which pulls the image if it doesn't already exist, creates the container, starts it (attached to stdout), then removes it when the container closes.<br>\nWith my tweaked logic, <code class=\"notranslate\">docker pull</code> and <code class=\"notranslate\">docker create</code> are now ExecStartPre steps, and <code class=\"notranslate\">docker start -n</code> actually launches the container. I feel this is better for a couple of reasons:</p>\n<ul dir=\"auto\">\n<li>the ExecStart command does one thing and one thing alone, launching the container</li>\n<li>I was experimenting with changes to allow nix-defined software networks, and doing it this way around lets us inject other commands between container creation and container launch, which is mandatory to support this - docker only lets you join containers to <em>extra</em> networks by doing <code class=\"notranslate\">docker network connect</code> <em>after</em> the container has been initialised, not <em>while</em> you're creating it. (I'm not ready to commit this support yet, fwiw)</li>\n</ul>\n<h6 dir=\"auto\">Things done</h6>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tested using sandboxing (<a href=\"http://nixos.org/nixos/manual/options.html#opt-nix.useSandbox\" rel=\"nofollow\">nix.useSandbox</a> on NixOS, or option <code class=\"notranslate\">sandbox</code> in <a href=\"http://nixos.org/nix/manual/#sec-conf-file\" rel=\"nofollow\"><code class=\"notranslate\">nix.conf</code></a> on non-NixOS)</li>\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> NixOS</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> macOS</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> other Linux distributions</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested via one or more NixOS test(s) if existing and applicable for the change (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all pkgs that depend on this change using <code class=\"notranslate\">nix-shell -p nix-review --run \"nix-review wip\"</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested execution of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Determined the impact on package closure size (by running <code class=\"notranslate\">nix path-info -S</code> before and after)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Assured whether relevant documentation is up to date</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/.github/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n<hr>",
            "url": "https://github.com/NixOS/nixpkgs/pull/63241",
            "title": "docker-containers: More container options, and tweaks to launch logic",
            "date_modified": "2024-03-20T20:49:14.000Z",
            "date_published": "2019-06-16T20:32:44.000Z",
            "author": {
                "name": "duckfullstop",
                "url": "https://github.com/duckfullstop"
            }
        }
    ]
}