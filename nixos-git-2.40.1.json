{
    "version": "https://jsonfeed.org/version/1",
    "title": "NixOS Package PRs for git-2.40.1",
    "home_page_url": "https://pbek.github.io/github-search-rss/nixos-git-2.40.1.json",
    "feed_url": "https://pbek.github.io/github-search-rss/nixos-git-2.40.1.json",
    "description": "NixOS Package PRs for git-2.40.1 on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2746374?u=119fd2407fa36292bee85ff07671c3367c120311&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Flake lock file updates:</p>\n<ul dir=\"auto\">\n<li>Updated <code class=\"notranslate\">np</code>: <code class=\"notranslate\">darwin</code> <g-emoji class=\"g-emoji\" alias=\"arrow_right\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/27a1.png\">➡️</g-emoji> ``<br>\n'github:lnl7/nix-darwin/025912529dd0b31dead95519e944ea05f1ad56f2' (2023-04-10)<br>\n→ 'github:lnl7/nix-darwin/b8c286c82c6b47826a6c0377e7017052ad91353c' (2023-05-22)</li>\n<li>Updated <code class=\"notranslate\">np</code>: <code class=\"notranslate\">fenix</code> <g-emoji class=\"g-emoji\" alias=\"arrow_right\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/27a1.png\">➡️</g-emoji> ``<br>\n'github:nix-community/fenix/94e14fb51056a020a7d8cf44518cca09ba270363' (2023-04-15)<br>\n→ 'github:nix-community/fenix/cd56ae0389d59084fad87be375bc480e3874cade' (2023-05-27)</li>\n<li>Updated <code class=\"notranslate\">np</code>: <code class=\"notranslate\">fenix/rust-analyzer-src</code> <g-emoji class=\"g-emoji\" alias=\"arrow_right\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/27a1.png\">➡️</g-emoji> ``<br>\n'github:rust-lang/rust-analyzer/b218009f46dd012abcd2d9c2656c3dc498075368' (2023-04-14)<br>\n→ 'github:rust-lang/rust-analyzer/1b5523a8cdc46dfdc5170203cf6bc4e65f4515f6' (2023-05-26)</li>\n<li>Updated <code class=\"notranslate\">np</code>: <code class=\"notranslate\">home-manager</code> <g-emoji class=\"g-emoji\" alias=\"arrow_right\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/27a1.png\">➡️</g-emoji> ``<br>\n'github:nix-community/home-manager/40ebb62101c83de81e5fd7c3cfe5cea2ed21b1ad' (2023-04-15)<br>\n→ 'github:nix-community/home-manager/2d963854ae2499193c0c72fd67435fee34d3e4fd' (2023-05-27)</li>\n<li>Updated <code class=\"notranslate\">np</code>: <code class=\"notranslate\">neovim-flake</code> <g-emoji class=\"g-emoji\" alias=\"arrow_right\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/27a1.png\">➡️</g-emoji> ``<br>\n'github:neovim/neovim/54dab9ed9e200f7c5bcac4a8f4901770fa15fa4f?dir=contrib' (2023-04-16)<br>\n→ 'github:neovim/neovim/e41b2e34b46a806b0fc59914263f8f4af9ac62f1?dir=contrib' (2023-05-28)</li>\n<li>Updated <code class=\"notranslate\">np</code>: <code class=\"notranslate\">nixpkgs</code> <g-emoji class=\"g-emoji\" alias=\"arrow_right\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/27a1.png\">➡️</g-emoji> ``<br>\n'github:nixos/nixpkgs/abe7316dd51a313ce528972b104f4f04f56eefc4' (2023-04-14)<br>\n→ 'github:nixos/nixpkgs/e10802309bf9ae351eb27002c85cfdeb1be3b262' (2023-05-27)</li>\n<li>Updated <code class=\"notranslate\">np</code>: <code class=\"notranslate\">nur</code> <g-emoji class=\"g-emoji\" alias=\"arrow_right\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/27a1.png\">➡️</g-emoji> ``<br>\n'github:nix-community/nur/acc7c1778eb3e81523da0e4ba334110809eaf0ac' (2023-04-16)<br>\n→ 'github:nix-community/nur/7f968b1e38101f3acc89cc7971f2662990391536' (2023-05-28)</li>\n<li>Updated <code class=\"notranslate\">np</code>: <code class=\"notranslate\">nushell-src</code> <g-emoji class=\"g-emoji\" alias=\"arrow_right\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/27a1.png\">➡️</g-emoji> ``<br>\n'github:nushell/nushell/6b3236715b56450fdfdebed0927d96b72730d3d2' (2023-04-16)<br>\n→ 'github:nushell/nushell/3005fe10e54a247de843e01f68c98c4b53a17148' (2023-05-27)</li>\n</ul>",
            "url": "https://github.com/EdenEast/nyx/pull/81",
            "title": "chore(flake): Automatic flake update",
            "date_modified": "2023-05-28T05:12:43.000Z",
            "date_published": "2023-04-23T05:13:24.000Z",
            "author": {
                "name": "EdenEast",
                "url": "https://github.com/EdenEast"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/314564?u=2b23b8b25c888f248f04be073e6b4994f932f7b7&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h6 dir=\"auto\">Description of changes</h6>\n<p dir=\"auto\">This is a revert of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1698753598\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/230386\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/230386/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/230386\">#230386</a> and reintroduction of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1682162029\" data-permission-text=\"Title is private\" data-url=\"https://github.com/NixOS/nixpkgs/issues/228047\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/NixOS/nixpkgs/pull/228047/hovercard\" href=\"https://github.com/NixOS/nixpkgs/pull/228047\">#228047</a>.</p>\n<p dir=\"auto\">I spent all the day debugging this with symbols and shit. This is a Nix bug, <code class=\"notranslate\">renameat2</code> is called with the wrong arguments and causes a XDEV error, if you patch Nix with:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"From 4886c5db115ac4c8d8a78dbaa62729f070efe6f9 Mon Sep 17 00:00:00 2001\nFrom: Raito Bezarius &lt;masterancpp@gmail.com&gt;\nDate: Wed, 24 May 2023 21:16:44 +0200\nSubject: [PATCH] localStore: do not cleanup for disk full situations for now\n\n---\n src/libstore/build/local-derivation-goal.cc | 1 +\n 1 file changed, 1 insertion(+)\n\ndiff --git a/src/libstore/build/local-derivation-goal.cc b/src/libstore/build/local-derivation-goal.cc\nindex 7929cfe35..0c78710db 100644\n--- a/src/libstore/build/local-derivation-goal.cc\n+++ b/src/libstore/build/local-derivation-goal.cc\n@@ -315,6 +315,7 @@ void LocalDerivationGoal::cleanupPostChildKill()\n \n bool LocalDerivationGoal::cleanupDecideWhetherDiskFull()\n {\n+    return false;\n     bool diskFull = false;\n \n     /* Heuristically check whether the build failure may have\n-- \n2.40.1\"><pre class=\"notranslate\"><code class=\"notranslate\">From 4886c5db115ac4c8d8a78dbaa62729f070efe6f9 Mon Sep 17 00:00:00 2001\nFrom: Raito Bezarius &lt;masterancpp@gmail.com&gt;\nDate: Wed, 24 May 2023 21:16:44 +0200\nSubject: [PATCH] localStore: do not cleanup for disk full situations for now\n\n---\n src/libstore/build/local-derivation-goal.cc | 1 +\n 1 file changed, 1 insertion(+)\n\ndiff --git a/src/libstore/build/local-derivation-goal.cc b/src/libstore/build/local-derivation-goal.cc\nindex 7929cfe35..0c78710db 100644\n--- a/src/libstore/build/local-derivation-goal.cc\n+++ b/src/libstore/build/local-derivation-goal.cc\n@@ -315,6 +315,7 @@ void LocalDerivationGoal::cleanupPostChildKill()\n \n bool LocalDerivationGoal::cleanupDecideWhetherDiskFull()\n {\n+    return false;\n     bool diskFull = false;\n \n     /* Heuristically check whether the build failure may have\n-- \n2.40.1\n</code></pre></div>\n<p dir=\"auto\">You can discover that the problem is that you never had <code class=\"notranslate\">kbd.dev</code> in your closure and no bootstrap seeds stuff, so you cannot rebootstrap everything. :)</p>\n<p dir=\"auto\">So while it's useful to perform the cleanup I am doing, I will remove this and reintroduce diskless VMs without them for now.</p>\n<h6 dir=\"auto\">Things done</h6>\n\n<ul class=\"contains-task-list\">\n<li>Built on platform(s)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> x86_64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-linux</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> x86_64-darwin</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> aarch64-darwin</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> For non-Linux: Is <code class=\"notranslate\">sandbox = true</code> set in <code class=\"notranslate\">nix.conf</code>? (See <a href=\"https://nixos.org/manual/nix/stable/command-ref/conf-file.html\" rel=\"nofollow\">Nix manual</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested, as applicable:\n<ul dir=\"auto\">\n<li><a href=\"https://nixos.org/manual/nixos/unstable/index.html#sec-nixos-tests\" rel=\"nofollow\">NixOS test(s)</a> (look inside <a href=\"https://github.com/NixOS/nixpkgs/blob/master/nixos/tests\">nixos/tests</a>)</li>\n<li>and/or <a href=\"https://nixos.org/manual/nixpkgs/unstable/#sec-package-tests\" rel=\"nofollow\">package tests</a></li>\n<li>or, for functions and \"core\" functionality, tests in <a href=\"https://github.com/NixOS/nixpkgs/blob/master/lib/tests\">lib/tests</a> or <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/test\">pkgs/test</a></li>\n<li>made sure NixOS tests are <a href=\"https://nixos.org/manual/nixpkgs/unstable/#ssec-nixos-tests-linking\" rel=\"nofollow\">linked</a> to the relevant packages</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested compilation of all packages that depend on this change using <code class=\"notranslate\">nix-shell -p nixpkgs-review --run \"nixpkgs-review rev HEAD\"</code>. Note: all changes have to be committed, also see <a href=\"https://github.com/Mic92/nixpkgs-review#usage\">nixpkgs-review usage</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tested basic functionality of all binary files (usually in <code class=\"notranslate\">./result/bin/</code>)</li>\n<li><a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md#generating-2305-release-notes\">23.05 Release Notes (or backporting 22.11 Release notes)</a>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Package updates) Added a release notes entry if the change is major or breaking</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module updates) Added a release notes entry if the change is significant</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> (Module addition) Added a release notes entry if adding a new NixOS module</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Fits <a href=\"https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</li>\n</ul>\n\n<h3 dir=\"auto\">Original thoughts</h3>\n<p dir=\"auto\">Now I have more time to deal with the cross-device link issues that arised.</p>\n<p dir=\"auto\"><strong>Context</strong>:</p>\n<p dir=\"auto\">Cross-device link errors are: <strong>Hard</strong> links performed across different \"filesystems\" or \"mountpoints\".</p>\n<p dir=\"auto\">Source of \"different filesystems\":</p>\n<ul dir=\"auto\">\n<li>In a VM context, we mount <code class=\"notranslate\">/nix/.ro-store</code> and <code class=\"notranslate\">/nix/.rw-store</code>. That's already <strong>2</strong> different filesystems and mountpoints.</li>\n<li>Then, we tie them together into a <code class=\"notranslate\">/nix/store</code> via <strong>overlayfs</strong> (again another filesystem) via <code class=\"notranslate\">postDeviceCommand</code>, <strong>but</strong>, an installation CD-DVD profile, will <strong>do it too!</strong> via <code class=\"notranslate\">mkImageMediaOverride</code> in its filesystem entries.</li>\n<li>Then, under <code class=\"notranslate\">boot.readOnlyNixStore = true;</code>, we bind mount <code class=\"notranslate\">/nix/store</code> on <code class=\"notranslate\">/nix/store</code></li>\n</ul>\n<p dir=\"auto\">As you can see, we have multiple threats from multiple angles.~~~</p>",
            "url": "https://github.com/NixOS/nixpkgs/pull/233847",
            "title": "nixos/qemu-vm: fix diskless VMs (round 2)",
            "date_modified": "2023-05-26T18:45:43.000Z",
            "date_published": "2023-05-24T16:06:53.000Z",
            "author": {
                "name": "RaitoBezarius",
                "url": "https://github.com/RaitoBezarius"
            }
        }
    ]
}